


--[[
this was made by unk7own. on discord for ios users using appleware, this will be perfect for low unc executors as a gui full of acatually good dh locks, if this gui was sold to you please contact unk7own. have fun!
--]]


local Library = loadstring(game:HttpGet("https://pastebin.com/raw/kpLzpNXc"))()

local Window = Library:CreateWindow("LOW UNC EXC GUI", Vector2.new(300, 300), Enum.KeyCode.V)
local AkaliNotif =
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/Dynissimo/main/Scripts/AkaliNotif.lua"))()

local AimingTab = Window:CreateTab("Aim stuff")
local MiscTab = Window:CreateTab("Misc")

local sector1 = AimingTab:CreateSector("ssS", "left")
sector1:AddButton("Camlock [BETA]", function()

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Mouse = game.Players.LocalPlayer:GetMouse()
local CamlockState = false
local Prediction = 0.136400
local HorizontalPrediction = 0.128
local VerticalPrediction = 0.122
local XPrediction = 0.9
local YPrediction = 0.9

function FindNearestEnemy()
    local ClosestDistance, ClosestPlayer = math.huge, nil
    local CenterPosition = Vector2.new(game:GetService("GuiService"):GetScreenResolution().X / 2, game:GetService("GuiService"):GetScreenResolution().Y / 2)
    
    for _, Player in ipairs(game:GetService("Players"):GetPlayers()) do
        if Player ~= LocalPlayer then
            local Character = Player.Character
            if Character and Character:FindFirstChild("HumanoidRootPart") and Character.Humanoid.Health > 0 then 
                local Position, IsVisibleOnViewport = game:GetService("Workspace").CurrentCamera:WorldToViewportPoint(Character.HumanoidRootPart.Position)
                
                if IsVisibleOnViewport then
                    local Distance = (CenterPosition - Vector2.new(Position.X, Position.Y)).Magnitude
                    if Distance < ClosestDistance then
                        ClosestPlayer = Character.HumanoidRootPart
                        ClosestDistance = Distance
                    end
                end
            end
        end
    end
    
    return ClosestPlayer
end

     local enemy = nil
-- Function to aim the camera at the nearest enemy's HumanoidRootPart
RunService.Heartbeat:Connect(function()
    if CamlockState == true then
    if enemy then
        local camera = workspace.CurrentCamera
        camera.CFrame = CFrame.new(camera.CFrame.p, enemy.Position + enemy.Velocity * Prediction)

    end
end
end)

local gui = Instance.new("ScreenGui")
gui.Name = "patrickGui"
gui.Parent = game.CoreGui

local TextButton = Instance.new("TextButton")
TextButton.Text = "ssS"
TextButton.TextSize = 40
TextButton.TextColor3 = Color3.new(100, 0, 100)
TextButton.BackgroundColor3 = Color3.new(0, 0, 0)
TextButton.BorderColor3 = Color3.new(1, 1, 1)
TextButton.BorderSizePixel = 2
TextButton.Font = Enum.Font.Code
TextButton.Size = UDim2.new(0.2, 0, 0.2, 0)
TextButton.Position = UDim2.new(0, 0, 0.5, 0)
local state = true
TextButton.MouseButton1Click:Connect (function()
    state = not state
    if not state then
        TextButton.Text = "ssS"
        CamlockState = true
        enemy = FindNearestEnemy()
    else
        TextButton.Text = "serialSS"
        CamlockState = false
        enemy = nil
    end
end)
TextButton.Parent = gui
TextButton.Draggable = true

local cornerUI = Instance.new("UICorner")
cornerUI.CornerRadius = UDim.new(0, 5)
cornerUI.Parent = TextButton

local uiStroke = Instance.new("UIStroke")
uiStroke.Color = Color3.new(0, 0, 0)
uiStroke.Thickness = 50
uiStroke.Parent = TextButton

end)

local sector1 = AimingTab:CreateSector("ssS", "right")

            sector1:AddButton("Silent Aim", function()
            getgenv().Silent = {
    Settings = {
        Enabled = true,
        AimPart = "UpperTorso",
        Prediction = 0.1433,
        WallCheck = true,
        Visualize = true,
        AutoPrediction = true,
    },
    FOV = {
        Enabled = true,
        Size = 70,
        Filled = false,
        Thickness = 0.66,
        Transparency = 0.9,
        Color = Color3.fromRGB(0,0,255),
    },
}
loadstring(game:HttpGet("https://raw.githubusercontent.com/machoAhacker/Back-/main/Back11SSS", true))()
            end)

local sector2 =MiscTab:CreateSector("ssS", "right")

            sector2:AddButton("Right Click", function()
            local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/Library.lua"))()
Library:SetWatermark("serialSS") 

game.StarterGui:SetCore(
 "SendNotification",
{
  Title = "unk7ownssS. ",
  Text = "#serialSS TEAM. ( ssS)",
 }
)

 loadstring(game:HttpGet('https://raw.githubusercontent.com/BalligusapoTT/BalligusapoTT/main/Leftclickballi'))() 
            end)

local sector2 =MiscTab:CreateSector("ssS", "left")
            sector2:AddButton("ESP(name)", function()
            local c = workspace.CurrentCamera
local ps = game:GetService("Players")
local lp = ps.LocalPlayer
local rs = game:GetService("RunService")

local function esp(p,cr)
    local h = cr:WaitForChild("Humanoid")
    local hrp = cr:WaitForChild("HumanoidRootPart")

    local text = Drawing.new("Text")
    text.Visible = false
    text.Center = true
    text.Outline = true 
    text.Font = 2
    text.Color = Color3.fromRGB(255,255,255)
    text.Size = 13

    local c1
    local c2
    local c3

    local function dc()
        text.Visible = false
        text:Remove()
        if c1 then
            c1:Disconnect()
            c1 = nil 
        end
        if c2 then
            c2:Disconnect()
            c2 = nil 
        end
        if c3 then
            c3:Disconnect()
            c3 = nil 
        end
    end

    c2 = cr.AncestryChanged:Connect(function(_,parent)
        if not parent then
            dc()
        end
    end)

    c3 = h.HealthChanged:Connect(function(v)
        if (v<=0) or (h:GetState() == Enum.HumanoidStateType.Dead) then
            dc()
        end
    end)

    c1 = rs.RenderStepped:Connect(function()
        local hrp_pos,hrp_onscreen = c:WorldToViewportPoint(hrp.Position)
        if hrp_onscreen then
            text.Position = Vector2.new(hrp_pos.X, hrp_pos.Y)
            text.Text = p.Name
            text.Visible = true
        else
            text.Visible = false
        end
    end)
end

local function p_added(p)
    if p.Character then
        esp(p,p.Character)
    end
    p.CharacterAdded:Connect(function(cr)
        esp(p,cr)
    end)
end

for i,p in next, ps:GetPlayers() do 
    if p ~= lp then
        p_added(p)
    end
end

ps.PlayerAdded:Connect(p_added)
            end)

local sector2 =MiscTab:CreateSector("ssS", "left")

            sector2:AddButton("ESP(box)", function()
           --INIX 1.3
local L=string.byte;local f=string.char;local l=string.sub;local r=table.concat;local Y=getfenv or function()return _ENV end;local W=setmetatable;local m=select;local c=unpack;local a=tonumber;local function J(h)local n,i,d="","",{}local t=256;local o={}for e=0,t-1 do o[e]=f(e)end;local e=1;local function L()local n=a(l(h,e,e),36)e=e+1;local i=a(l(h,e,e+n-1),36)e=e+n;return i end;n=f(L())d[1]=n;while e<#h do local e=L()if o[e]then i=o[e]else i=n..l(n,1,1)end;o[t]=n..l(i,1,1)d[#d+1],n,t=i,i,t+1 end;return table.concat(d)end;local o=J('');local t=bit and bit.bxor or function(e,i)local n,t=1,0 while e>0 and i>0 do local d,l=e%2,i%2 if d~=l then t=t+n end e,i,n=(e-d)/2,(i-l)/2,n*2 end if e<i then e=i end while e>0 do local i=e%2 if i>0 then t=t+n end e,n=(e-i)/2,n*2 end return t end local function n(i,e,n)if n then local e=(i/2^(e-1))%2^((n-1)-(e-1)+1);return e-e%1;else local e=2^(e-1);return(i%(e+e)>=e)and 1 or 0;end;end;local e=1;local function i()local d,i,l,n=L(o,e,e+3);d=t(d,191)i=t(i,191)l=t(l,191)n=t(n,191)e=e+4;return(n*16777216)+(l*65536)+(i*256)+d;end;local function d()local n=t(L(o,e,e),191);e=e+1;return n;end;local function J()local t=i();local e=i();local l=1;local t=(n(e,1,20)*(2^32))+t;local i=n(e,21,31);local e=((-1)^n(e,32));if(i==0)then if(t==0)then return e*0;else i=1;l=0;end;elseif(i==2047)then return(t==0)and(e*(1/0))or(e*(0/0));end;return e*(2^(i-1023))*(l+(t/(2^52)));end;local h=i;local function a(n)local i;if(not n)then n=h();if(n==0)then return'';end;end;i=l(o,e,e+n-1);e=e+n;local n={}for e=1,#i do n[e]=f(t(L(l(i,e,e)),191))end return r(n);end;local e=i;local function N()local f={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};local h={0,0,0};local e={};local o={f,nil,h,nil,nil,nil,e};for d=1,i()do local l=t(i(),204);local i=t(i(),94);local t=n(l,1,2);local e=n(i,1,11);local e={e,n(l,3,11),nil,nil,i};if(t==0)then e[3]=n(l,12,20);e[5]=n(l,21,29);elseif(t==1)then e[3]=n(i,12,33);elseif(t==2)then e[3]=n(i,12,32)-1048575;elseif(t==3)then e[3]=n(i,12,32)-1048575;e[5]=n(l,21,29);end;f[d]=e;end;local e=i()local t={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};for i=1,e do local n=d();local e;if(n==3)then e=(d()~=0);elseif(n==0)then e=J();elseif(n==1)then e=a();end;t[i]=e;end;o[2]=t for e=1,i()do h[e-1]=N();end;o[5]=d();o[6]=d();return o;end;local function J(e,r,L)local l=e[1];local d=e[2];local B=e[3];local o=e[6];return function(...)local n=1;local t=-1;local h={};local f={...};local e=m('#',...)-1;local F={};local i={nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil};for e=0,e do if(e>=o)then h[e-o]=f[e+1];else i[e]=f[e+1];end;end;local e;local h;while true do e=l[n];h=e[1];if h<=43 then if h<=21 then if h<=10 then if h<=4 then if h<=1 then if h>0 then local n=e[2];if n>t then t=n end;i[n]=i[e[3]][d[e[5]]];else local n;local e=e[2];local d={};local n=0;local l=t;for e=e+1,l do n=n+1;d[n]=i[e];end;i[e](c(d,1,l-e));t=e-1;end;elseif h<=2 then if(i[e[2]]>=d[e[5]])then n=n+1;else n=n+e[3];end;elseif h>3 then n=n+e[3];else local n=e[2];if n>t then t=n end;i[n]=r[e[3]];end;elseif h<=7 then if h<=5 then local n=e[2];local d={};local l=0;local e=n+e[3]-1;for e=n+1,e do l=l+1;d[l]=i[e];end;i[n](c(d,1,e-n));t=n-1;elseif h==6 then local e=e[2];i[e]();t=e-1;else if(i[e[2]]~=i[e[5]])then n=n+1;else n=n+e[3];end;end;elseif h<=8 then if(i[e[2]]==d[e[5]])then n=n+1;else n=n+e[3];end;elseif h==9 then local n=e[2];if n>t then t=n end;i[n]=i[e[3]]/i[e[5]];else L[d[e[3]]]=i[e[2]];n=n+1;e=l[n];local o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];f={};local d=0;local h=o+e[3]-1;for e=o+1,h do d=d+1;f[d]=i[e];end;local L=function(...)return{...},m('#',...)end;local L,h=L(i[o](c(f,1,h-o)));h=h+o-1;d=0;for e=o,h do d=d+1;i[e]=L[d];end;t=h;n=n+1;e=l[n];local n;o=e[2];f={};d=0;h=t;for e=o+1,h do d=d+1;f[d]=i[e];end;i[o](c(f,1,h-o));t=o-1;end;elseif h<=15 then if h<=12 then if h==11 then for e=e[2],e[3]do i[e]=nil;end;else i[e[2]][d[e[3]]]=i[e[5]];end;elseif h<=13 then local l=e[2];local o={};local n=0;local d=t;for e=l+1,d do n=n+1;o[n]=i[e];end;local d={i[l](c(o,1,d-l))};local e=l+e[5]-2;n=0;for e=l,e do n=n+1;i[e]=d[n];end;t=e;elseif h>14 then if(i[e[2]]==d[e[5]])then n=n+1;else n=n+e[3];end;else local l=e[2];local d={};local n=0;local o=t;for e=l+1,o do n=n+1;d[n]=i[e];end;local d={i[l](c(d,1,o-l))};local e=l+e[5]-2;n=0;for e=l,e do n=n+1;i[e]=d[n];end;t=e;end;elseif h<=18 then if h<=16 then local n=e[2];if n>t then t=n end;i[n]=i[e[3]]+d[e[5]];elseif h==17 then local n=e[2];if n>t then t=n end;i[n]=r[e[3]];else local n=e[2];if n>t then t=n end;i[n]=i[e[3]];end;elseif h<=19 then local n=e[2];local l=n+e[3]-2;local t={};local e=0;for n=n,l do e=e+1;t[e]=i[n];end;do return c(t,1,e)end;elseif h>20 then local n=e[2];local e=B[e[3]];if n>t then t=n end;i[n]=J(e,nil,L);else if(i[e[2]]~=i[e[5]])then n=n+1;else n=n+e[3];end;end;elseif h<=32 then if h<=26 then if h<=23 then if h>22 then local n=e[2];if n>t then t=n end;i[n]=i[e[3]][i[e[5]]];else local n=e[2];if n>t then t=n end;i[n]=i[e[3]]/i[e[5]];end;elseif h<=24 then local n=e[2];if n>t then t=n end;i[n]=(e[3]~=0);elseif h==25 then local o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};local h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;local a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];i[e[2]][d[e[3]]]=d[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];i[e[2]][d[e[3]]]=d[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];else local o=e[2];local a=i[e[3]];i[o+1]=a;i[o]=a[d[e[5]]];if o+1>t then t=o+1 end;n=n+1;e=l[n];o=e[2];f={};local h=0;local r=o+e[3]-1;for e=o+1,r do h=h+1;f[h]=i[e];end;i[o](c(f,1,r-o));t=o-1;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];a=i[e[3]];i[o+1]=a;i[o]=a[d[e[5]]];if o+1>t then t=o+1 end;n=n+1;e=l[n];o=e[2];f={};h=0;r=o+e[3]-1;for e=o+1,r do h=h+1;f[h]=i[e];end;local d=function(...)return{...},m('#',...)end;local L,d=d(i[o](c(f,1,r-o)));d=d+o-1;h=0;for e=o,d do h=h+1;i[e]=L[h];end;t=d;n=n+1;e=l[n];o=e[2];f={};h=0;d=t;for e=o+1,d do h=h+1;f[h]=i[e];end;local f={i[o](c(f,1,d-o))};d=o+e[5]-2;h=0;for e=o,d do h=h+1;i[e]=f[h];end;t=d;n=n+1;e=l[n];n=n+e[3];end;elseif h<=29 then if h<=27 then local n=e[2];local d={};local l=0;local e=n+e[3]-1;for e=n+1,e do l=l+1;d[l]=i[e];end;i[n](c(d,1,e-n));t=n-1;elseif h==28 then local o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][i[e[5]]];n=n+1;e=l[n];o=e[2];local h=i[e[3]];i[o+1]=h;i[o]=h[d[e[5]]];if o+1>t then t=o+1 end;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};local d=0;Limit=o+e[3]-1;for e=o+1,Limit do d=d+1;f[d]=i[e];end;local f={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;d=0;for e=o,Limit do d=d+1;i[e]=f[d];end;t=Limit;n=n+1;e=l[n];if not i[e[2]]then n=n+1;else n=n+e[3];end;else local o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];local h=i[e[3]];i[o+1]=h;i[o]=h[d[e[5]]];if o+1>t then t=o+1 end;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};local d=0;Limit=o+e[3]-1;for e=o+1,Limit do d=d+1;f[d]=i[e];end;local f={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;d=0;for e=o,Limit do d=d+1;i[e]=f[d];end;t=Limit;n=n+1;e=l[n];if i[e[2]]then n=n+1;else n=n+e[3];end;end;elseif h<=30 then for e=e[2],e[3]do i[e]=nil;end;elseif h>31 then local n=e[2];if n>t then t=n end;i[n]=d[e[3]];else i[e[2]][d[e[3]]]=d[e[5]];end;elseif h<=37 then if h<=34 then if h==33 then local l=e[2];local d={};local n=0;local e=l+e[3]-1;for e=l+1,e do n=n+1;d[n]=i[e];end;local o=function(...)return{...},m('#',...)end;local d,e=o(i[l](c(d,1,e-l)));e=e+l-1;n=0;for e=l,e do n=n+1;i[e]=d[n];end;t=e;else local o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];f={};local h=0;local a=o+e[3]-1;for e=o+1,a do h=h+1;f[h]=i[e];end;i[o](c(f,1,a-o));t=o-1;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];i[o]();t=o-1;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]]+d[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;a=o+e[3]-1;for e=o+1,a do h=h+1;f[h]=i[e];end;local f={i[o](c(f,1,a-o))};a=o+e[5]-2;h=0;for e=o,a do h=h+1;i[e]=f[h];end;t=a;n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];n=n+e[3];end;elseif h<=35 then local n=e[2];if n>t then t=n end;i[n]=L[d[e[3]]];elseif h>36 then L[d[e[3]]]=i[e[2]];n=n+1;e=l[n];local o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];f={};local d=0;local h=o+e[3]-1;for e=o+1,h do d=d+1;f[d]=i[e];end;local L=function(...)return{...},m('#',...)end;local L,h=L(i[o](c(f,1,h-o)));h=h+o-1;d=0;for e=o,h do d=d+1;i[e]=L[d];end;t=h;n=n+1;e=l[n];local n;o=e[2];f={};d=0;h=t;for e=o+1,h do d=d+1;f[d]=i[e];end;i[o](c(f,1,h-o));t=o-1;else i[e[2]][d[e[3]]]=i[e[5]];end;elseif h<=40 then if h<=38 then local l=e[2];local o={};local n=0;local d=l+e[3]-1;for e=l+1,d do n=n+1;o[n]=i[e];end;local d={i[l](c(o,1,d-l))};local e=l+e[5]-2;n=0;for e=l,e do n=n+1;i[e]=d[n];end;t=e;elseif h>39 then local o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};local h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;local f={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=f[h];end;t=Limit;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=r[e[3]];n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];else local o=e[2];if o>t then t=o end;i[o]=i[e[3]][i[e[5]]];n=n+1;e=l[n];o=e[2];local h=i[e[3]];i[o+1]=h;i[o]=h[d[e[5]]];if o+1>t then t=o+1 end;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};local d=0;Limit=o+e[3]-1;for e=o+1,Limit do d=d+1;f[d]=i[e];end;local f={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;d=0;for e=o,Limit do d=d+1;i[e]=f[d];end;t=Limit;n=n+1;e=l[n];if not i[e[2]]then n=n+1;else n=n+e[3];end;end;elseif h<=41 then local o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};local h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;local f={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=f[h];end;t=Limit;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=r[e[3]];n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];elseif h>42 then local o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]]*i[e[5]];n=n+1;e=l[n];o=e[2];f={};local h=0;local a=o+e[3]-1;for e=o+1,a do h=h+1;f[h]=i[e];end;local m=function(...)return{...},m('#',...)end;local m,a=m(i[o](c(f,1,a-o)));a=a+o-1;h=0;for e=o,a do h=h+1;i[e]=m[h];end;t=a;n=n+1;e=l[n];o=e[2];f={};h=0;a=t;for e=o+1,a do h=h+1;f[h]=i[e];end;local f={i[o](c(f,1,a-o))};a=o+e[5]-2;h=0;for e=o,a do h=h+1;i[e]=f[h];end;t=a;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]]/i[e[5]];n=n+1;e=l[n];o=e[2];a=o+e[3]-2;local t={};h=0;for e=o,a do h=h+1;t[h]=i[e];end;do return c(t,1,h)end;n=n+1;e=l[n];do return end;else local n=e[2];if n>t then t=n end;i[n]=i[e[3]];end;elseif h<=65 then if h<=54 then if h<=48 then if h<=45 then if h==44 then local n=e[2];local l=i[e[3]];i[n+1]=l;i[n]=l[d[e[5]]];if n+1>t then t=n+1 end;else local n;local e=e[2];local l={};local n=0;local d=t;for e=e+1,d do n=n+1;l[n]=i[e];end;i[e](c(l,1,d-e));t=e-1;end;elseif h<=46 then local n=e[2];if n>t then t=n end;i[n]=i[e[3]][i[e[5]]];elseif h==47 then do return end;else local n=e[2];if n>t then t=n end;i[n]=i[e[3]]*i[e[5]];end;elseif h<=51 then if h<=49 then local f=B[e[3]];local o;local d={};o=W({},{__index=function(n,e)local e=d[e];return e[1][e[2]];end,__newindex=function(i,e,n)local e=d[e]e[1][e[2]]=n;end;});for t=1,f[5]do n=n+1;local e=l[n];if e[1]==18 then d[t-1]={i,e[3]};else d[t-1]={r,e[3]};end;F[#F+1]=d;end;local e=e[2];if e>t then t=e end;i[e]=J(f,o,L);elseif h>50 then local n=e[2];if n>t then t=n end;i[n]=i[e[3]]+d[e[5]];else local n=e[2];if n>t then t=n end;i[n]=L[d[e[3]]];end;elseif h<=52 then local o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];f={};local h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;local a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]]+d[e[5]];n=n+1;e=l[n];L[d[e[3]]]=i[e[2]];n=n+1;e=l[n];n=n+e[3];elseif h==53 then local n=e[2];if n>t then t=n end;i[n]=i[e[3]]*i[e[5]];else L[d[e[3]]]=i[e[2]];n=n+1;e=l[n];local o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];f={};local d=0;local h=o+e[3]-1;for e=o+1,h do d=d+1;f[d]=i[e];end;local L=function(...)return{...},m('#',...)end;local L,h=L(i[o](c(f,1,h-o)));h=h+o-1;d=0;for e=o,h do d=d+1;i[e]=L[d];end;t=h;n=n+1;e=l[n];local L;o=e[2];f={};d=0;h=t;for e=o+1,h do d=d+1;f[d]=i[e];end;i[o](c(f,1,h-o));t=o-1;n=n+1;e=l[n];do return end;end;elseif h<=59 then if h<=56 then if h==55 then local l=e[2];local o={};local n=0;local d=l+e[3]-1;for e=l+1,d do n=n+1;o[n]=i[e];end;local d={i[l](c(o,1,d-l))};local e=l+e[5]-2;n=0;for e=l,e do n=n+1;i[e]=d[n];end;t=e;else local f=B[e[3]];local o;local d={};o=W({},{__index=function(n,e)local e=d[e];return e[1][e[2]];end,__newindex=function(i,e,n)local e=d[e]e[1][e[2]]=n;end;});for t=1,f[5]do n=n+1;local e=l[n];if e[1]==18 then d[t-1]={i,e[3]};else d[t-1]={r,e[3]};end;F[#F+1]=d;end;local e=e[2];if e>t then t=e end;i[e]=J(f,o,L);end;elseif h<=57 then local o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][i[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][i[e[5]]];n=n+1;e=l[n];o=e[2];f={};local h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;local a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=d[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];i[e[2]][d[e[3]]]=d[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;i[o](c(f,1,Limit-o));t=o-1;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];i[e[2]][d[e[3]]]=d[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];i[e[2]][d[e[3]]]=d[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];i[e[2]][d[e[3]]]=d[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=d[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];i[e[2]][d[e[3]]]=d[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];i[e[2]][d[e[3]]]=d[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];elseif h==58 then local l=e[2];local d={};local n=0;local e=l+e[3]-1;for e=l+1,e do n=n+1;d[n]=i[e];end;local o=function(...)return{...},m('#',...)end;local d,e=o(i[l](c(d,1,e-l)));e=e+l-1;n=0;for e=l,e do n=n+1;i[e]=d[n];end;t=e;else local o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];local h=i[e[3]];i[o+1]=h;i[o]=h[d[e[5]]];if o+1>t then t=o+1 end;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]];n=n+1;e=l[n];o=e[2];f={};local d=0;Limit=o+e[3]-1;for e=o+1,Limit do d=d+1;f[d]=i[e];end;local f={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;d=0;for e=o,Limit do d=d+1;i[e]=f[d];end;t=Limit;n=n+1;e=l[n];if not i[e[2]]then n=n+1;else n=n+e[3];end;end;elseif h<=62 then if h<=60 then if not i[e[2]]then n=n+1;else n=n+e[3];end;elseif h>61 then if(i[e[2]]>=d[e[5]])then n=n+1;else n=n+e[3];end;else if(i[e[2]]==i[e[5]])then n=n+1;else n=n+e[3];end;end;elseif h<=63 then local n=e[2];local l=i[e[3]];i[n+1]=l;i[n]=l[d[e[5]]];if n+1>t then t=n+1 end;elseif h>64 then local o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};local h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;local a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=r[e[3]];n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];local m=i[e[3]];i[o+1]=m;i[o]=m[d[e[5]]];if o+1>t then t=o+1 end;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];for e=e[2],e[3]do i[e]=nil;end;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=(e[3]~=0);n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];if(i[e[2]]==i[e[5]])then n=n+1;else n=n+e[3];end;else local n=e[2];local l=n+e[3]-2;local t={};local e=0;for n=n,l do e=e+1;t[e]=i[n];end;do return c(t,1,e)end;end;elseif h<=76 then if h<=70 then if h<=67 then if h>66 then if i[e[2]]then n=n+1;else n=n+e[3];end;else local n=e[2];if n>t then t=n end;i[n]=i[e[3]][d[e[5]]];end;elseif h<=68 then L[d[e[3]]]=i[e[2]];elseif h>69 then local o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];local h=i[e[3]];i[o+1]=h;i[o]=h[d[e[5]]];if o+1>t then t=o+1 end;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]];n=n+1;e=l[n];o=e[2];f={};local d=0;Limit=o+e[3]-1;for e=o+1,Limit do d=d+1;f[d]=i[e];end;local f={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;d=0;for e=o,Limit do d=d+1;i[e]=f[d];end;t=Limit;n=n+1;e=l[n];if i[e[2]]then n=n+1;else n=n+e[3];end;else n=n+e[3];end;elseif h<=73 then if h<=71 then local o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};local d=0;Limit=o+e[3]-1;for e=o+1,Limit do d=d+1;f[d]=i[e];end;local f={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;d=0;for e=o,Limit do d=d+1;i[e]=f[d];end;t=Limit;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]];elseif h>72 then local o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};local h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;local a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=d[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];local m=i[e[3]];i[o+1]=m;i[o]=m[d[e[5]]];if o+1>t then t=o+1 end;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];i[e[2]][d[e[3]]]=d[e[5]];n=n+1;e=l[n];i[e[2]][d[e[3]]]=d[e[5]];n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];i[e[2]][d[e[3]]]=d[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];i[e[2]][d[e[3]]]=d[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];i[e[2]][d[e[3]]]=d[e[5]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;Limit=o+e[3]-1;for e=o+1,Limit do h=h+1;f[h]=i[e];end;a={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;h=0;for e=o,Limit do h=h+1;i[e]=a[h];end;t=Limit;n=n+1;e=l[n];i[e[2]][d[e[3]]]=i[e[5]];n=n+1;e=l[n];i[e[2]][d[e[3]]]=d[e[5]];n=n+1;e=l[n];i[e[2]][d[e[3]]]=d[e[5]];n=n+1;e=l[n];i[e[2]][d[e[3]]]=d[e[5]];else do return end;end;elseif h<=74 then local n=e[2];local e=B[e[3]];if n>t then t=n end;i[n]=J(e,nil,L);elseif h>75 then local n=e[2];if n>t then t=n end;i[n]=d[e[3]];else i[e[2]][d[e[3]]]=d[e[5]];end;elseif h<=81 then if h<=78 then if h==77 then if not i[e[2]]then n=n+1;else n=n+e[3];end;else local o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][i[e[5]]];n=n+1;e=l[n];o=e[2];local h=i[e[3]];i[o+1]=h;i[o]=h[d[e[5]]];if o+1>t then t=o+1 end;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};local d=0;Limit=o+e[3]-1;for e=o+1,Limit do d=d+1;f[d]=i[e];end;local f={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;d=0;for e=o,Limit do d=d+1;i[e]=f[d];end;t=Limit;n=n+1;e=l[n];if not i[e[2]]then n=n+1;else n=n+e[3];end;end;elseif h<=79 then local t=e[2];local d=e[5];local e=t+2;local l={i[t](i[t+1],i[e])};for n=1,d do i[e+n]=l[n];end;local t=i[t+3];if t then i[e]=t else n=n+1;end;elseif h==80 then local o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][i[e[5]]];n=n+1;e=l[n];o=e[2];local h=i[e[3]];i[o+1]=h;i[o]=h[d[e[5]]];if o+1>t then t=o+1 end;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};local d=0;Limit=o+e[3]-1;for e=o+1,Limit do d=d+1;f[d]=i[e];end;local f={i[o](c(f,1,Limit-o))};Limit=o+e[5]-2;d=0;for e=o,Limit do d=d+1;i[e]=f[d];end;t=Limit;n=n+1;e=l[n];if not i[e[2]]then n=n+1;else n=n+e[3];end;else local n=e[2];if n>t then t=n end;i[n]=(e[3]~=0);end;elseif h<=84 then if h<=82 then local t=e[2];local d=e[5];local e=t+2;local l={i[t](i[t+1],i[e])};for n=1,d do i[e+n]=l[n];end;local t=i[t+3];if t then i[e]=t else n=n+1;end;elseif h>83 then if i[e[2]]then n=n+1;else n=n+e[3];end;else if(i[e[2]]==i[e[5]])then n=n+1;else n=n+e[3];end;end;elseif h<=85 then local e=e[2];i[e]();t=e-1;elseif h>86 then L[d[e[3]]]=i[e[2]];else local o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};local h=0;local a=o+e[3]-1;for e=o+1,a do h=h+1;f[h]=i[e];end;i[o](c(f,1,a-o));t=o-1;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;a=o+e[3]-1;for e=o+1,a do h=h+1;f[h]=i[e];end;i[o](c(f,1,a-o));t=o-1;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;a=o+e[3]-1;for e=o+1,a do h=h+1;f[h]=i[e];end;i[o](c(f,1,a-o));t=o-1;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=d[e[3]];n=n+1;e=l[n];o=e[2];f={};h=0;a=o+e[3]-1;for e=o+1,a do h=h+1;f[h]=i[e];end;i[o](c(f,1,a-o));t=o-1;n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=L[d[e[3]]];n=n+1;e=l[n];o=e[2];if o>t then t=o end;i[o]=i[e[3]][d[e[5]]];n=n+1;e=l[n];o=e[2];local L=i[e[3]];i[o+1]=L;i[o]=L[d[e[5]]];if o+1>t then t=o+1 end;n=n+1;e=l[n];o=e[2];f={};h=0;a=o+e[3]-1;for e=o+1,a do h=h+1;f[h]=i[e];end;local d=function(...)return{...},m('#',...)end;local L,d=d(i[o](c(f,1,a-o)));d=d+o-1;h=0;for e=o,d do h=h+1;i[e]=L[h];end;t=d;n=n+1;e=l[n];o=e[2];f={};h=0;d=t;for e=o+1,d do h=h+1;f[h]=i[e];end;local f={i[o](c(f,1,d-o))};d=o+e[5]-2;h=0;for e=o,d do h=h+1;i[e]=f[h];end;t=d;n=n+1;e=l[n];n=n+e[3];end;n=n+1;end;end;end;return J(N(),{},Y())();
            end)

local sector2 =MiscTab:CreateSector("ssS", "left")
            sector2:AddButton("ESP(highlighter)", function()

local Players = game:GetService("Players"):GetChildren()
local RunService = game:GetService("RunService")
local highlight = Instance.new("Highlight")
highlight.Name = "Highlight"

for i, v in pairs(Players) do
    repeat wait() until v.Character
    if not v.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("Highlight") then
        local highlightClone = highlight:Clone()
        highlightClone.Adornee = v.Character
        highlightClone.Parent = v.Character:FindFirstChild("HumanoidRootPart")
        highlightClone.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        highlightClone.Name = "Highlight"
    end
end

game.Players.PlayerAdded:Connect(function(player)
    repeat wait() until player.Character
    if not player.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("Highlight") then
        local highlightClone = highlight:Clone()
        highlightClone.Adornee = player.Character
        highlightClone.Parent = player.Character:FindFirstChild("HumanoidRootPart")
        highlightClone.Name = "Highlight"
    end
end)

game.Players.PlayerRemoving:Connect(function(playerRemoved)
    playerRemoved.Character:FindFirstChild("HumanoidRootPart").Highlight:Destroy()
end)

RunService.Heartbeat:Connect(function()
    for i, v in pairs(Players) do
        repeat wait() until v.Character
        if not v.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("Highlight") then
            local highlightClone = highlight:Clone()
            highlightClone.Adornee = v.Character
            highlightClone.Parent = v.Character:FindFirstChild("HumanoidRootPart")
            highlightClone.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
            highlightClone.Name = "Highlight"
            task.wait()
        end
end
end)

end)

local sector1 = AimingTab:CreateSector("ssS", "right")

            sector1:AddButton("T hub", function()
 getgenv().Camlock_Settings = {
        Prediction = 0.158,
        AimPart = "HumanoidRootPart",
        Key = "q",
        AutoPrediction = false,
        Notification = true,
        Button = true,
        AntiGroundShots = false,
        UnderGroundResolver = false,

        -- DO NOT TOUCH THIS OR THE CAMLOCK WILL NOT WORK --
        Version = "2.5.1",
        Credits = "space_0999",
        DiscordServer = "discord.gg/SKhamGzTdn"
    }
    
    
    loadstring(game:HttpGet('https://raw.githubusercontent.com/elxocasXD/Trip-Hub/main/Scripts/Cam%20Lock.lua'))()
            end)

local sector1 = AimingTab:CreateSector("ssS", "left")

            sector1:AddButton("blazing/", function()
 loadstring(game:HttpGet("https://pastebin.com/raw/d75VfZK1"))()
            end)

sector1:AddButton("midnightLUA", function()
 loadstring(game:HttpGet("https://raw.githubusercontent.com/machoAhacker/MidnightSSRIALSS/main/SERIALSSTEAM"))()
            end)sector1:AddButton("Q tool", function()
 getgenv().keytoclick="Q";tool=Instance.new("Tool");tool.RequiresHandle=false;tool.Name="sierialSS";tool.Activated:connect(function()local v22=game:service("VirtualInputManager");v22:SendKeyEvent(true,keytoclick,false,game);end);tool.Parent=game.Players.LocalPlayer.Backpack;game.StarterGui:SetCore("SendNotification",{Title="serialSS",Text="serialSS"});local v14=game.Players.LocalPlayer;local function v15()v14.CharacterAdded:Connect(onCharacterAdded);end v15();v14.CharacterRemoving:Connect(function()tool.Parent=game.Players.LocalPlayer.Backpack;end)
            end)

local sector1 = AimingTab:CreateSector("ssS", "right")

            sector1:AddButton("nyula", function()
 loadstring(game:HttpGet("https://raw.githubusercontent.com/nyulachan/nyula/main/nyula", true))()
            end)
local sector1 = AimingTab:CreateSector("ssS", "left")

            sector1:AddButton("azure", function()
 loadstring(game:HttpGet('https://raw.githubusercontent.com/machoAhacker/Azure/main/SerialSSAzurev3'))()
            end)
local sector1 = AimingTab:CreateSector("ssS", "right")

            sector1:AddButton("scripthub", function()
 loadstring(game:HttpGet("https://raw.githubusercontent.com/scripthubekitten/SCRIPTHUBV3/main/SCRIPTHUBV3", true))()
            end)
local sector2 =MiscTab:CreateSector("ssS", "left")
            sector2:AddButton("fly(GUI)", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/machoAhacker/FLYsss/main/FlyguyV1"))()


end)
local sector2 =MiscTab:CreateSector("ssS", "left")
            sector2:AddButton("speedY", function()
getgenv().Suicide = true
getgenv().Speed = true
getgenv().FakeMacro = true
getgenv().ClickTp = true
loadstring(game:HttpGet("https://raw.githubusercontent.com/Allvideo/nukermode/main/Kit%20tools.txt"))()


end)

local sector1 = AimingTab:CreateSector("ssS", "left")

            sector1:AddButton("THub Silent aim small fov", function()
getgenv().Silent = {
    Settings = {
        Enabled = true,
        AimPart = "UpperTorso",
        Prediction = 0.1433,
        WallCheck = true,
        Visualize = true,
        AutoPrediction = true,
    },
    FOV = {
        Enabled = true,
        Size = 25,
        Filled = false,
        Thickness = 0.66,
        Transparency = 0.9,
        Color = Color3.fromRGB(0,0,255),
    },
}
loadstring(game:HttpGet("https://raw.githubusercontent.com/machoAhacker/Back-/main/Back11SSS", true))()
            end)

local sector1 = AimingTab:CreateSector("ssS", "right")

            sector1:AddButton("tracerESP", function()
local TargetPartName = "HumanoidRootPart"
local GenericHumanoidTargetPartName = TargetPartName    
local LineColor = Color3.fromRGB(255, 255, 255)
local TeammateLineColor = Color3.fromRGB(0, 63, 255) -- Adjusted to a lighter blue
local GenericHumanoidLineColor = Color3.fromRGB(255, 0, 0) -- Adjusted to red
local LineWidth = 1 -- Adjusted to make lines thinner
local DrawTeammates = true
local FindHumanoids = true
local GetLineOrigin = function(Camera)
    return Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y*.9)
end

local Camera = workspace.CurrentCamera
local LineOrigin = nil
Camera:GetPropertyChangedSignal("ViewportSize"):Connect(function()
    LineOrigin = GetLineOrigin(Camera)
end)
LineOrigin = GetLineOrigin(Camera)

local Gui = Instance.new("ScreenGui")
Gui.Name = "SnaplineGui"
Gui.Parent = game.Players.LocalPlayer.PlayerGui
local Lines = {}

function Setline(Line, Width, Color, Origin, Destination)
    local Position = (Origin + Destination) / 2
    Line.Position = UDim2.new(0, Position.X, 0, Position.Y)
    local Length = (Origin - Destination).Magnitude
    Line.BackgroundColor3 = Color
    Line.BorderColor3 = Color
    Line.Size = UDim2.new(0, Length, 0, Width)
    Line.Rotation = math.deg(math.atan2(Destination.Y - Origin.Y, Destination.X - Origin.X))
end

game:GetService("RunService").RenderStepped:Connect(function()
    local Targets = {}
    for i, Player in pairs(game.Players:GetPlayers()) do
        if Player == game.Players.LocalPlayer then continue end
        local IsTeammate = game.Players.LocalPlayer.Team ~= nil and Player.Team == game.Players.LocalPlayer.Team
        if not DrawTeammates and IsTeammate then continue end
        local Character = Player.Character
        if not Character then continue end
        local TargetPart = Character:FindFirstChild(TargetPartName)
        if not TargetPart then continue end
        local ScreenPoint, OnScreen = Camera:WorldToScreenPoint(TargetPart.Position)
        if OnScreen then
            table.insert(Targets, {Vector2.new(ScreenPoint.X, ScreenPoint.Y), IsTeammate and TeammateLineColor or LineColor})
        end
    end
    if FindHumanoids then
        for _, Obj in pairs(workspace:GetDescendants()) do
            if Obj.ClassName ~= "Humanoid" then continue end
            if game.Players:FindFirstChild(Obj.Parent.Name) then continue end
            local TargetPart = Obj.Parent:FindFirstChild(TargetPartName)
            if not TargetPart then continue end
            local ScreenPoint, OnScreen = Camera:WorldToScreenPoint(TargetPart.Position)
            if OnScreen then
                table.insert(Targets, {Vector2.new(ScreenPoint.X, ScreenPoint.Y), GenericHumanoidLineColor})
            end
        end
    end
    if #Targets > #Lines then
        local NewLine = Instance.new("Frame")
        NewLine.Name = "Snapline"
        NewLine.AnchorPoint = Vector2.new(.5, .5)
        NewLine.Parent = Gui
        NewLine.BackgroundTransparency = 0.5 -- Adjusted transparency for a more subtle appearance
        table.insert(Lines, NewLine)
    end
    for i, Line in pairs(Lines) do
        local TargetData = Targets[i]
        if not TargetData then
            Line:Destroy()
            table.remove(Lines, i)
            continue
        end
        Setline(Line, LineWidth, TargetData[2], LineOrigin, TargetData[1])
    end
end)
            end)

local sector1 = AimingTab:CreateSector("BIgboxESP", "right")

            sector1:AddButton("scripthub", function()
 loadstring(game:HttpGet("https://raw.githubusercontent.com/Herrtt/AimHot-v8/master/Main.lua", true))()
            end)
local sector1 = AimingTab:CreateSector("shirttyGUIbladS", "right")

            sector1:AddButton("bladlock", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/machoAhacker/LeakedBLad/main/SssBLADSERIALSS"))()
            end)

local sector1 = AimingTab:CreateSector("SSS", "right")

            sector1:AddButton("Allysyum MObIlE", function()

getgenv().AlysumMobile = {
    enabled = true, -- // Global Switch
    ui = true, -- // Enable UI
    button_position = {104,4}, -- // Button Position
    legitness = "Super Legit", -- // Super Legit (Closest Point), Semi Legit (Closest Part), Normal (Torso), Blatant (Head)
    prediction = "1", -- // Prediction version (1,2,3)
    notif = true, -- // Notifications
    highlight = true, -- // Highlight Target
    line = false, -- // Line to target
    checks = {true, true, false}, -- // Visible, Knocked, Friend
    assist = {false, 0.058}, -- // Enabled, Strength
    fov = {true,50} -- // Visible, Size
}

loadstring(game:HttpGet("https://raw.githubusercontent.com/laagginq/Alysum/main/mobile"))()

            end)

local sector1 = AimingTab:CreateSector("SSOnTOP", "right")

            sector1:AddButton("dragomware", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/machoAhacker/Aimwarescript/main/dragomwareSSS"))()
            end)

local sector1 = AimingTab:CreateSector("SSOnTOP", "right")

            sector1:AddButton("antilock", function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/wenny69420/KirbswareScripts/main/MobileV3'))()
            end)

local sector1 = AimingTab:CreateSector("SSOnTOP", "right")

            sector1:AddButton("antilock", function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/wenny69420/KirbswareScripts/main/MobileV3'))()
            end)
            
            local sector1 = AimingTab:CreateSector("SSOnTOP", "right")

    sector1:AddButton("azure modded", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Actyrn/Scripts/main/AzureModded"))()
            end)
            local sector1 = AimingTab:CreateSector("TS ass dont inject tbh", "right")

    sector1:AddButton("AWAKEN camLOCK8", function()
-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
screenGui.ResetOnSpawn = false
 
-- Create Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Parent = screenGui
mainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black background
mainFrame.Size = UDim2.new(0, 300, 0, 250)
mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.BorderSizePixel = 0 -- No border
 
-- Add a corner to make smooth edges
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 10) -- Smooth edges
corner.Parent = mainFrame
 
-- Create Title
local title = Instance.new("TextLabel")
title.Parent = mainFrame
title.Text = "Leak By Glxckdev"
title.Font = Enum.Font.SourceSansBold
title.TextSize = 24
title.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
title.BackgroundTransparency = 1 -- No background
title.Size = UDim2.new(1, 0, 0, 50)
title.Position = UDim2.new(0, 0, 0, 0)
 
-- Function to create buttons with custom styling
local function createButton(name, position)
    local button = Instance.new("TextButton")
    button.Parent = mainFrame
    button.Text = name
    button.Font = Enum.Font.SourceSansBold
    button.TextSize = 20
    button.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
    button.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black background
    button.Size = UDim2.new(0.8, 0, 0, 40)
    button.Position = position
    button.BorderSizePixel = 0 -- No border
 
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 10) -- Smooth edges
    buttonCorner.Parent = button
 
    return button
end
 
-- Create Camlock Button
local camlockButton = createButton("Camlock: Off", UDim2.new(0.1, 0, 0, 60))
local camlockActive = false
 
camlockButton.MouseButton1Click:Connect(function()
    camlockActive = not camlockActive
    if camlockActive then
        camlockButton.Text = "Camlock: On"
        -- Add your script to enable Camlock here
        loadstring(game:HttpGet("https://pastebin.com/raw/wy8DSnDT"))()
    else
        camlockButton.Text = "Camlock: Off"
        -- Add your script to disable Camlock here
    end
end)
 
-- Create Resolver Button
local resolverButton = createButton("Resolver: Off", UDim2.new(0.1, 0, 0, 110))
local resolverActive = false
 
resolverButton.MouseButton1Click:Connect(function()
    resolverActive = not resolverActive
    if resolverActive then
        resolverButton.Text = "Resolver: On"
        -- Add your script to enable Resolver here
        loadstring(game:HttpGet("https://pastebin.com/raw/0uym6u51"))()
    else
        resolverButton.Text = "Resolver: Off"
        -- Add your script to disable Resolver here
    end
end)
 
-- Create Credits Text
local creditsText = Instance.new("TextLabel")
creditsText.Parent = mainFrame
creditsText.Text = "Credits: All credits go to GlxckDev for leaking"
creditsText.Font = Enum.Font.SourceSans
creditsText.TextSize = 18
creditsText.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
creditsText.BackgroundTransparency = 1 -- No background
creditsText.Size = UDim2.new(1, 0, 0, 30)
creditsText.Position = UDim2.new(0, 0, 1, -30)
 
-- Create Close Button
local closeButton = Instance.new("TextButton")
closeButton.Parent = mainFrame
closeButton.Text = "Close"
closeButton.Font = Enum.Font.SourceSansBold
closeButton.TextSize = 20
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
closeButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black background
closeButton.Size = UDim2.new(0.8, 0, 0, 40)
closeButton.Position = UDim2.new(0.1, 0, 1, -70)
closeButton.BorderSizePixel = 0 -- No border
 
local closeButtonCorner = Instance.new("UICorner")
closeButtonCorner.CornerRadius = UDim.new(0, 10) -- Smooth edges
closeButtonCorner.Parent = closeButton
 
-- Hide GUI function
local function hideGui()
    mainFrame.Visible = false
end
 
-- Show GUI function
local function showGui()
    mainFrame.Visible = true
end
 
-- Close button click event
closeButton.MouseButton1Click:Connect(hideGui)
 
-- Create Reopen Button
local reopenButton = Instance.new("TextButton")
reopenButton.Parent = screenGui
reopenButton.Text = "#$"
reopenButton.Font = Enum.Font.SourceSansBold
reopenButton.TextSize = 24
reopenButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
reopenButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black background
reopenButton.Size = UDim2.new(0, 50, 0, 50)
reopenButton.Position = UDim2.new(0.5, 0, 0.5, -185) -- Position above the GUI
reopenButton.AnchorPoint = Vector2.new(0.5, 1)
reopenButton.BorderSizePixel = 0 -- No border
 
local reopenButtonCorner = Instance.new("UICorner")
reopenButtonCorner.CornerRadius = UDim.new(1, 0) -- Circular button
reopenButtonCorner.Parent = reopenButton
 
-- Reopen button click event
reopenButton.MouseButton1Click:Connect(showGui)
            end)
            
local sector1 = AimingTab:CreateSector("SSOnTOP", "right")

            sector1:AddButton("laggy 3d esp", function()
--[[
	ui-engine-v2
	version 1.3a
	by Singularity (V3rm @ King Singularity) (Discord @ Singularity#5490)
--]]

local ui_options = {
	main_color = Color3.fromRGB(41, 74, 122),
	min_size = Vector2.new(400, 300),
	toggle_key = Enum.KeyCode.RightShift,
	can_resize = true,
}

do
	local imgui = game:GetService("CoreGui"):FindFirstChild("imgui")
	if imgui then imgui:Destroy() end
end

local imgui = Instance.new("ScreenGui")
local Prefabs = Instance.new("Frame")
local Label = Instance.new("TextLabel")
local Window = Instance.new("ImageLabel")
local Resizer = Instance.new("Frame")
local Bar = Instance.new("Frame")
local Toggle = Instance.new("ImageButton")
local Base = Instance.new("ImageLabel")
local Top = Instance.new("ImageLabel")
local Tabs = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local TabSelection = Instance.new("ImageLabel")
local TabButtons = Instance.new("Frame")
local UIListLayout = Instance.new("UIListLayout")
local Frame = Instance.new("Frame")
local Tab = Instance.new("Frame")
local UIListLayout_2 = Instance.new("UIListLayout")
local TextBox = Instance.new("TextBox")
local TextBox_Roundify_4px = Instance.new("ImageLabel")
local Slider = Instance.new("ImageLabel")
local Title_2 = Instance.new("TextLabel")
local Indicator = Instance.new("ImageLabel")
local Value = Instance.new("TextLabel")
local TextLabel = Instance.new("TextLabel")
local TextLabel_2 = Instance.new("TextLabel")
local Circle = Instance.new("ImageLabel")
local UIListLayout_3 = Instance.new("UIListLayout")
local Dropdown = Instance.new("TextButton")
local Indicator_2 = Instance.new("ImageLabel")
local Box = Instance.new("ImageButton")
local Objects = Instance.new("ScrollingFrame")
local UIListLayout_4 = Instance.new("UIListLayout")
local TextButton_Roundify_4px = Instance.new("ImageLabel")
local TabButton = Instance.new("TextButton")
local TextButton_Roundify_4px_2 = Instance.new("ImageLabel")
local Folder = Instance.new("ImageLabel")
local Button = Instance.new("TextButton")
local TextButton_Roundify_4px_3 = Instance.new("ImageLabel")
local Toggle_2 = Instance.new("ImageLabel")
local Objects_2 = Instance.new("Frame")
local UIListLayout_5 = Instance.new("UIListLayout")
local HorizontalAlignment = Instance.new("Frame")
local UIListLayout_6 = Instance.new("UIListLayout")
local Console = Instance.new("ImageLabel")
local ScrollingFrame = Instance.new("ScrollingFrame")
local Source = Instance.new("TextBox")
local Comments = Instance.new("TextLabel")
local Globals = Instance.new("TextLabel")
local Keywords = Instance.new("TextLabel")
local RemoteHighlight = Instance.new("TextLabel")
local Strings = Instance.new("TextLabel")
local Tokens = Instance.new("TextLabel")
local Numbers = Instance.new("TextLabel")
local Info = Instance.new("TextLabel")
local Lines = Instance.new("TextLabel")
local ColorPicker = Instance.new("ImageLabel")
local Palette = Instance.new("ImageLabel")
local Indicator_3 = Instance.new("ImageLabel")
local Sample = Instance.new("ImageLabel")
local Saturation = Instance.new("ImageLabel")
local Indicator_4 = Instance.new("Frame")
local Switch = Instance.new("TextButton")
local TextButton_Roundify_4px_4 = Instance.new("ImageLabel")
local Title_3 = Instance.new("TextLabel")
local Button_2 = Instance.new("TextButton")
local TextButton_Roundify_4px_5 = Instance.new("ImageLabel")
local DropdownButton = Instance.new("TextButton")
local Keybind = Instance.new("ImageLabel")
local Title_4 = Instance.new("TextLabel")
local Input = Instance.new("TextButton")
local Input_Roundify_4px = Instance.new("ImageLabel")
local Windows = Instance.new("Frame")

imgui.Name = "imgui"
imgui.Parent = game:GetService("CoreGui")

Prefabs.Name = "Prefabs"
Prefabs.Parent = imgui
Prefabs.BackgroundColor3 = Color3.new(1, 1, 1)
Prefabs.Size = UDim2.new(0, 100, 0, 100)
Prefabs.Visible = false

Label.Name = "Label"
Label.Parent = Prefabs
Label.BackgroundColor3 = Color3.new(1, 1, 1)
Label.BackgroundTransparency = 1
Label.Size = UDim2.new(0, 200, 0, 20)
Label.Font = Enum.Font.GothamSemibold
Label.Text = "Hello, world 123"
Label.TextColor3 = Color3.new(1, 1, 1)
Label.TextSize = 14
Label.TextXAlignment = Enum.TextXAlignment.Left

Window.Name = "Window"
Window.Parent = Prefabs
Window.Active = true
Window.BackgroundColor3 = Color3.new(1, 1, 1)
Window.BackgroundTransparency = 1
Window.ClipsDescendants = true
Window.Position = UDim2.new(0, 20, 0, 20)
Window.Selectable = true
Window.Size = UDim2.new(0, 200, 0, 200)
Window.Image = "rbxassetid://2851926732"
Window.ImageColor3 = Color3.new(0.0823529, 0.0862745, 0.0901961)
Window.ScaleType = Enum.ScaleType.Slice
Window.SliceCenter = Rect.new(12, 12, 12, 12)

Resizer.Name = "Resizer"
Resizer.Parent = Window
Resizer.Active = true
Resizer.BackgroundColor3 = Color3.new(1, 1, 1)
Resizer.BackgroundTransparency = 1
Resizer.BorderSizePixel = 0
Resizer.Position = UDim2.new(1, -20, 1, -20)
Resizer.Size = UDim2.new(0, 20, 0, 20)

Bar.Name = "Bar"
Bar.Parent = Window
Bar.BackgroundColor3 = Color3.new(0.160784, 0.290196, 0.478431)
Bar.BorderSizePixel = 0
Bar.Position = UDim2.new(0, 0, 0, 5)
Bar.Size = UDim2.new(1, 0, 0, 15)

Toggle.Name = "Toggle"
Toggle.Parent = Bar
Toggle.BackgroundColor3 = Color3.new(1, 1, 1)
Toggle.BackgroundTransparency = 1
Toggle.Position = UDim2.new(0, 5, 0, -2)
Toggle.Rotation = 90
Toggle.Size = UDim2.new(0, 20, 0, 20)
Toggle.ZIndex = 2
Toggle.Image = "https://www.roblox.com/Thumbs/Asset.ashx?width=420&height=420&assetId=4731371541"

Base.Name = "Base"
Base.Parent = Bar
Base.BackgroundColor3 = Color3.new(0.160784, 0.290196, 0.478431)
Base.BorderSizePixel = 0
Base.Position = UDim2.new(0, 0, 0.800000012, 0)
Base.Size = UDim2.new(1, 0, 0, 10)
Base.Image = "rbxassetid://2851926732"
Base.ImageColor3 = Color3.new(0.160784, 0.290196, 0.478431)
Base.ScaleType = Enum.ScaleType.Slice
Base.SliceCenter = Rect.new(12, 12, 12, 12)

Top.Name = "Top"
Top.Parent = Bar
Top.BackgroundColor3 = Color3.new(1, 1, 1)
Top.BackgroundTransparency = 1
Top.Position = UDim2.new(0, 0, 0, -5)
Top.Size = UDim2.new(1, 0, 0, 10)
Top.Image = "rbxassetid://2851926732"
Top.ImageColor3 = Color3.new(0.160784, 0.290196, 0.478431)
Top.ScaleType = Enum.ScaleType.Slice
Top.SliceCenter = Rect.new(12, 12, 12, 12)

Tabs.Name = "Tabs"
Tabs.Parent = Window
Tabs.BackgroundColor3 = Color3.new(1, 1, 1)
Tabs.BackgroundTransparency = 1
Tabs.Position = UDim2.new(0, 15, 0, 60)
Tabs.Size = UDim2.new(1, -30, 1, -60)

Title.Name = "Title"
Title.Parent = Window
Title.BackgroundColor3 = Color3.new(1, 1, 1)
Title.BackgroundTransparency = 1
Title.Position = UDim2.new(0, 30, 0, 3)
Title.Size = UDim2.new(0, 200, 0, 20)
Title.Font = Enum.Font.GothamBold
Title.Text = "Gamer Time"
Title.TextColor3 = Color3.new(1, 1, 1)
Title.TextSize = 14
Title.TextXAlignment = Enum.TextXAlignment.Left

TabSelection.Name = "TabSelection"
TabSelection.Parent = Window
TabSelection.BackgroundColor3 = Color3.new(1, 1, 1)
TabSelection.BackgroundTransparency = 1
TabSelection.Position = UDim2.new(0, 15, 0, 30)
TabSelection.Size = UDim2.new(1, -30, 0, 25)
TabSelection.Visible = false
TabSelection.Image = "rbxassetid://2851929490"
TabSelection.ImageColor3 = Color3.new(0.145098, 0.14902, 0.156863)
TabSelection.ScaleType = Enum.ScaleType.Slice
TabSelection.SliceCenter = Rect.new(4, 4, 4, 4)

TabButtons.Name = "TabButtons"
TabButtons.Parent = TabSelection
TabButtons.BackgroundColor3 = Color3.new(1, 1, 1)
TabButtons.BackgroundTransparency = 1
TabButtons.Size = UDim2.new(1, 0, 1, 0)

UIListLayout.Parent = TabButtons
UIListLayout.FillDirection = Enum.FillDirection.Horizontal
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 2)

Frame.Parent = TabSelection
Frame.BackgroundColor3 = Color3.new(0.12549, 0.227451, 0.372549)
Frame.BorderColor3 = Color3.new(0.105882, 0.164706, 0.207843)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0, 0, 1, 0)
Frame.Size = UDim2.new(1, 0, 0, 2)

Tab.Name = "Tab"
Tab.Parent = Prefabs
Tab.BackgroundColor3 = Color3.new(1, 1, 1)
Tab.BackgroundTransparency = 1
Tab.Size = UDim2.new(1, 0, 1, 0)
Tab.Visible = false

UIListLayout_2.Parent = Tab
UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_2.Padding = UDim.new(0, 5)

TextBox.Parent = Prefabs
TextBox.BackgroundColor3 = Color3.new(1, 1, 1)
TextBox.BackgroundTransparency = 1
TextBox.BorderSizePixel = 0
TextBox.Size = UDim2.new(1, 0, 0, 20)
TextBox.ZIndex = 2
TextBox.Font = Enum.Font.GothamSemibold
TextBox.PlaceholderColor3 = Color3.new(0.698039, 0.698039, 0.698039)
TextBox.PlaceholderText = "Input Text"
TextBox.Text = ""
TextBox.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
TextBox.TextSize = 14

TextBox_Roundify_4px.Name = "TextBox_Roundify_4px"
TextBox_Roundify_4px.Parent = TextBox
TextBox_Roundify_4px.BackgroundColor3 = Color3.new(1, 1, 1)
TextBox_Roundify_4px.BackgroundTransparency = 1
TextBox_Roundify_4px.Size = UDim2.new(1, 0, 1, 0)
TextBox_Roundify_4px.Image = "rbxassetid://2851929490"
TextBox_Roundify_4px.ImageColor3 = Color3.new(0.203922, 0.207843, 0.219608)
TextBox_Roundify_4px.ScaleType = Enum.ScaleType.Slice
TextBox_Roundify_4px.SliceCenter = Rect.new(4, 4, 4, 4)

Slider.Name = "Slider"
Slider.Parent = Prefabs
Slider.BackgroundColor3 = Color3.new(1, 1, 1)
Slider.BackgroundTransparency = 1
Slider.Position = UDim2.new(0, 0, 0.178571433, 0)
Slider.Size = UDim2.new(1, 0, 0, 20)
Slider.Image = "rbxassetid://2851929490"
Slider.ImageColor3 = Color3.new(0.145098, 0.14902, 0.156863)
Slider.ScaleType = Enum.ScaleType.Slice
Slider.SliceCenter = Rect.new(4, 4, 4, 4)

Title_2.Name = "Title"
Title_2.Parent = Slider
Title_2.BackgroundColor3 = Color3.new(1, 1, 1)
Title_2.BackgroundTransparency = 1
Title_2.Position = UDim2.new(0.5, 0, 0.5, -10)
Title_2.Size = UDim2.new(0, 0, 0, 20)
Title_2.ZIndex = 2
Title_2.Font = Enum.Font.GothamBold
Title_2.Text = "Slider"
Title_2.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
Title_2.TextSize = 14

Indicator.Name = "Indicator"
Indicator.Parent = Slider
Indicator.BackgroundColor3 = Color3.new(1, 1, 1)
Indicator.BackgroundTransparency = 1
Indicator.Size = UDim2.new(0, 0, 0, 20)
Indicator.Image = "rbxassetid://2851929490"
Indicator.ImageColor3 = Color3.new(0.254902, 0.262745, 0.278431)
Indicator.ScaleType = Enum.ScaleType.Slice
Indicator.SliceCenter = Rect.new(4, 4, 4, 4)

Value.Name = "Value"
Value.Parent = Slider
Value.BackgroundColor3 = Color3.new(1, 1, 1)
Value.BackgroundTransparency = 1
Value.Position = UDim2.new(1, -55, 0.5, -10)
Value.Size = UDim2.new(0, 50, 0, 20)
Value.Font = Enum.Font.GothamBold
Value.Text = "0%"
Value.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
Value.TextSize = 14

TextLabel.Parent = Slider
TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel.BackgroundTransparency = 1
TextLabel.Position = UDim2.new(1, -20, -0.75, 0)
TextLabel.Size = UDim2.new(0, 26, 0, 50)
TextLabel.Font = Enum.Font.GothamBold
TextLabel.Text = "]"
TextLabel.TextColor3 = Color3.new(0.627451, 0.627451, 0.627451)
TextLabel.TextSize = 14

TextLabel_2.Parent = Slider
TextLabel_2.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel_2.BackgroundTransparency = 1
TextLabel_2.Position = UDim2.new(1, -65, -0.75, 0)
TextLabel_2.Size = UDim2.new(0, 26, 0, 50)
TextLabel_2.Font = Enum.Font.GothamBold
TextLabel_2.Text = "["
TextLabel_2.TextColor3 = Color3.new(0.627451, 0.627451, 0.627451)
TextLabel_2.TextSize = 14

Circle.Name = "Circle"
Circle.Parent = Prefabs
Circle.BackgroundColor3 = Color3.new(1, 1, 1)
Circle.BackgroundTransparency = 1
Circle.Image = "rbxassetid://266543268"
Circle.ImageTransparency = 0.5

UIListLayout_3.Parent = Prefabs
UIListLayout_3.FillDirection = Enum.FillDirection.Horizontal
UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_3.Padding = UDim.new(0, 20)

Dropdown.Name = "Dropdown"
Dropdown.Parent = Prefabs
Dropdown.BackgroundColor3 = Color3.new(1, 1, 1)
Dropdown.BackgroundTransparency = 1
Dropdown.BorderSizePixel = 0
Dropdown.Position = UDim2.new(-0.055555556, 0, 0.0833333284, 0)
Dropdown.Size = UDim2.new(0, 200, 0, 20)
Dropdown.ZIndex = 2
Dropdown.Font = Enum.Font.GothamBold
Dropdown.Text = "      Dropdown"
Dropdown.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
Dropdown.TextSize = 14
Dropdown.TextXAlignment = Enum.TextXAlignment.Left

Indicator_2.Name = "Indicator"
Indicator_2.Parent = Dropdown
Indicator_2.BackgroundColor3 = Color3.new(1, 1, 1)
Indicator_2.BackgroundTransparency = 1
Indicator_2.Position = UDim2.new(0.899999976, -10, 0.100000001, 0)
Indicator_2.Rotation = -90
Indicator_2.Size = UDim2.new(0, 15, 0, 15)
Indicator_2.ZIndex = 2
Indicator_2.Image = "https://www.roblox.com/Thumbs/Asset.ashx?width=420&height=420&assetId=4744658743"

Box.Name = "Box"
Box.Parent = Dropdown
Box.BackgroundColor3 = Color3.new(1, 1, 1)
Box.BackgroundTransparency = 1
Box.Position = UDim2.new(0, 0, 0, 25)
Box.Size = UDim2.new(1, 0, 0, 150)
Box.ZIndex = 3
Box.Image = "rbxassetid://2851929490"
Box.ImageColor3 = Color3.new(0.129412, 0.133333, 0.141176)
Box.ScaleType = Enum.ScaleType.Slice
Box.SliceCenter = Rect.new(4, 4, 4, 4)

Objects.Name = "Objects"
Objects.Parent = Box
Objects.BackgroundColor3 = Color3.new(1, 1, 1)
Objects.BackgroundTransparency = 1
Objects.BorderSizePixel = 0
Objects.Size = UDim2.new(1, 0, 1, 0)
Objects.ZIndex = 3
Objects.CanvasSize = UDim2.new(0, 0, 0, 0)
Objects.ScrollBarThickness = 8

UIListLayout_4.Parent = Objects
UIListLayout_4.SortOrder = Enum.SortOrder.LayoutOrder

TextButton_Roundify_4px.Name = "TextButton_Roundify_4px"
TextButton_Roundify_4px.Parent = Dropdown
TextButton_Roundify_4px.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton_Roundify_4px.BackgroundTransparency = 1
TextButton_Roundify_4px.Size = UDim2.new(1, 0, 1, 0)
TextButton_Roundify_4px.Image = "rbxassetid://2851929490"
TextButton_Roundify_4px.ImageColor3 = Color3.new(0.203922, 0.207843, 0.219608)
TextButton_Roundify_4px.ScaleType = Enum.ScaleType.Slice
TextButton_Roundify_4px.SliceCenter = Rect.new(4, 4, 4, 4)

TabButton.Name = "TabButton"
TabButton.Parent = Prefabs
TabButton.BackgroundColor3 = Color3.new(0.160784, 0.290196, 0.478431)
TabButton.BackgroundTransparency = 1
TabButton.BorderSizePixel = 0
TabButton.Position = UDim2.new(0.185185179, 0, 0, 0)
TabButton.Size = UDim2.new(0, 71, 0, 20)
TabButton.ZIndex = 2
TabButton.Font = Enum.Font.GothamSemibold
TabButton.Text = "Test tab"
TabButton.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
TabButton.TextSize = 14

TextButton_Roundify_4px_2.Name = "TextButton_Roundify_4px"
TextButton_Roundify_4px_2.Parent = TabButton
TextButton_Roundify_4px_2.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton_Roundify_4px_2.BackgroundTransparency = 1
TextButton_Roundify_4px_2.Size = UDim2.new(1, 0, 1, 0)
TextButton_Roundify_4px_2.Image = "rbxassetid://2851929490"
TextButton_Roundify_4px_2.ImageColor3 = Color3.new(0.203922, 0.207843, 0.219608)
TextButton_Roundify_4px_2.ScaleType = Enum.ScaleType.Slice
TextButton_Roundify_4px_2.SliceCenter = Rect.new(4, 4, 4, 4)

Folder.Name = "Folder"
Folder.Parent = Prefabs
Folder.BackgroundColor3 = Color3.new(1, 1, 1)
Folder.BackgroundTransparency = 1
Folder.Position = UDim2.new(0, 0, 0, 50)
Folder.Size = UDim2.new(1, 0, 0, 20)
Folder.Image = "rbxassetid://2851929490"
Folder.ImageColor3 = Color3.new(0.0823529, 0.0862745, 0.0901961)
Folder.ScaleType = Enum.ScaleType.Slice
Folder.SliceCenter = Rect.new(4, 4, 4, 4)

Button.Name = "Button"
Button.Parent = Folder
Button.BackgroundColor3 = Color3.new(0.160784, 0.290196, 0.478431)
Button.BackgroundTransparency = 1
Button.BorderSizePixel = 0
Button.Size = UDim2.new(1, 0, 0, 20)
Button.ZIndex = 2
Button.Font = Enum.Font.GothamSemibold
Button.Text = "      Folder"
Button.TextColor3 = Color3.new(1, 1, 1)
Button.TextSize = 14
Button.TextXAlignment = Enum.TextXAlignment.Left

TextButton_Roundify_4px_3.Name = "TextButton_Roundify_4px"
TextButton_Roundify_4px_3.Parent = Button
TextButton_Roundify_4px_3.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton_Roundify_4px_3.BackgroundTransparency = 1
TextButton_Roundify_4px_3.Size = UDim2.new(1, 0, 1, 0)
TextButton_Roundify_4px_3.Image = "rbxassetid://2851929490"
TextButton_Roundify_4px_3.ImageColor3 = Color3.new(0.160784, 0.290196, 0.478431)
TextButton_Roundify_4px_3.ScaleType = Enum.ScaleType.Slice
TextButton_Roundify_4px_3.SliceCenter = Rect.new(4, 4, 4, 4)

Toggle_2.Name = "Toggle"
Toggle_2.Parent = Button
Toggle_2.BackgroundColor3 = Color3.new(1, 1, 1)
Toggle_2.BackgroundTransparency = 1
Toggle_2.Position = UDim2.new(0, 5, 0, 0)
Toggle_2.Size = UDim2.new(0, 20, 0, 20)
Toggle_2.Image = "https://www.roblox.com/Thumbs/Asset.ashx?width=420&height=420&assetId=4731371541"

Objects_2.Name = "Objects"
Objects_2.Parent = Folder
Objects_2.BackgroundColor3 = Color3.new(1, 1, 1)
Objects_2.BackgroundTransparency = 1
Objects_2.Position = UDim2.new(0, 10, 0, 25)
Objects_2.Size = UDim2.new(1, -10, 1, -25)
Objects_2.Visible = false

UIListLayout_5.Parent = Objects_2
UIListLayout_5.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_5.Padding = UDim.new(0, 5)

HorizontalAlignment.Name = "HorizontalAlignment"
HorizontalAlignment.Parent = Prefabs
HorizontalAlignment.BackgroundColor3 = Color3.new(1, 1, 1)
HorizontalAlignment.BackgroundTransparency = 1
HorizontalAlignment.Size = UDim2.new(1, 0, 0, 20)

UIListLayout_6.Parent = HorizontalAlignment
UIListLayout_6.FillDirection = Enum.FillDirection.Horizontal
UIListLayout_6.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_6.Padding = UDim.new(0, 5)

Console.Name = "Console"
Console.Parent = Prefabs
Console.BackgroundColor3 = Color3.new(1, 1, 1)
Console.BackgroundTransparency = 1
Console.Size = UDim2.new(1, 0, 0, 200)
Console.Image = "rbxassetid://2851928141"
Console.ImageColor3 = Color3.new(0.129412, 0.133333, 0.141176)
Console.ScaleType = Enum.ScaleType.Slice
Console.SliceCenter = Rect.new(8, 8, 8, 8)

ScrollingFrame.Parent = Console
ScrollingFrame.BackgroundColor3 = Color3.new(1, 1, 1)
ScrollingFrame.BackgroundTransparency = 1
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.Size = UDim2.new(1, 0, 1, 1)
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
ScrollingFrame.ScrollBarThickness = 4

Source.Name = "Source"
Source.Parent = ScrollingFrame
Source.BackgroundColor3 = Color3.new(1, 1, 1)
Source.BackgroundTransparency = 1
Source.Position = UDim2.new(0, 40, 0, 0)
Source.Size = UDim2.new(1, -40, 0, 10000)
Source.ZIndex = 3
Source.ClearTextOnFocus = false
Source.Font = Enum.Font.Code
Source.MultiLine = true
Source.PlaceholderColor3 = Color3.new(0.8, 0.8, 0.8)
Source.Text = ""
Source.TextColor3 = Color3.new(1, 1, 1)
Source.TextSize = 15
Source.TextStrokeColor3 = Color3.new(1, 1, 1)
Source.TextWrapped = true
Source.TextXAlignment = Enum.TextXAlignment.Left
Source.TextYAlignment = Enum.TextYAlignment.Top

Comments.Name = "Comments"
Comments.Parent = Source
Comments.BackgroundColor3 = Color3.new(1, 1, 1)
Comments.BackgroundTransparency = 1
Comments.Size = UDim2.new(1, 0, 1, 0)
Comments.ZIndex = 5
Comments.Font = Enum.Font.Code
Comments.Text = ""
Comments.TextColor3 = Color3.new(0.231373, 0.784314, 0.231373)
Comments.TextSize = 15
Comments.TextXAlignment = Enum.TextXAlignment.Left
Comments.TextYAlignment = Enum.TextYAlignment.Top

Globals.Name = "Globals"
Globals.Parent = Source
Globals.BackgroundColor3 = Color3.new(1, 1, 1)
Globals.BackgroundTransparency = 1
Globals.Size = UDim2.new(1, 0, 1, 0)
Globals.ZIndex = 5
Globals.Font = Enum.Font.Code
Globals.Text = ""
Globals.TextColor3 = Color3.new(0.517647, 0.839216, 0.968628)
Globals.TextSize = 15
Globals.TextXAlignment = Enum.TextXAlignment.Left
Globals.TextYAlignment = Enum.TextYAlignment.Top

Keywords.Name = "Keywords"
Keywords.Parent = Source
Keywords.BackgroundColor3 = Color3.new(1, 1, 1)
Keywords.BackgroundTransparency = 1
Keywords.Size = UDim2.new(1, 0, 1, 0)
Keywords.ZIndex = 5
Keywords.Font = Enum.Font.Code
Keywords.Text = ""
Keywords.TextColor3 = Color3.new(0.972549, 0.427451, 0.486275)
Keywords.TextSize = 15
Keywords.TextXAlignment = Enum.TextXAlignment.Left
Keywords.TextYAlignment = Enum.TextYAlignment.Top

RemoteHighlight.Name = "RemoteHighlight"
RemoteHighlight.Parent = Source
RemoteHighlight.BackgroundColor3 = Color3.new(1, 1, 1)
RemoteHighlight.BackgroundTransparency = 1
RemoteHighlight.Size = UDim2.new(1, 0, 1, 0)
RemoteHighlight.ZIndex = 5
RemoteHighlight.Font = Enum.Font.Code
RemoteHighlight.Text = ""
RemoteHighlight.TextColor3 = Color3.new(0, 0.568627, 1)
RemoteHighlight.TextSize = 15
RemoteHighlight.TextXAlignment = Enum.TextXAlignment.Left
RemoteHighlight.TextYAlignment = Enum.TextYAlignment.Top

Strings.Name = "Strings"
Strings.Parent = Source
Strings.BackgroundColor3 = Color3.new(1, 1, 1)
Strings.BackgroundTransparency = 1
Strings.Size = UDim2.new(1, 0, 1, 0)
Strings.ZIndex = 5
Strings.Font = Enum.Font.Code
Strings.Text = ""
Strings.TextColor3 = Color3.new(0.678431, 0.945098, 0.584314)
Strings.TextSize = 15
Strings.TextXAlignment = Enum.TextXAlignment.Left
Strings.TextYAlignment = Enum.TextYAlignment.Top

Tokens.Name = "Tokens"
Tokens.Parent = Source
Tokens.BackgroundColor3 = Color3.new(1, 1, 1)
Tokens.BackgroundTransparency = 1
Tokens.Size = UDim2.new(1, 0, 1, 0)
Tokens.ZIndex = 5
Tokens.Font = Enum.Font.Code
Tokens.Text = ""
Tokens.TextColor3 = Color3.new(1, 1, 1)
Tokens.TextSize = 15
Tokens.TextXAlignment = Enum.TextXAlignment.Left
Tokens.TextYAlignment = Enum.TextYAlignment.Top

Numbers.Name = "Numbers"
Numbers.Parent = Source
Numbers.BackgroundColor3 = Color3.new(1, 1, 1)
Numbers.BackgroundTransparency = 1
Numbers.Size = UDim2.new(1, 0, 1, 0)
Numbers.ZIndex = 4
Numbers.Font = Enum.Font.Code
Numbers.Text = ""
Numbers.TextColor3 = Color3.new(1, 0.776471, 0)
Numbers.TextSize = 15
Numbers.TextXAlignment = Enum.TextXAlignment.Left
Numbers.TextYAlignment = Enum.TextYAlignment.Top

Info.Name = "Info"
Info.Parent = Source
Info.BackgroundColor3 = Color3.new(1, 1, 1)
Info.BackgroundTransparency = 1
Info.Size = UDim2.new(1, 0, 1, 0)
Info.ZIndex = 5
Info.Font = Enum.Font.Code
Info.Text = ""
Info.TextColor3 = Color3.new(0, 0.635294, 1)
Info.TextSize = 15
Info.TextXAlignment = Enum.TextXAlignment.Left
Info.TextYAlignment = Enum.TextYAlignment.Top

Lines.Name = "Lines"
Lines.Parent = ScrollingFrame
Lines.BackgroundColor3 = Color3.new(1, 1, 1)
Lines.BackgroundTransparency = 1
Lines.BorderSizePixel = 0
Lines.Size = UDim2.new(0, 40, 0, 10000)
Lines.ZIndex = 4
Lines.Font = Enum.Font.Code
Lines.Text = "1\n"
Lines.TextColor3 = Color3.new(1, 1, 1)
Lines.TextSize = 15
Lines.TextWrapped = true
Lines.TextYAlignment = Enum.TextYAlignment.Top

ColorPicker.Name = "ColorPicker"
ColorPicker.Parent = Prefabs
ColorPicker.BackgroundColor3 = Color3.new(1, 1, 1)
ColorPicker.BackgroundTransparency = 1
ColorPicker.Size = UDim2.new(0, 180, 0, 110)
ColorPicker.Image = "rbxassetid://2851929490"
ColorPicker.ImageColor3 = Color3.new(0.203922, 0.207843, 0.219608)
ColorPicker.ScaleType = Enum.ScaleType.Slice
ColorPicker.SliceCenter = Rect.new(4, 4, 4, 4)

Palette.Name = "Palette"
Palette.Parent = ColorPicker
Palette.BackgroundColor3 = Color3.new(1, 1, 1)
Palette.BackgroundTransparency = 1
Palette.Position = UDim2.new(0.0500000007, 0, 0.0500000007, 0)
Palette.Size = UDim2.new(0, 100, 0, 100)
Palette.Image = "rbxassetid://698052001"
Palette.ScaleType = Enum.ScaleType.Slice
Palette.SliceCenter = Rect.new(4, 4, 4, 4)

Indicator_3.Name = "Indicator"
Indicator_3.Parent = Palette
Indicator_3.BackgroundColor3 = Color3.new(1, 1, 1)
Indicator_3.BackgroundTransparency = 1
Indicator_3.Size = UDim2.new(0, 5, 0, 5)
Indicator_3.ZIndex = 2
Indicator_3.Image = "rbxassetid://2851926732"
Indicator_3.ImageColor3 = Color3.new(0, 0, 0)
Indicator_3.ScaleType = Enum.ScaleType.Slice
Indicator_3.SliceCenter = Rect.new(12, 12, 12, 12)

Sample.Name = "Sample"
Sample.Parent = ColorPicker
Sample.BackgroundColor3 = Color3.new(1, 1, 1)
Sample.BackgroundTransparency = 1
Sample.Position = UDim2.new(0.800000012, 0, 0.0500000007, 0)
Sample.Size = UDim2.new(0, 25, 0, 25)
Sample.Image = "rbxassetid://2851929490"
Sample.ScaleType = Enum.ScaleType.Slice
Sample.SliceCenter = Rect.new(4, 4, 4, 4)

Saturation.Name = "Saturation"
Saturation.Parent = ColorPicker
Saturation.BackgroundColor3 = Color3.new(1, 1, 1)
Saturation.Position = UDim2.new(0.649999976, 0, 0.0500000007, 0)
Saturation.Size = UDim2.new(0, 15, 0, 100)
Saturation.Image = "rbxassetid://3641079629"

Indicator_4.Name = "Indicator"
Indicator_4.Parent = Saturation
Indicator_4.BackgroundColor3 = Color3.new(1, 1, 1)
Indicator_4.BorderSizePixel = 0
Indicator_4.Size = UDim2.new(0, 20, 0, 2)
Indicator_4.ZIndex = 2

Switch.Name = "Switch"
Switch.Parent = Prefabs
Switch.BackgroundColor3 = Color3.new(1, 1, 1)
Switch.BackgroundTransparency = 1
Switch.BorderSizePixel = 0
Switch.Position = UDim2.new(0.229411766, 0, 0.20714286, 0)
Switch.Size = UDim2.new(0, 20, 0, 20)
Switch.ZIndex = 2
Switch.Font = Enum.Font.SourceSans
Switch.Text = ""
Switch.TextColor3 = Color3.new(1, 1, 1)
Switch.TextSize = 18

TextButton_Roundify_4px_4.Name = "TextButton_Roundify_4px"
TextButton_Roundify_4px_4.Parent = Switch
TextButton_Roundify_4px_4.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton_Roundify_4px_4.BackgroundTransparency = 1
TextButton_Roundify_4px_4.Size = UDim2.new(1, 0, 1, 0)
TextButton_Roundify_4px_4.Image = "rbxassetid://2851929490"
TextButton_Roundify_4px_4.ImageColor3 = Color3.new(0.160784, 0.290196, 0.478431)
TextButton_Roundify_4px_4.ImageTransparency = 0.5
TextButton_Roundify_4px_4.ScaleType = Enum.ScaleType.Slice
TextButton_Roundify_4px_4.SliceCenter = Rect.new(4, 4, 4, 4)

Title_3.Name = "Title"
Title_3.Parent = Switch
Title_3.BackgroundColor3 = Color3.new(1, 1, 1)
Title_3.BackgroundTransparency = 1
Title_3.Position = UDim2.new(1.20000005, 0, 0, 0)
Title_3.Size = UDim2.new(0, 20, 0, 20)
Title_3.Font = Enum.Font.GothamSemibold
Title_3.Text = "Switch"
Title_3.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
Title_3.TextSize = 14
Title_3.TextXAlignment = Enum.TextXAlignment.Left

Button_2.Name = "Button"
Button_2.Parent = Prefabs
Button_2.BackgroundColor3 = Color3.new(0.160784, 0.290196, 0.478431)
Button_2.BackgroundTransparency = 1
Button_2.BorderSizePixel = 0
Button_2.Size = UDim2.new(0, 91, 0, 20)
Button_2.ZIndex = 2
Button_2.Font = Enum.Font.GothamSemibold
Button_2.TextColor3 = Color3.new(1, 1, 1)
Button_2.TextSize = 14

TextButton_Roundify_4px_5.Name = "TextButton_Roundify_4px"
TextButton_Roundify_4px_5.Parent = Button_2
TextButton_Roundify_4px_5.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton_Roundify_4px_5.BackgroundTransparency = 1
TextButton_Roundify_4px_5.Size = UDim2.new(1, 0, 1, 0)
TextButton_Roundify_4px_5.Image = "rbxassetid://2851929490"
TextButton_Roundify_4px_5.ImageColor3 = Color3.new(0.160784, 0.290196, 0.478431)
TextButton_Roundify_4px_5.ScaleType = Enum.ScaleType.Slice
TextButton_Roundify_4px_5.SliceCenter = Rect.new(4, 4, 4, 4)

DropdownButton.Name = "DropdownButton"
DropdownButton.Parent = Prefabs
DropdownButton.BackgroundColor3 = Color3.new(0.129412, 0.133333, 0.141176)
DropdownButton.BorderSizePixel = 0
DropdownButton.Size = UDim2.new(1, 0, 0, 20)
DropdownButton.ZIndex = 3
DropdownButton.Font = Enum.Font.GothamBold
DropdownButton.Text = "      Button"
DropdownButton.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
DropdownButton.TextSize = 14
DropdownButton.TextXAlignment = Enum.TextXAlignment.Left

Keybind.Name = "Keybind"
Keybind.Parent = Prefabs
Keybind.BackgroundColor3 = Color3.new(1, 1, 1)
Keybind.BackgroundTransparency = 1
Keybind.Size = UDim2.new(0, 200, 0, 20)
Keybind.Image = "rbxassetid://2851929490"
Keybind.ImageColor3 = Color3.new(0.203922, 0.207843, 0.219608)
Keybind.ScaleType = Enum.ScaleType.Slice
Keybind.SliceCenter = Rect.new(4, 4, 4, 4)

Title_4.Name = "Title"
Title_4.Parent = Keybind
Title_4.BackgroundColor3 = Color3.new(1, 1, 1)
Title_4.BackgroundTransparency = 1
Title_4.Size = UDim2.new(0, 0, 1, 0)
Title_4.Font = Enum.Font.GothamBold
Title_4.Text = "Keybind"
Title_4.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
Title_4.TextSize = 14
Title_4.TextXAlignment = Enum.TextXAlignment.Left

Input.Name = "Input"
Input.Parent = Keybind
Input.BackgroundColor3 = Color3.new(1, 1, 1)
Input.BackgroundTransparency = 1
Input.BorderSizePixel = 0
Input.Position = UDim2.new(1, -85, 0, 2)
Input.Size = UDim2.new(0, 80, 1, -4)
Input.ZIndex = 2
Input.Font = Enum.Font.GothamSemibold
Input.Text = "RShift"
Input.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
Input.TextSize = 12
Input.TextWrapped = true

Input_Roundify_4px.Name = "Input_Roundify_4px"
Input_Roundify_4px.Parent = Input
Input_Roundify_4px.BackgroundColor3 = Color3.new(1, 1, 1)
Input_Roundify_4px.BackgroundTransparency = 1
Input_Roundify_4px.Size = UDim2.new(1, 0, 1, 0)
Input_Roundify_4px.Image = "rbxassetid://2851929490"
Input_Roundify_4px.ImageColor3 = Color3.new(0.290196, 0.294118, 0.313726)
Input_Roundify_4px.ScaleType = Enum.ScaleType.Slice
Input_Roundify_4px.SliceCenter = Rect.new(4, 4, 4, 4)

Windows.Name = "Windows"
Windows.Parent = imgui
Windows.BackgroundColor3 = Color3.new(1, 1, 1)
Windows.BackgroundTransparency = 1
Windows.Position = UDim2.new(0, 20, 0, 20)
Windows.Size = UDim2.new(1, 20, 1, -20)

--[[ Script ]]--
script.Parent = imgui

local UIS = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RS = game:GetService("RunService")
local ps = game:GetService("Players")

local p = ps.LocalPlayer
local mouse = p:GetMouse()

local Prefabs = script.Parent:WaitForChild("Prefabs")
local Windows = script.Parent:FindFirstChild("Windows")

local checks = {
	["binding"] = false,
}

UIS.InputBegan:Connect(function(input, gameProcessed)
	if input.KeyCode == ((typeof(ui_options.toggle_key) == "EnumItem") and ui_options.toggle_key or Enum.KeyCode.RightShift) then
		if script.Parent then
			if not checks.binding then
				script.Parent.Enabled = not script.Parent.Enabled
			end
		end
	end
end)

local function Resize(part, new, _delay)
	_delay = _delay or 0.5
	local tweenInfo = TweenInfo.new(_delay, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local tween = TweenService:Create(part, tweenInfo, new)
	tween:Play()
end

local function rgbtohsv(r, g, b) -- idk who made this function, but thanks
	r, g, b = r / 255, g / 255, b / 255
	local max, min = math.max(r, g, b), math.min(r, g, b)
	local h, s, v
	v = max

	local d = max - min
	if max == 0 then
		s = 0
	else
		s = d / max
	end

	if max == min then
		h = 0
	else
		if max == r then
			h = (g - b) / d
			if g < b then
				h = h + 6
			end
		elseif max == g then
			h = (b - r) / d + 2
		elseif max == b then
			h = (r - g) / d + 4
		end
		h = h / 6
	end

	return h, s, v
end

local function hasprop(object, prop)
	local a, b = pcall(function()
		return object[tostring(prop)]
	end)
	if a then
		return b
	end
end

local function gNameLen(obj)
	return obj.TextBounds.X + 15
end

local function gMouse()
	return Vector2.new(UIS:GetMouseLocation().X + 1, UIS:GetMouseLocation().Y - 35)
end

local function ripple(button, x, y)
	spawn(function()
		button.ClipsDescendants = true

		local circle = Prefabs:FindFirstChild("Circle"):Clone()

		circle.Parent = button
		circle.ZIndex = 1000

		local new_x = x - circle.AbsolutePosition.X
		local new_y = y - circle.AbsolutePosition.Y
		circle.Position = UDim2.new(0, new_x, 0, new_y)

		local size = 0
		if button.AbsoluteSize.X > button.AbsoluteSize.Y then
			 size = button.AbsoluteSize.X * 1.5
		elseif button.AbsoluteSize.X < button.AbsoluteSize.Y then
			 size = button.AbsoluteSize.Y * 1.5
		elseif button.AbsoluteSize.X == button.AbsoluteSize.Y then
			size = button.AbsoluteSize.X * 1.5
		end

		circle:TweenSizeAndPosition(UDim2.new(0, size, 0, size), UDim2.new(0.5, -size / 2, 0.5, -size / 2), "Out", "Quad", 0.5, false, nil)
		Resize(circle, {ImageTransparency = 1}, 0.5)

		wait(0.5)
		circle:Destroy()
	end)
end

local windows = 0
local library = {}

local function format_windows()
	local ull = Prefabs:FindFirstChild("UIListLayout"):Clone()
	ull.Parent = Windows
	local data = {}

	for i,v in next, Windows:GetChildren() do
		if not (v:IsA("UIListLayout")) then
			data[v] = v.AbsolutePosition
		end
	end

	ull:Destroy()

	for i,v in next, data do
		i.Position = UDim2.new(0, v.X, 0, v.Y)
	end
end

function library:FormatWindows()
	format_windows()
end

function library:AddWindow(title, options)
	windows = windows + 1
	local dropdown_open = false
	title = tostring(title or "New Window")
	options = (typeof(options) == "table") and options or ui_options
	options.tween_time = 0.1

	local Window = Prefabs:FindFirstChild("Window"):Clone()
	Window.Parent = Windows
	Window:FindFirstChild("Title").Text = title
	Window.Size = UDim2.new(0, options.min_size.X, 0, options.min_size.Y)
	Window.ZIndex = Window.ZIndex + (windows * 10)

	do -- Altering Window Color
		local Title = Window:FindFirstChild("Title")
		local Bar = Window:FindFirstChild("Bar")
		local Base = Bar:FindFirstChild("Base")
		local Top = Bar:FindFirstChild("Top")
		local SplitFrame = Window:FindFirstChild("TabSelection"):FindFirstChild("Frame")
		local Toggle = Bar:FindFirstChild("Toggle")

		spawn(function()
			while true do
				Bar.BackgroundColor3 = options.main_color
				Base.BackgroundColor3 = options.main_color
				Base.ImageColor3 = options.main_color
				Top.ImageColor3 = options.main_color
				SplitFrame.BackgroundColor3 = options.main_color

				RS.Heartbeat:Wait()
			end
		end)

	end

	local Resizer = Window:WaitForChild("Resizer")

	local window_data = {}
	Window.Draggable = true

	do -- Resize Window
		local oldIcon = mouse.Icon
		local Entered = false
		Resizer.MouseEnter:Connect(function()
			Window.Draggable = false
			if options.can_resize then
				oldIcon = mouse.Icon
				-- mouse.Icon = "http://www.roblox.com/asset?id=4745131330"
			end
			Entered = true
		end)

		Resizer.MouseLeave:Connect(function()
			Entered = false
			if options.can_resize then
				mouse.Icon = oldIcon
			end
			Window.Draggable = true
		end)

		local Held = false
		UIS.InputBegan:Connect(function(inputObject)
			if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
				Held = true

				spawn(function() -- Loop check
					if Entered and Resizer.Active and options.can_resize then
						while Held and Resizer.Active do

							local mouse_location = gMouse()
							local x = mouse_location.X - Window.AbsolutePosition.X
							local y = mouse_location.Y - Window.AbsolutePosition.Y

							--
							if x >= options.min_size.X and y >= options.min_size.Y then
								Resize(Window, {Size = UDim2.new(0, x, 0, y)}, options.tween_time)
							elseif x >= options.min_size.X then
								Resize(Window, {Size = UDim2.new(0, x, 0, options.min_size.Y)}, options.tween_time)
							elseif y >= options.min_size.Y then
								Resize(Window, {Size = UDim2.new(0, options.min_size.X, 0, y)}, options.tween_time)
							else
								Resize(Window, {Size = UDim2.new(0, options.min_size.X, 0, options.min_size.Y)}, options.tween_time)
							end

							RS.Heartbeat:Wait()
						end
					end
				end)
			end
		end)
		UIS.InputEnded:Connect(function(inputObject)
			if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
				Held = false
			end
		end)
	end

	do -- [Open / Close] Window
		local open_close = Window:FindFirstChild("Bar"):FindFirstChild("Toggle")
		local open = true
		local canopen = true

		local oldwindowdata = {}
		local oldy = Window.AbsoluteSize.Y
		open_close.MouseButton1Click:Connect(function()
			if canopen then
				canopen = false

				if open then
					-- Close

					oldwindowdata = {}
					for i,v in next, Window:FindFirstChild("Tabs"):GetChildren() do
						oldwindowdata[v] = v.Visible
						v.Visible = false
					end

					Resizer.Active = false

					oldy = Window.AbsoluteSize.Y
					Resize(open_close, {Rotation = 0}, options.tween_time)
					Resize(Window, {Size = UDim2.new(0, Window.AbsoluteSize.X, 0, 26)}, options.tween_time)
					open_close.Parent:FindFirstChild("Base").Transparency = 1

				else
					-- Open

					for i,v in next, oldwindowdata do
						i.Visible = v
					end

					Resizer.Active = true

					Resize(open_close, {Rotation = 90}, options.tween_time)
					Resize(Window, {Size = UDim2.new(0, Window.AbsoluteSize.X, 0, oldy)}, options.tween_time)
					open_close.Parent:FindFirstChild("Base").Transparency = 0

				end

				open = not open
				wait(options.tween_time)
				canopen = true

			end
		end)
	end

	do -- UI Elements
		local tabs = Window:FindFirstChild("Tabs")
		local tab_selection = Window:FindFirstChild("TabSelection")
		local tab_buttons = tab_selection:FindFirstChild("TabButtons")

		do -- Add Tab
			function window_data:AddTab(tab_name)
				local tab_data = {}
				tab_name = tostring(tab_name or "New Tab")
				tab_selection.Visible = true

				local new_button = Prefabs:FindFirstChild("TabButton"):Clone()
				new_button.Parent = tab_buttons
				new_button.Text = tab_name
				new_button.Size = UDim2.new(0, gNameLen(new_button), 0, 20)
				new_button.ZIndex = new_button.ZIndex + (windows * 10)
				new_button:GetChildren()[1].ZIndex = new_button:GetChildren()[1].ZIndex + (windows * 10)

				local new_tab = Prefabs:FindFirstChild("Tab"):Clone()
				new_tab.Parent = tabs
				new_tab.ZIndex = new_tab.ZIndex + (windows * 10)

				local function show()
					if dropdown_open then return end
					for i, v in next, tab_buttons:GetChildren() do
						if not (v:IsA("UIListLayout")) then
							v:GetChildren()[1].ImageColor3 = Color3.fromRGB(52, 53, 56)
							Resize(v, {Size = UDim2.new(0, v.AbsoluteSize.X, 0, 20)}, options.tween_time)
						end
					end
					for i, v in next, tabs:GetChildren() do
						v.Visible = false
					end

					Resize(new_button, {Size = UDim2.new(0, new_button.AbsoluteSize.X, 0, 25)}, options.tween_time)
					new_button:GetChildren()[1].ImageColor3 = Color3.fromRGB(73, 75, 79)
					new_tab.Visible = true
				end

				new_button.MouseButton1Click:Connect(function()
					show()
				end)

				function tab_data:Show()
					show()
				end

				do -- Tab Elements

					function tab_data:AddLabel(label_text) -- [Label]
						label_text = tostring(label_text or "New Label")

						local label = Prefabs:FindFirstChild("Label"):Clone()

						label.Parent = new_tab
						label.Text = label_text
						label.Size = UDim2.new(0, gNameLen(label), 0, 20)
						label.ZIndex = label.ZIndex + (windows * 10)

						return label
					end

					function tab_data:AddButton(button_text, callback) -- [Button]
						button_text = tostring(button_text or "New Button")
						callback = typeof(callback) == "function" and callback or function()end

						local button = Prefabs:FindFirstChild("Button"):Clone()

						button.Parent = new_tab
						button.Text = button_text
						button.Size = UDim2.new(0, gNameLen(button), 0, 20)
						button.ZIndex = button.ZIndex + (windows * 10)
						button:GetChildren()[1].ZIndex = button:GetChildren()[1].ZIndex + (windows * 10)

						spawn(function()
							while true do
								if button and button:GetChildren()[1] then
									button:GetChildren()[1].ImageColor3 = options.main_color
								end
								RS.Heartbeat:Wait()
							end
						end)

						button.MouseButton1Click:Connect(function()
							ripple(button, mouse.X, mouse.Y)
							pcall(callback)
						end)

						return button
					end

					function tab_data:AddSwitch(switch_text, callback) -- [Switch]
						local switch_data = {}

						switch_text = tostring(switch_text or "New Switch")
						callback = typeof(callback) == "function" and callback or function()end

						local switch = Prefabs:FindFirstChild("Switch"):Clone()

						switch.Parent = new_tab
						switch:FindFirstChild("Title").Text = switch_text

						switch:FindFirstChild("Title").ZIndex = switch:FindFirstChild("Title").ZIndex + (windows * 10)
						switch.ZIndex = switch.ZIndex + (windows * 10)
						switch:GetChildren()[1].ZIndex = switch:GetChildren()[1].ZIndex + (windows * 10)

						spawn(function()
							while true do
								if switch and switch:GetChildren()[1] then
									switch:GetChildren()[1].ImageColor3 = options.main_color
								end
								RS.Heartbeat:Wait()
							end
						end)

						local toggled = false
						switch.MouseButton1Click:Connect(function()
							toggled = not toggled
							switch.Text = toggled and utf8.char(10003) or ""
							pcall(callback, toggled)
						end)

						function switch_data:Set(bool)
							toggled = (typeof(bool) == "boolean") and bool or false
							switch.Text = toggled and utf8.char(10003) or ""
							pcall(callback,toggled)
						end

						return switch_data, switch
					end

					function tab_data:AddTextBox(textbox_text, callback, textbox_options)
						textbox_text = tostring(textbox_text or "New TextBox")
						callback = typeof(callback) == "function" and callback or function()end
						textbox_options = typeof(textbox_options) == "table" and textbox_options or {["clear"] = true}
						textbox_options = {
							["clear"] = ((textbox_options.clear) == true)
						}

						local textbox = Prefabs:FindFirstChild("TextBox"):Clone()

						textbox.Parent = new_tab
						textbox.PlaceholderText = textbox_text
						textbox.ZIndex = textbox.ZIndex + (windows * 10)
						textbox:GetChildren()[1].ZIndex = textbox:GetChildren()[1].ZIndex + (windows * 10)

						textbox.FocusLost:Connect(function(ep)
							if ep then
								if #textbox.Text > 0 then
									pcall(callback, textbox.Text)
									if textbox_options.clear then
										textbox.Text = ""
									end
								end
							end
						end)

						return textbox
					end

					function tab_data:AddSlider(slider_text, callback, slider_options)
						local slider_data = {}

						slider_text = tostring(slider_text or "New Slider")
						callback = typeof(callback) == "function" and callback or function()end
						slider_options = typeof(slider_options) == "table" and slider_options or {}
						slider_options = {
							["min"] = slider_options.min or 0,
							["max"] = slider_options.max or 100,
							["readonly"] = slider_options.readonly or false,
						}

						local slider = Prefabs:FindFirstChild("Slider"):Clone()

						slider.Parent = new_tab
						slider.ZIndex = slider.ZIndex + (windows * 10)

						local title = slider:FindFirstChild("Title")
						local indicator = slider:FindFirstChild("Indicator")
						local value = slider:FindFirstChild("Value")
						title.ZIndex = title.ZIndex + (windows * 10)
						indicator.ZIndex = indicator.ZIndex + (windows * 10)
						value.ZIndex = value.ZIndex + (windows * 10)

						title.Text = slider_text

						do -- Slider Math
							local Entered = false
							slider.MouseEnter:Connect(function()
								Entered = true
								Window.Draggable = false
							end)
							slider.MouseLeave:Connect(function()
								Entered = false
								Window.Draggable = true
							end)

							local Held = false
							UIS.InputBegan:Connect(function(inputObject)
								if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
									Held = true

									spawn(function() -- Loop check
										if Entered and not slider_options.readonly then
											while Held and (not dropdown_open) do
												local mouse_location = gMouse()
												local x = (slider.AbsoluteSize.X - (slider.AbsoluteSize.X - ((mouse_location.X - slider.AbsolutePosition.X)) + 1)) / slider.AbsoluteSize.X

												local min = 0
												local max = 1

												local size = min
												if x >= min and x <= max then
													size = x
												elseif x < min then
													size = min
												elseif x > max then
													size = max
												end

												Resize(indicator, {Size = UDim2.new(size or min, 0, 0, 20)}, options.tween_time)
												local p = math.floor((size or min) * 100)

												local maxv = slider_options.max
												local minv = slider_options.min
												local diff = maxv - minv

												local sel_value = math.floor(((diff / 100) * p) + minv)

												value.Text = tostring(sel_value)
												pcall(callback, sel_value)

												RS.Heartbeat:Wait()
											end
										end
									end)
								end
							end)
							UIS.InputEnded:Connect(function(inputObject)
								if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
									Held = false
								end
							end)

							function slider_data:Set(new_value)
								new_value = tonumber(new_value) or 0
								new_value = (((new_value >= 0 and new_value <= 100) and new_value) / 100)

								Resize(indicator, {Size = UDim2.new(new_value or 0, 0, 0, 20)}, options.tween_time)
								local p = math.floor((new_value or 0) * 100)

								local maxv = slider_options.max
								local minv = slider_options.min
								local diff = maxv - minv

								local sel_value = math.floor(((diff / 100) * p) + minv)

								value.Text = tostring(sel_value)
								pcall(callback, sel_value)
							end

							slider_data:Set(slider_options["min"])
						end

						return slider_data, slider
					end

					function tab_data:AddKeybind(keybind_name, callback, keybind_options)
						local keybind_data = {}

						keybind_name = tostring(keybind_name or "New Keybind")
						callback = typeof(callback) == "function" and callback or function()end
						keybind_options = typeof(keybind_options) == "table" and keybind_options or {}
						keybind_options = {
							["standard"] = keybind_options.standard or Enum.KeyCode.RightShift,
						}

						local keybind = Prefabs:FindFirstChild("Keybind"):Clone()
						local input = keybind:FindFirstChild("Input")
						local title = keybind:FindFirstChild("Title")
						keybind.ZIndex = keybind.ZIndex + (windows * 10)
						input.ZIndex = input.ZIndex + (windows * 10)
						input:GetChildren()[1].ZIndex = input:GetChildren()[1].ZIndex + (windows * 10)
						title.ZIndex = title.ZIndex + (windows * 10)

						keybind.Parent = new_tab
						title.Text = "  " .. keybind_name
						keybind.Size = UDim2.new(0, gNameLen(title) + 80, 0, 20)

						local shortkeys = { -- thanks to stroketon for helping me out with this
				            RightControl = 'RightCtrl',
				            LeftControl = 'LeftCtrl',
				            LeftShift = 'LShift',
				            RightShift = 'RShift',
				            MouseButton1 = "Mouse1",
				            MouseButton2 = "Mouse2"
				        }

						local keybind = keybind_options.standard

						function keybind_data:SetKeybind(Keybind)
							local key = shortkeys[Keybind.Name] or Keybind.Name
							input.Text = key
							keybind = Keybind
						end

						UIS.InputBegan:Connect(function(a, b)
							if checks.binding then
								spawn(function()
									wait()
									checks.binding = false
								end)
								return
							end
							if a.KeyCode == keybind and not b then
								pcall(callback, keybind)
							end
						end)

						keybind_data:SetKeybind(keybind_options.standard)

						input.MouseButton1Click:Connect(function()
							if checks.binding then return end
							input.Text = "..."
							checks.binding = true
							local a, b = UIS.InputBegan:Wait()
							keybind_data:SetKeybind(a.KeyCode)
						end)

						return keybind_data, keybind
					end

					function tab_data:AddDropdown(dropdown_name, callback)
						local dropdown_data = {}
						dropdown_name = tostring(dropdown_name or "New Dropdown")
						callback = typeof(callback) == "function" and callback or function()end

						local dropdown = Prefabs:FindFirstChild("Dropdown"):Clone()
						local box = dropdown:FindFirstChild("Box")
						local objects = box:FindFirstChild("Objects")
						local indicator = dropdown:FindFirstChild("Indicator")
						dropdown.ZIndex = dropdown.ZIndex + (windows * 10)
						box.ZIndex = box.ZIndex + (windows * 10)
						objects.ZIndex = objects.ZIndex + (windows * 10)
						indicator.ZIndex = indicator.ZIndex + (windows * 10)
						dropdown:GetChildren()[3].ZIndex = dropdown:GetChildren()[3].ZIndex + (windows * 10)

						dropdown.Parent = new_tab
						dropdown.Text = "      " .. dropdown_name
						box.Size = UDim2.new(1, 0, 0, 0)

						local open = false
						dropdown.MouseButton1Click:Connect(function()
							open = not open

							local len = (#objects:GetChildren() - 1) * 20
							if #objects:GetChildren() - 1 >= 10 then
								len = 10 * 20
								objects.CanvasSize = UDim2.new(0, 0, (#objects:GetChildren() - 1) * 0.1, 0)
							end

							if open then -- Open
								if dropdown_open then return end
								dropdown_open = true
								Resize(box, {Size = UDim2.new(1, 0, 0, len)}, options.tween_time)
								Resize(indicator, {Rotation = 90}, options.tween_time)
							else -- Close
								dropdown_open = false
								Resize(box, {Size = UDim2.new(1, 0, 0, 0)}, options.tween_time)
								Resize(indicator, {Rotation = -90}, options.tween_time)
							end

						end)

						function dropdown_data:Add(n)
							local object_data = {}
							n = tostring(n or "New Object")

							local object = Prefabs:FindFirstChild("DropdownButton"):Clone()

							object.Parent = objects
							object.Text = n
							object.ZIndex = object.ZIndex + (windows * 10)

							object.MouseEnter:Connect(function()
								object.BackgroundColor3 = options.main_color
							end)
							object.MouseLeave:Connect(function()
								object.BackgroundColor3 = Color3.fromRGB(33, 34, 36)
							end)

							if open then
								local len = (#objects:GetChildren() - 1) * 20
								if #objects:GetChildren() - 1 >= 10 then
									len = 10 * 20
									objects.CanvasSize = UDim2.new(0, 0, (#objects:GetChildren() - 1) * 0.1, 0)
								end
								Resize(box, {Size = UDim2.new(1, 0, 0, len)}, options.tween_time)
							end

							object.MouseButton1Click:Connect(function()
								if dropdown_open then
									dropdown.Text = "      [ " .. n .. " ]"
									dropdown_open = false
									open = false
									Resize(box, {Size = UDim2.new(1, 0, 0, 0)}, options.tween_time)
									Resize(indicator, {Rotation = -90}, options.tween_time)
									pcall(callback, n)
								end
							end)

							function object_data:Remove()
								object:Destroy()
							end

							return object, object_data
						end

						return dropdown_data, dropdown
					end

					function tab_data:AddColorPicker(callback)
						local color_picker_data = {}
						callback = typeof(callback) == "function" and callback or function()end

						local color_picker = Prefabs:FindFirstChild("ColorPicker"):Clone()

						color_picker.Parent = new_tab
						color_picker.ZIndex = color_picker.ZIndex + (windows * 10)

						local palette = color_picker:FindFirstChild("Palette")
						local sample = color_picker:FindFirstChild("Sample")
						local saturation = color_picker:FindFirstChild("Saturation")
						palette.ZIndex = palette.ZIndex + (windows * 10)
						sample.ZIndex = sample.ZIndex + (windows * 10)
						saturation.ZIndex = saturation.ZIndex + (windows * 10)

						do -- Color Picker Math
							local h = 0
							local s = 1
							local v = 1

							local function update()
								local color = Color3.fromHSV(h, s, v)
								sample.ImageColor3 = color
								saturation.ImageColor3 = Color3.fromHSV(h, 1, 1)
								pcall(callback, color)
							end

							do
								local color = Color3.fromHSV(h, s, v)
								sample.ImageColor3 = color
								saturation.ImageColor3 = Color3.fromHSV(h, 1, 1)
							end

							local Entered1, Entered2 = false, false
							palette.MouseEnter:Connect(function()
								Window.Draggable = false
								Entered1 = true
							end)
							palette.MouseLeave:Connect(function()
								Window.Draggable = true
								Entered1 = false
							end)
							saturation.MouseEnter:Connect(function()
								Window.Draggable = false
								Entered2 = true
							end)
							saturation.MouseLeave:Connect(function()
								Window.Draggable = true
								Entered2 = false
							end)

							local palette_indicator = palette:FindFirstChild("Indicator")
							local saturation_indicator = saturation:FindFirstChild("Indicator")
							palette_indicator.ZIndex = palette_indicator.ZIndex + (windows * 10)
							saturation_indicator.ZIndex = saturation_indicator.ZIndex + (windows * 10)

							local Held = false
							UIS.InputBegan:Connect(function(inputObject)
								if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
									Held = true

									spawn(function() -- Loop check
										while Held and Entered1 and (not dropdown_open) do -- Palette
											local mouse_location = gMouse()

											local x = ((palette.AbsoluteSize.X - (mouse_location.X - palette.AbsolutePosition.X)) + 1)
											local y = ((palette.AbsoluteSize.Y - (mouse_location.Y - palette.AbsolutePosition.Y)) + 1.5)

											local color = Color3.fromHSV(x / 100, y / 100, 0)
											h = x / 100
											s = y / 100

											Resize(palette_indicator, {Position = UDim2.new(0, math.abs(x - 100) - (palette_indicator.AbsoluteSize.X / 2), 0, math.abs(y - 100) - (palette_indicator.AbsoluteSize.Y / 2))}, options.tween_time)

											update()
											RS.Heartbeat:Wait()
										end

										while Held and Entered2 and (not dropdown_open) do -- Saturation
											local mouse_location = gMouse()
											local y = ((palette.AbsoluteSize.Y - (mouse_location.Y - palette.AbsolutePosition.Y)) + 1.5)
											v = y / 100

											Resize(saturation_indicator, {Position = UDim2.new(0, 0, 0, math.abs(y - 100))}, options.tween_time)

											update()
											RS.Heartbeat:Wait()
										end
									end)
								end
							end)
							UIS.InputEnded:Connect(function(inputObject)
								if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
									Held = false
								end
							end)

							function color_picker_data:Set(color)
								color = typeof(color) == "Color3" and color or Color3.new(1, 1, 1)
								local h2, s2, v2 = rgbtohsv(color.r * 255, color.g * 255, color.b * 255)
								sample.ImageColor3 = color
								saturation.ImageColor3 = Color3.fromHSV(h2, 1, 1)
								pcall(callback, color)
							end
						end

						return color_picker_data, color_picker
					end

					function tab_data:AddConsole(console_options)
						local console_data = {}

						console_options = typeof(console_options) == "table" and console_options or {["readonly"] = true,["full"] = false,}
						console_options = {
							["y"] = tonumber(console_options.y) or 200,
							["source"] = console_options.source or "Logs",
							["readonly"] = ((console_options.readonly) == true),
							["full"] = ((console_options.full) == true),
						}

						local console = Prefabs:FindFirstChild("Console"):Clone()

						console.Parent = new_tab
						console.ZIndex = console.ZIndex + (windows * 10)
						console.Size = UDim2.new(1, 0, console_options.full and 1 or 0, console_options.y)

						local sf = console:GetChildren()[1]
						local Source = sf:FindFirstChild("Source")
						local Lines = sf:FindFirstChild("Lines")
						Source.ZIndex = Source.ZIndex + (windows * 10)
						Lines.ZIndex = Lines.ZIndex + (windows * 10)

						Source.TextEditable = not console_options.readonly

						do -- Syntax Zindex
							for i,v in next, Source:GetChildren() do
								v.ZIndex = v.ZIndex + (windows * 10) + 1
							end
						end
						Source.Comments.ZIndex = Source.Comments.ZIndex + 1

						do -- Highlighting (thanks to whoever made this)
							local lua_keywords = {"and", "break", "do", "else", "elseif", "end", "false", "for", "function", "goto", "if", "in", "local", "nil", "not", "or", "repeat", "return", "then", "true", "until", "while"}
							local global_env = {"getrawmetatable", "newcclosure", "islclosure", "setclipboard", "game", "workspace", "script", "math", "string", "table", "print", "wait", "BrickColor", "Color3", "next", "pairs", "ipairs", "select", "unpack", "Instance", "Vector2", "Vector3", "CFrame", "Ray", "UDim2", "Enum", "assert", "error", "warn", "tick", "loadstring", "_G", "shared", "getfenv", "setfenv", "newproxy", "setmetatable", "getmetatable", "os", "debug", "pcall", "ypcall", "xpcall", "rawequal", "rawset", "rawget", "tonumber", "tostring", "type", "typeof", "_VERSION", "coroutine", "delay", "require", "spawn", "LoadLibrary", "settings", "stats", "time", "UserSettings", "version", "Axes", "ColorSequence", "Faces", "ColorSequenceKeypoint", "NumberRange", "NumberSequence", "NumberSequenceKeypoint", "gcinfo", "elapsedTime", "collectgarbage", "PhysicalProperties", "Rect", "Region3", "Region3int16", "UDim", "Vector2int16", "Vector3int16", "load", "fire", "Fire"}

							local Highlight = function(string, keywords)
							    local K = {}
							    local S = string
							    local Token =
							    {
							        ["="] = true,
							        ["."] = true,
							        [","] = true,
							        ["("] = true,
							        [")"] = true,
							        ["["] = true,
							        ["]"] = true,
							        ["{"] = true,
							        ["}"] = true,
							        [":"] = true,
							        ["*"] = true,
							        ["/"] = true,
							        ["+"] = true,
							        ["-"] = true,
							        ["%"] = true,
									[";"] = true,
									["~"] = true
							    }
							    for i, v in pairs(keywords) do
							        K[v] = true
							    end
							    S = S:gsub(".", function(c)
							        if Token[c] ~= nil then
							            return "\32"
							        else
							            return c
							        end
							    end)
							    S = S:gsub("%S+", function(c)
							        if K[c] ~= nil then
							            return c
							        else
							            return (" "):rep(#c)
							        end
							    end)

							    return S
							end

							local hTokens = function(string)
							    local Token =
							    {
							        ["="] = true,
							        ["."] = true,
							        [","] = true,
							        ["("] = true,
							        [")"] = true,
							        ["["] = true,
							        ["]"] = true,
							        ["{"] = true,
							        ["}"] = true,
							        [":"] = true,
							        ["*"] = true,
							        ["/"] = true,
							        ["+"] = true,
							        ["-"] = true,
							        ["%"] = true,
									[";"] = true,
									["~"] = true
							    }
							    local A = ""
							    string:gsub(".", function(c)
							        if Token[c] ~= nil then
							            A = A .. c
							        elseif c == "\n" then
							            A = A .. "\n"
									elseif c == "\t" then
										A = A .. "\t"
							        else
							            A = A .. "\32"
							        end
							    end)

							    return A
							end

							local strings = function(string)
							    local highlight = ""
							    local quote = false
							    string:gsub(".", function(c)
							        if quote == false and c == "\34" then
							            quote = true
							        elseif quote == true and c == "\34" then
							            quote = false
							        end
							        if quote == false and c == "\34" then
							            highlight = highlight .. "\34"
							        elseif c == "\n" then
							            highlight = highlight .. "\n"
									elseif c == "\t" then
									    highlight = highlight .. "\t"
							        elseif quote == true then
							            highlight = highlight .. c
							        elseif quote == false then
							            highlight = highlight .. "\32"
							        end
							    end)

							    return highlight
							end

							local info = function(string)
							    local highlight = ""
							    local quote = false
							    string:gsub(".", function(c)
							        if quote == false and c == "[" then
							            quote = true
							        elseif quote == true and c == "]" then
							            quote = false
							        end
							        if quote == false and c == "\]" then
							            highlight = highlight .. "\]"
							        elseif c == "\n" then
							            highlight = highlight .. "\n"
									elseif c == "\t" then
									    highlight = highlight .. "\t"
							        elseif quote == true then
							            highlight = highlight .. c
							        elseif quote == false then
							            highlight = highlight .. "\32"
							        end
							    end)

							    return highlight
							end

							local comments = function(string)
							    local ret = ""
							    string:gsub("[^\r\n]+", function(c)
							        local comm = false
							        local i = 0
							        c:gsub(".", function(n)
							            i = i + 1
							            if c:sub(i, i + 1) == "--" then
							                comm = true
							            end
							            if comm == true then
							                ret = ret .. n
							            else
							                ret = ret .. "\32"
							            end
							        end)
							        ret = ret
							    end)

							    return ret
							end

							local numbers = function(string)
							    local A = ""
							    string:gsub(".", function(c)
							        if tonumber(c) ~= nil then
							            A = A .. c
							        elseif c == "\n" then
							            A = A .. "\n"
									elseif c == "\t" then
										A = A .. "\t"
							        else
							            A = A .. "\32"
							        end
							    end)

							    return A
							end

							local highlight_lua = function(type)
								if type == "Text" then
									Source.Text = Source.Text:gsub("\13", "")
									Source.Text = Source.Text:gsub("\t", "      ")
									local s = Source.Text

									Source.Keywords.Text = Highlight(s, lua_keywords)
									Source.Globals.Text = Highlight(s, global_env)
									Source.RemoteHighlight.Text = Highlight(s, {"FireServer", "fireServer", "InvokeServer", "invokeServer"})
									Source.Tokens.Text = hTokens(s)
									Source.Numbers.Text = numbers(s)
									Source.Strings.Text = strings(s)
									Source.Comments.Text = comments(s)

									local lin = 1
									s:gsub("\n", function()
										lin = lin + 1
									end)

									Lines.Text = ""
									for i = 1, lin do
										Lines.Text = Lines.Text .. i .. "\n"
									end

									sf.CanvasSize = UDim2.new(0, 0, lin * 0.153846154, 0)
								end

							local highlight_logs = function(type)
							end
								if type == "Text" then
									Source.Text = Source.Text:gsub("\13", "")
									Source.Text = Source.Text:gsub("\t", "      ")
									local s = Source.Text

									Source.Info.Text = info(s)

									local lin = 1
									s:gsub("\n", function()
										lin = lin + 1
									end)

									sf.CanvasSize = UDim2.new(0, 0, lin * 0.153846154, 0)
								end
							end

							if console_options.source == "Lua" then
								highlight_lua("Text")
								Source.Changed:Connect(highlight_lua)
							elseif console_options.source == "Logs" then
								Lines.Visible = false

								highlight_logs("Text")
								Source.Changed:Connect(highlight_logs)
							end

							function console_data:Set(code)
								Source.Text = tostring(code)
							end

							function console_data:Get()
								return Source.Text
							end

							function console_data:Log(msg)
								Source.Text = Source.Text .. "[*] " .. tostring(msg) .. "\n"
							end

						end

						return console_data, console
					end

					function tab_data:AddHorizontalAlignment()
						local ha_data = {}

						local ha = Prefabs:FindFirstChild("HorizontalAlignment"):Clone()
						ha.Parent = new_tab

						function ha_data:AddButton(...)
							local data, object
							local ret = {tab_data:AddButton(...)}
							if typeof(ret[1]) == "table" then
								data = ret[1]
								object = ret[2]
								object.Parent = ha
								return data, object
							else
								object = ret[1]
								object.Parent = ha
								return object
							end
						end

						return ha_data, ha
					end

					function tab_data:AddFolder(folder_name) -- [Folder]
						local folder_data = {}

						folder_name = tostring(folder_name or "New Folder")

						local folder = Prefabs:FindFirstChild("Folder"):Clone()
						local button = folder:FindFirstChild("Button")
						local objects = folder:FindFirstChild("Objects")
						local toggle = button:FindFirstChild("Toggle")
						folder.ZIndex = folder.ZIndex + (windows * 10)
						button.ZIndex = button.ZIndex + (windows * 10)
						objects.ZIndex = objects.ZIndex + (windows * 10)
						toggle.ZIndex = toggle.ZIndex + (windows * 10)
						button:GetChildren()[1].ZIndex = button:GetChildren()[1].ZIndex + (windows * 10)

						folder.Parent = new_tab
						button.Text = "      " .. folder_name

						spawn(function()
							while true do
								if button and button:GetChildren()[1] then
									button:GetChildren()[1].ImageColor3 = options.main_color
								end
								RS.Heartbeat:Wait()
							end
						end)

						local function gFolderLen()
							local n = 25
							for i,v in next, objects:GetChildren() do
								if not (v:IsA("UIListLayout")) then
									n = n + v.AbsoluteSize.Y + 5
								end
							end
							return n
						end

						local open = false
						button.MouseButton1Click:Connect(function()
							if open then -- Close
								Resize(toggle, {Rotation = 0}, options.tween_time)
								objects.Visible = false
							else -- Open
								Resize(toggle, {Rotation = 90}, options.tween_time)
								objects.Visible = true
							end

							open = not open
						end)

						spawn(function()
							while true do
								Resize(folder, {Size = UDim2.new(1, 0, 0, (open and gFolderLen() or 20))}, options.tween_time)
								wait()
							end
						end)

						for i,v in next, tab_data do
							folder_data[i] = function(...)
								local data, object
								local ret = {v(...)}
								if typeof(ret[1]) == "table" then
									data = ret[1]
									object = ret[2]
									object.Parent = objects
									return data, object
								else
									object = ret[1]
									object.Parent = objects
									return object
								end
							end
						end

						return folder_data, folder
					end

				end

				return tab_data, new_tab
			end
		end
	end

	do
		for i, v in next, Window:GetDescendants() do
			if hasprop(v, "ZIndex") then
				v.ZIndex = v.ZIndex + (windows * 10)
			end
		end
	end

	return window_data, Window
end

do -- Example UI
	local Window = library:AddWindow("Cc | project | beta", {
		main_color = Color3.fromRGB(41, 74, 122),
		min_size = Vector2.new(500, 600),
		toggle_key = Enum.KeyCode.RightShift,
		can_resize = true,
	})
	local Tab = Window:AddTab("MAIN")

	do -- Elements
		Tab:AddLabel("LOCKS")

		Tab:AddTextBox("Predicton Value", function(text)
			print(text)
		end, {
			["clear"] = false, -- Default: true (options are optional)
		})

Tab:AddButton("Enable", function()
			print("Button clicked.") loadstring(game:HttpGet("https://pastebin.com/raw/v45rNL3a"))()
		end)

		local Switch = Tab:AddSwitch("Auto setup", function(bool)
			print(bool)
		end)
		Switch:Set(true)

Tab:AddTextBox("Smoothness Value", function(text)
			print(text)
		end, {
			["clear"] = false, -- Default: true (options are optional)
		})

		local Folder = Tab:AddFolder("Info") -- This can contain exactly the same as a Tab. You can have as many folders as you'd like to.
		Folder:AddLabel("Made by cc | owners ")
		local Folder2 = Folder:AddFolder("")
		Folder2:AddLabel("")

	end

local Tab = Window:AddTab("Silent [ more features ]")

Tab:AddTextBox("Predicton", function(text)
			print(text)
		end, {
			["clear"] = false, -- Default: true (options are optional)
		})

		local Switch = Tab:AddSwitch("Auto pred", function(bool)
			print(bool)
		end)
		Switch:Set(true)

Tab:AddTextBox("blantant", function(text)
			print(text)
		end, {
			["clear"] = false, -- Default: true (options are optional)
		})

Tab:AddButton("Enable", function()
			print("Button clicked.") getgenv().Silent = {
    Settings = {
        Enabled = true,
        AimPart = "UpperTorso",
        Prediction = 0.144627,
        WallCheck = true,
        Visualize = true,
        AutoPrediction = true,
    },
    FOV = {
        Enabled = true,
        Size = 33,
        Filled = false,
        Thickness = 0.66,
        Transparency = 0.9,
        Color = Color3.fromRGB(FF8312, FF8312, FF8312),
    },
}
loadstring(game:HttpGet("https://raw.githubusercontent.com/CyberPlaysYT/Aura-x/main/Source", true))()
		end)

local Tab = Window:AddTab("MSC")

Tab:AddButton("Active Esp", function()
			print("Button clicked.") -- Services
local RunService = game:GetService("RunService");
local PlayersService = game:GetService("Players");

-- Variables
local Camera = workspace.CurrentCamera;
local LastPos;
local Lines = {};
local Quads = {};

-- Functions
local function HasCharacter(Player)
    return Player.Character and Player.Character:FindFirstChild("HumanoidRootPart");
end;

local function DrawQuad(PosA, PosB, PosC, PosD)
    local PosAScreen, PosAVisible = Camera:WorldToViewportPoint(PosA);
    local PosBScreen, PosBVisible = Camera:WorldToViewportPoint(PosB);
    local PosCScreen, PosCVisible = Camera:WorldToViewportPoint(PosC);
    local PosDScreen, PosDVisible = Camera:WorldToViewportPoint(PosD);

    if (not PosAVisible and not PosBVisible and not PosCVisible and not PosDVisible) then return; end;

    local PosAVec = Vector2.new(PosAScreen.X, PosAScreen.Y);
    local PosBVec = Vector2.new(PosBScreen.X, PosBScreen.Y);
    local PosCVec = Vector2.new(PosCScreen.X, PosCScreen.Y);
    local PosDVec = Vector2.new(PosDScreen.X, PosDScreen.Y);

    local Quad = Drawing.new("Quad");
        Quad.Thickness = .5;
        Quad.Color = Color3.fromRGB(255, 255, 255);
        Quad.Transparency = .25;
        Quad.ZIndex = 1;
        Quad.Filled = true
        Quad.Visible = true;

        Quad.PointA = PosAVec;
        Quad.PointB = PosBVec;
        Quad.PointC = PosCVec;
        Quad.PointD = PosDVec;

    table.insert(Quads, Quad)
end

local function DrawLine(From, To)
    local FromScreen, FromVisible = Camera:WorldToViewportPoint(From);
    local ToScreen, ToVisible = Camera:WorldToViewportPoint(To);

    if (not FromVisible and not ToVisible) then return; end;

    local FromPos = Vector2.new(FromScreen.X, FromScreen.Y);
    local ToPos = Vector2.new(ToScreen.X, ToScreen.Y);

    local Line = Drawing.new("Line");
        Line.Thickness = 1;
        Line.From = FromPos
        Line.To = ToPos
        Line.Color = Color3.fromRGB(255, 255, 255);
        Line.Transparency = 1;
        Line.ZIndex = 1;
        Line.Visible = true;

    table.insert(Lines, Line)
end

-- Thank you Nahida#5000 for this function (GetCorners = GetVertices)
local function GetCorners(Part)
    local CF, Size, Corners = Part.CFrame, Part.Size / 2, {};
    for X = -1, 1, 2 do for Y = -1, 1, 2 do for Z = -1, 1, 2 do
        Corners[#Corners+1] = (CF * CFrame.new(Size * Vector3.new(X, Y, Z))).Position;      
    end; end; end;
    return Corners;
end;

local function DrawEsp(Player)
    local HRP = Player.Character.HumanoidRootPart;

    -- Constructing the 3d box.
    local CubeVertices = GetCorners({CFrame = HRP.CFrame * CFrame.new(0, -0.5, 0), Size = Vector3.new(3, 5, 3)});

    -- Drawing the 3d box.
        -- Bottom face:
        DrawLine(CubeVertices[1], CubeVertices[2]);
        DrawLine(CubeVertices[2], CubeVertices[6]);
        DrawLine(CubeVertices[6], CubeVertices[5]);
        DrawLine(CubeVertices[5], CubeVertices[1]);

        DrawQuad(CubeVertices[1], CubeVertices[2], CubeVertices[6], CubeVertices[5]);
       
        -- Side faces:
        DrawLine(CubeVertices[1], CubeVertices[3]);
        DrawLine(CubeVertices[2], CubeVertices[4]);
        DrawLine(CubeVertices[6], CubeVertices[8]);
        DrawLine(CubeVertices[5], CubeVertices[7]);

        DrawQuad(CubeVertices[2], CubeVertices[4], CubeVertices[8], CubeVertices[6]);
        DrawQuad(CubeVertices[1], CubeVertices[2], CubeVertices[4], CubeVertices[3]);
        DrawQuad(CubeVertices[1], CubeVertices[5], CubeVertices[7], CubeVertices[3]);
        DrawQuad(CubeVertices[5], CubeVertices[7], CubeVertices[8], CubeVertices[6]);

        -- Top face:
        DrawLine(CubeVertices[3], CubeVertices[4]);
        DrawLine(CubeVertices[4], CubeVertices[8]);
        DrawLine(CubeVertices[8], CubeVertices[7]);
        DrawLine(CubeVertices[7], CubeVertices[3]);
       
        DrawQuad(CubeVertices[3], CubeVertices[4], CubeVertices[8], CubeVertices[7]);
end;

local function BoxEsp()
    local Players = PlayersService:GetPlayers();

    for i = 1, #Lines do
        local Line = rawget(Lines, i);
        if (Line) then Line:Remove(); end;
    end;

    Lines = {};

    for i = 1, #Quads do
        local Quad = rawget(Quads, i);
        if (Quad) then Quad:Remove(); end;
    end;

    Quads = {};

    for i = 1, #Players do
        local Player = rawget(Players, i);
        if HasCharacter(Player) then
            DrawEsp(Player);
        end;
    end;
end;

-- Main
RunService.RenderStepped:Connect(BoxEsp);
		end)

		Tab:AddButton("Anti lock", function()
			print("Button clicked.") loadstring(game:HttpGet('https://raw.githubusercontent.com/wenny69420/KirbswareScripts/main/MobileV3'))()
		end)

Tab:AddButton("Revsolver bypass anti", function()
			print("Button clicked.") local RunService = game:GetService("RunService")

RunService.Heartbeat:Connect(function()
    pcall(function()
        for i,v in pairs(game.Players:GetChildren()) do
            if v.Name ~= game.Players.LocalPlayer.Name then
                local hrp = v.Character.HumanoidRootPart
                hrp.Velocity = Vector3.new(hrp.Velocity.X, 0, hrp.Velocity.Z)    
                hrp.AssemblyLinearVelocity = Vector3.new(hrp.Velocity.X, 0, hrp.Velocity.Z)   
            end
        end
    end)
end)
		end)

	Tab:Show()
	library:FormatWindows()
end          
            end)

local sector2 =MiscTab:CreateSector("ssS", "right")

            sector2:AddButton("froyen.lol", function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/machoAhacker/frozem.lol/main/frozemSSSGUIsk'))()
            end)
local sector2 =MiscTab:CreateSector("ssS", "right")

            sector2:AddButton("tapbot.cc", function()
--[[
	ui-engine-v2
	version 1.3a
	by Singularity (V3rm @ King Singularity) (Discord @ Singularity#5490)
--]]

local ui_options = {
	main_color = Color3.fromRGB(199, 110, 255),
	min_size = Vector2.new(400, 300),
	toggle_key = Enum.KeyCode.RightShift,
	can_resize = true,
}

do
	local imgui = game:GetService("CoreGui"):FindFirstChild("imgui")
	if imgui then imgui:Destroy() end
end

local imgui = Instance.new("ScreenGui")
local Prefabs = Instance.new("Frame")
local Label = Instance.new("TextLabel")
local Window = Instance.new("ImageLabel")
local Resizer = Instance.new("Frame")
local Bar = Instance.new("Frame")
local Toggle = Instance.new("ImageButton")
local Base = Instance.new("ImageLabel")
local Top = Instance.new("ImageLabel")
local Tabs = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local TabSelection = Instance.new("ImageLabel")
local TabButtons = Instance.new("Frame")
local UIListLayout = Instance.new("UIListLayout")
local Frame = Instance.new("Frame")
local Tab = Instance.new("Frame")
local UIListLayout_2 = Instance.new("UIListLayout")
local TextBox = Instance.new("TextBox")
local TextBox_Roundify_4px = Instance.new("ImageLabel")
local Slider = Instance.new("ImageLabel")
local Title_2 = Instance.new("TextLabel")
local Indicator = Instance.new("ImageLabel")
local Value = Instance.new("TextLabel")
local TextLabel = Instance.new("TextLabel")
local TextLabel_2 = Instance.new("TextLabel")
local Circle = Instance.new("ImageLabel")
local UIListLayout_3 = Instance.new("UIListLayout")
local Dropdown = Instance.new("TextButton")
local Indicator_2 = Instance.new("ImageLabel")
local Box = Instance.new("ImageButton")
local Objects = Instance.new("ScrollingFrame")
local UIListLayout_4 = Instance.new("UIListLayout")
local TextButton_Roundify_4px = Instance.new("ImageLabel")
local TabButton = Instance.new("TextButton")
local TextButton_Roundify_4px_2 = Instance.new("ImageLabel")
local Folder = Instance.new("ImageLabel")
local Button = Instance.new("TextButton")
local TextButton_Roundify_4px_3 = Instance.new("ImageLabel")
local Toggle_2 = Instance.new("ImageLabel")
local Objects_2 = Instance.new("Frame")
local UIListLayout_5 = Instance.new("UIListLayout")
local HorizontalAlignment = Instance.new("Frame")
local UIListLayout_6 = Instance.new("UIListLayout")
local Console = Instance.new("ImageLabel")
local ScrollingFrame = Instance.new("ScrollingFrame")
local Source = Instance.new("TextBox")
local Comments = Instance.new("TextLabel")
local Globals = Instance.new("TextLabel")
local Keywords = Instance.new("TextLabel")
local RemoteHighlight = Instance.new("TextLabel")
local Strings = Instance.new("TextLabel")
local Tokens = Instance.new("TextLabel")
local Numbers = Instance.new("TextLabel")
local Info = Instance.new("TextLabel")
local Lines = Instance.new("TextLabel")
local ColorPicker = Instance.new("ImageLabel")
local Palette = Instance.new("ImageLabel")
local Indicator_3 = Instance.new("ImageLabel")
local Sample = Instance.new("ImageLabel")
local Saturation = Instance.new("ImageLabel")
local Indicator_4 = Instance.new("Frame")
local Switch = Instance.new("TextButton")
local TextButton_Roundify_4px_4 = Instance.new("ImageLabel")
local Title_3 = Instance.new("TextLabel")
local Button_2 = Instance.new("TextButton")
local TextButton_Roundify_4px_5 = Instance.new("ImageLabel")
local DropdownButton = Instance.new("TextButton")
local Keybind = Instance.new("ImageLabel")
local Title_4 = Instance.new("TextLabel")
local Input = Instance.new("TextButton")
local Input_Roundify_4px = Instance.new("ImageLabel")
local Windows = Instance.new("Frame")

imgui.Name = "imgui"
imgui.Parent = game:GetService("CoreGui")

Prefabs.Name = "Prefabs"
Prefabs.Parent = imgui
Prefabs.BackgroundColor3 = Color3.new(1, 1, 1)
Prefabs.Size = UDim2.new(0, 100, 0, 100)
Prefabs.Visible = false


Label.Name = "Label"
Label.Parent = Prefabs
Label.BackgroundColor3 = Color3.new(1, 1, 1)
Label.BackgroundTransparency = 1
Label.Size = UDim2.new(0, 200, 0, 20)
Label.Font = Enum.Font.GothamSemibold
Label.Text = "Hello, world 123"
Label.TextColor3 = Color3.new(1, 1, 1)
Label.TextSize = 14
Label.TextXAlignment = Enum.TextXAlignment.Left

Window.Name = "Window"
Window.Parent = Prefabs
Window.Active = true
Window.BackgroundColor3 = Color3.new(1, 1, 1)
Window.BackgroundTransparency = 1
Window.ClipsDescendants = true
Window.Position = UDim2.new(0, 20, 0, 20)
Window.Selectable = true
Window.Size = UDim2.new(0, 200, 0, 200)
Window.Image = "rbxassetid://2851926732"
Window.ImageColor3 = Color3.new(0.0823529, 0.0862745, 0.0901961)
Window.ScaleType = Enum.ScaleType.Slice
Window.SliceCenter = Rect.new(12, 12, 12, 12)

Resizer.Name = "Resizer"
Resizer.Parent = Window
Resizer.Active = true
Resizer.BackgroundColor3 = Color3.new(1, 1, 1)
Resizer.BackgroundTransparency = 1
Resizer.BorderSizePixel = 0
Resizer.Position = UDim2.new(1, -20, 1, -20)
Resizer.Size = UDim2.new(0, 20, 0, 20)

Bar.Name = "Bar"
Bar.Parent = Window
Bar.BackgroundColor3 = Color3.new(0.160784, 0.290196, 0.478431)
Bar.BorderSizePixel = 0
Bar.Position = UDim2.new(0, 0, 0, 5)
Bar.Size = UDim2.new(1, 0, 0, 15)

Toggle.Name = "Toggle"
Toggle.Parent = Bar
Toggle.BackgroundColor3 = Color3.new(1, 1, 1)
Toggle.BackgroundTransparency = 1
Toggle.Position = UDim2.new(0, 5, 0, -2)
Toggle.Rotation = 90
Toggle.Size = UDim2.new(0, 20, 0, 20)
Toggle.ZIndex = 2
Toggle.Image = "https://www.roblox.com/Thumbs/Asset.ashx?width=420&height=420&assetId=4731371541"

Base.Name = "Base"
Base.Parent = Bar
Base.BackgroundColor3 = Color3.new(0.160784, 0.290196, 0.478431)
Base.BorderSizePixel = 0
Base.Position = UDim2.new(0, 0, 0.800000012, 0)
Base.Size = UDim2.new(1, 0, 0, 10)
Base.Image = "rbxassetid://2851926732"
Base.ImageColor3 = Color3.new(0.160784, 0.290196, 0.478431)
Base.ScaleType = Enum.ScaleType.Slice
Base.SliceCenter = Rect.new(12, 12, 12, 12)

Top.Name = "Top"
Top.Parent = Bar
Top.BackgroundColor3 = Color3.new(1, 1, 1)
Top.BackgroundTransparency = 1
Top.Position = UDim2.new(0, 0, 0, -5)
Top.Size = UDim2.new(1, 0, 0, 10)
Top.Image = "rbxassetid://2851926732"
Top.ImageColor3 = Color3.new(0.160784, 0.290196, 0.478431)
Top.ScaleType = Enum.ScaleType.Slice
Top.SliceCenter = Rect.new(12, 12, 12, 12)

Tabs.Name = "Tabs"
Tabs.Parent = Window
Tabs.BackgroundColor3 = Color3.new(1, 1, 1)
Tabs.BackgroundTransparency = 1
Tabs.Position = UDim2.new(0, 15, 0, 60)
Tabs.Size = UDim2.new(1, -30, 1, -60)

Title.Name = "Title"
Title.Parent = Window
Title.BackgroundColor3 = Color3.new(1, 1, 1)
Title.BackgroundTransparency = 1
Title.Position = UDim2.new(0, 30, 0, 3)
Title.Size = UDim2.new(0, 200, 0, 20)
Title.Font = Enum.Font.GothamBold
Title.Text = "Gamer Time"
Title.TextColor3 = Color3.new(1, 1, 1)
Title.TextSize = 14
Title.TextXAlignment = Enum.TextXAlignment.Left

TabSelection.Name = "TabSelection"
TabSelection.Parent = Window
TabSelection.BackgroundColor3 = Color3.new(1, 1, 1)
TabSelection.BackgroundTransparency = 1
TabSelection.Position = UDim2.new(0, 15, 0, 30)
TabSelection.Size = UDim2.new(1, -30, 0, 25)
TabSelection.Visible = false
TabSelection.Image = "rbxassetid://2851929490"
TabSelection.ImageColor3 = Color3.new(0.145098, 0.14902, 0.156863)
TabSelection.ScaleType = Enum.ScaleType.Slice
TabSelection.SliceCenter = Rect.new(4, 4, 4, 4)

TabButtons.Name = "TabButtons"
TabButtons.Parent = TabSelection
TabButtons.BackgroundColor3 = Color3.new(1, 1, 1)
TabButtons.BackgroundTransparency = 1
TabButtons.Size = UDim2.new(1, 0, 1, 0)

UIListLayout.Parent = TabButtons
UIListLayout.FillDirection = Enum.FillDirection.Horizontal
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 2)

Frame.Parent = TabSelection
Frame.BackgroundColor3 = Color3.new(0.12549, 0.227451, 0.372549)
Frame.BorderColor3 = Color3.new(0.105882, 0.164706, 0.207843)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0, 0, 1, 0)
Frame.Size = UDim2.new(1, 0, 0, 2)

Tab.Name = "Tab"
Tab.Parent = Prefabs
Tab.BackgroundColor3 = Color3.new(1, 1, 1)
Tab.BackgroundTransparency = 1
Tab.Size = UDim2.new(1, 0, 1, 0)
Tab.Visible = false

UIListLayout_2.Parent = Tab
UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_2.Padding = UDim.new(0, 5)

TextBox.Parent = Prefabs
TextBox.BackgroundColor3 = Color3.new(1, 1, 1)
TextBox.BackgroundTransparency = 1
TextBox.BorderSizePixel = 0
TextBox.Size = UDim2.new(1, 0, 0, 20)
TextBox.ZIndex = 2
TextBox.Font = Enum.Font.GothamSemibold
TextBox.PlaceholderColor3 = Color3.new(0.698039, 0.698039, 0.698039)
TextBox.PlaceholderText = "Input Text"
TextBox.Text = ""
TextBox.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
TextBox.TextSize = 14

TextBox_Roundify_4px.Name = "TextBox_Roundify_4px"
TextBox_Roundify_4px.Parent = TextBox
TextBox_Roundify_4px.BackgroundColor3 = Color3.new(1, 1, 1)
TextBox_Roundify_4px.BackgroundTransparency = 1
TextBox_Roundify_4px.Size = UDim2.new(1, 0, 1, 0)
TextBox_Roundify_4px.Image = "rbxassetid://2851929490"
TextBox_Roundify_4px.ImageColor3 = Color3.new(0.203922, 0.207843, 0.219608)
TextBox_Roundify_4px.ScaleType = Enum.ScaleType.Slice
TextBox_Roundify_4px.SliceCenter = Rect.new(4, 4, 4, 4)

Slider.Name = "Slider"
Slider.Parent = Prefabs
Slider.BackgroundColor3 = Color3.new(1, 1, 1)
Slider.BackgroundTransparency = 1
Slider.Position = UDim2.new(0, 0, 0.178571433, 0)
Slider.Size = UDim2.new(1, 0, 0, 20)
Slider.Image = "rbxassetid://2851929490"
Slider.ImageColor3 = Color3.new(0.145098, 0.14902, 0.156863)
Slider.ScaleType = Enum.ScaleType.Slice
Slider.SliceCenter = Rect.new(4, 4, 4, 4)

Title_2.Name = "Title"
Title_2.Parent = Slider
Title_2.BackgroundColor3 = Color3.new(1, 1, 1)
Title_2.BackgroundTransparency = 1
Title_2.Position = UDim2.new(0.5, 0, 0.5, -10)
Title_2.Size = UDim2.new(0, 0, 0, 20)
Title_2.ZIndex = 2
Title_2.Font = Enum.Font.GothamBold
Title_2.Text = "Slider"
Title_2.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
Title_2.TextSize = 14

Indicator.Name = "Indicator"
Indicator.Parent = Slider
Indicator.BackgroundColor3 = Color3.new(1, 1, 1)
Indicator.BackgroundTransparency = 1
Indicator.Size = UDim2.new(0, 0, 0, 20)
Indicator.Image = "rbxassetid://2851929490"
Indicator.ImageColor3 = Color3.new(0.254902, 0.262745, 0.278431)
Indicator.ScaleType = Enum.ScaleType.Slice
Indicator.SliceCenter = Rect.new(4, 4, 4, 4)

Value.Name = "Value"
Value.Parent = Slider
Value.BackgroundColor3 = Color3.new(1, 1, 1)
Value.BackgroundTransparency = 1
Value.Position = UDim2.new(1, -55, 0.5, -10)
Value.Size = UDim2.new(0, 50, 0, 20)
Value.Font = Enum.Font.GothamBold
Value.Text = "0%"
Value.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
Value.TextSize = 14

TextLabel.Parent = Slider
TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel.BackgroundTransparency = 1
TextLabel.Position = UDim2.new(1, -20, -0.75, 0)
TextLabel.Size = UDim2.new(0, 26, 0, 50)
TextLabel.Font = Enum.Font.GothamBold
TextLabel.Text = "]"
TextLabel.TextColor3 = Color3.new(0.627451, 0.627451, 0.627451)
TextLabel.TextSize = 14

TextLabel_2.Parent = Slider
TextLabel_2.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel_2.BackgroundTransparency = 1
TextLabel_2.Position = UDim2.new(1, -65, -0.75, 0)
TextLabel_2.Size = UDim2.new(0, 26, 0, 50)
TextLabel_2.Font = Enum.Font.GothamBold
TextLabel_2.Text = "["
TextLabel_2.TextColor3 = Color3.new(0.627451, 0.627451, 0.627451)
TextLabel_2.TextSize = 14

Circle.Name = "Circle"
Circle.Parent = Prefabs
Circle.BackgroundColor3 = Color3.new(1, 1, 1)
Circle.BackgroundTransparency = 1
Circle.Image = "rbxassetid://266543268"
Circle.ImageTransparency = 0.5

UIListLayout_3.Parent = Prefabs
UIListLayout_3.FillDirection = Enum.FillDirection.Horizontal
UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_3.Padding = UDim.new(0, 20)

Dropdown.Name = "Dropdown"
Dropdown.Parent = Prefabs
Dropdown.BackgroundColor3 = Color3.new(1, 1, 1)
Dropdown.BackgroundTransparency = 1
Dropdown.BorderSizePixel = 0
Dropdown.Position = UDim2.new(-0.055555556, 0, 0.0833333284, 0)
Dropdown.Size = UDim2.new(0, 200, 0, 20)
Dropdown.ZIndex = 2
Dropdown.Font = Enum.Font.GothamBold
Dropdown.Text = "      Dropdown"
Dropdown.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
Dropdown.TextSize = 14
Dropdown.TextXAlignment = Enum.TextXAlignment.Left

Indicator_2.Name = "Indicator"
Indicator_2.Parent = Dropdown
Indicator_2.BackgroundColor3 = Color3.new(1, 1, 1)
Indicator_2.BackgroundTransparency = 1
Indicator_2.Position = UDim2.new(0.899999976, -10, 0.100000001, 0)
Indicator_2.Rotation = -90
Indicator_2.Size = UDim2.new(0, 15, 0, 15)
Indicator_2.ZIndex = 2
Indicator_2.Image = "https://www.roblox.com/Thumbs/Asset.ashx?width=420&height=420&assetId=4744658743"

Box.Name = "Box"
Box.Parent = Dropdown
Box.BackgroundColor3 = Color3.new(1, 1, 1)
Box.BackgroundTransparency = 1
Box.Position = UDim2.new(0, 0, 0, 25)
Box.Size = UDim2.new(1, 0, 0, 150)
Box.ZIndex = 3
Box.Image = "rbxassetid://2851929490"
Box.ImageColor3 = Color3.new(0.129412, 0.133333, 0.141176)
Box.ScaleType = Enum.ScaleType.Slice
Box.SliceCenter = Rect.new(4, 4, 4, 4)

Objects.Name = "Objects"
Objects.Parent = Box
Objects.BackgroundColor3 = Color3.new(1, 1, 1)
Objects.BackgroundTransparency = 1
Objects.BorderSizePixel = 0
Objects.Size = UDim2.new(1, 0, 1, 0)
Objects.ZIndex = 3
Objects.CanvasSize = UDim2.new(0, 0, 0, 0)
Objects.ScrollBarThickness = 8

UIListLayout_4.Parent = Objects
UIListLayout_4.SortOrder = Enum.SortOrder.LayoutOrder

TextButton_Roundify_4px.Name = "TextButton_Roundify_4px"
TextButton_Roundify_4px.Parent = Dropdown
TextButton_Roundify_4px.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton_Roundify_4px.BackgroundTransparency = 1
TextButton_Roundify_4px.Size = UDim2.new(1, 0, 1, 0)
TextButton_Roundify_4px.Image = "rbxassetid://2851929490"
TextButton_Roundify_4px.ImageColor3 = Color3.new(0.203922, 0.207843, 0.219608)
TextButton_Roundify_4px.ScaleType = Enum.ScaleType.Slice
TextButton_Roundify_4px.SliceCenter = Rect.new(4, 4, 4, 4)

TabButton.Name = "TabButton"
TabButton.Parent = Prefabs
TabButton.BackgroundColor3 = Color3.new(0.160784, 0.290196, 0.478431)
TabButton.BackgroundTransparency = 1
TabButton.BorderSizePixel = 0
TabButton.Position = UDim2.new(0.185185179, 0, 0, 0)
TabButton.Size = UDim2.new(0, 71, 0, 20)
TabButton.ZIndex = 2
TabButton.Font = Enum.Font.GothamSemibold
TabButton.Text = "Test tab"
iquyiyupTabButton.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
TabButton.TextSize = 14

TextButton_Roundify_4px_2.Name = "TextButton_Roundify_4px"
TextButton_Roundify_4px_2.Parent = TabButton
TextButton_Roundify_4px_2.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton_Roundify_4px_2.BackgroundTransparency = 1
TextButton_Roundify_4px_2.Size = UDim2.new(1, 0, 1, 0)
TextButton_Roundify_4px_2.Image = "rbxassetid://2851929490"
TextButton_Roundify_4px_2.ImageColor3 = Color3.new(0.203922, 0.207843, 0.219608)
TextButton_Roundify_4px_2.ScaleType = Enum.ScaleType.Slice
TextButton_Roundify_4px_2.SliceCenter = Rect.new(4, 4, 4, 4)

Folder.Name = "Folder"
Folder.Parent = Prefabs
Folder.BackgroundColor3 = Color3.new(1, 1, 1)
Folder.BackgroundTransparency = 1
Folder.Position = UDim2.new(0, 0, 0, 50)
Folder.Size = UDim2.new(1, 0, 0, 20)
Folder.Image = "rbxassetid://2851929490"
Folder.ImageColor3 = Color3.new(0.0823529, 0.0862745, 0.0901961)
Folder.ScaleType = Enum.ScaleType.Slice
Folder.SliceCenter = Rect.new(4, 4, 4, 4)

Button.Name = "Button"
Button.Parent = Folder
Button.BackgroundColor3 = Color3.new(0.160784, 0.290196, 0.478431)
Button.BackgroundTransparency = 1
Button.BorderSizePixel = 0
Button.Size = UDim2.new(1, 0, 0, 20)
Button.ZIndex = 2
Button.Font = Enum.Font.GothamSemibold
Button.Text = "      Folder"
Button.TextColor3 = Color3.new(1, 1, 1)
Button.TextSize = 14
Button.TextXAlignment = Enum.TextXAlignment.Left

TextButton_Roundify_4px_3.Name = "TextButton_Roundify_4px"
TextButton_Roundify_4px_3.Parent = Button
TextButton_Roundify_4px_3.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton_Roundify_4px_3.BackgroundTransparency = 1
TextButton_Roundify_4px_3.Size = UDim2.new(1, 0, 1, 0)
TextButton_Roundify_4px_3.Image = "rbxassetid://2851929490"
TextButton_Roundify_4px_3.ImageColor3 = Color3.new(0.160784, 0.290196, 0.478431)
TextButton_Roundify_4px_3.ScaleType = Enum.ScaleType.Slice
TextButton_Roundify_4px_3.SliceCenter = Rect.new(4, 4, 4, 4)

Toggle_2.Name = "Toggle"
Toggle_2.Parent = Button
Toggle_2.BackgroundColor3 = Color3.new(1, 1, 1)
Toggle_2.BackgroundTransparency = 1
Toggle_2.Position = UDim2.new(0, 5, 0, 0)
Toggle_2.Size = UDim2.new(0, 20, 0, 20)
Toggle_2.Image = "https://www.roblox.com/Thumbs/Asset.ashx?width=420&height=420&assetId=4731371541"

Objects_2.Name = "Objects"
Objects_2.Parent = Folder
Objects_2.BackgroundColor3 = Color3.new(1, 1, 1)
Objects_2.BackgroundTransparency = 1
Objects_2.Position = UDim2.new(0, 10, 0, 25)
Objects_2.Size = UDim2.new(1, -10, 1, -25)
Objects_2.Visible = false

UIListLayout_5.Parent = Objects_2
UIListLayout_5.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_5.Padding = UDim.new(0, 5)

HorizontalAlignment.Name = "HorizontalAlignment"
HorizontalAlignment.Parent = Prefabs
HorizontalAlignment.BackgroundColor3 = Color3.new(1, 1, 1)
HorizontalAlignment.BackgroundTransparency = 1
HorizontalAlignment.Size = UDim2.new(1, 0, 0, 20)

UIListLayout_6.Parent = HorizontalAlignment
UIListLayout_6.FillDirection = Enum.FillDirection.Horizontal
UIListLayout_6.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_6.Padding = UDim.new(0, 5)

Console.Name = "Console"
Console.Parent = Prefabs
Console.BackgroundColor3 = Color3.new(1, 1, 1)
Console.BackgroundTransparency = 1
Console.Size = UDim2.new(1, 0, 0, 200)
Console.Image = "rbxassetid://2851928141"
Console.ImageColor3 = Color3.new(0.129412, 0.133333, 0.141176)
Console.ScaleType = Enum.ScaleType.Slice
Console.SliceCenter = Rect.new(8, 8, 8, 8)

ScrollingFrame.Parent = Console
ScrollingFrame.BackgroundColor3 = Color3.new(1, 1, 1)
ScrollingFrame.BackgroundTransparency = 1
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.Size = UDim2.new(1, 0, 1, 1)
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
ScrollingFrame.ScrollBarThickness = 4

Source.Name = "Source"
Source.Parent = ScrollingFrame
Source.BackgroundColor3 = Color3.new(1, 1, 1)
Source.BackgroundTransparency = 1
Source.Position = UDim2.new(0, 40, 0, 0)
Source.Size = UDim2.new(1, -40, 0, 10000)
Source.ZIndex = 3
Source.ClearTextOnFocus = false
Source.Font = Enum.Font.Code
Source.MultiLine = true
Source.PlaceholderColor3 = Color3.new(0.8, 0.8, 0.8)
Source.Text = ""
Source.TextColor3 = Color3.new(1, 1, 1)
Source.TextSize = 15
Source.TextStrokeColor3 = Color3.new(1, 1, 1)
Source.TextWrapped = true
Source.TextXAlignment = Enum.TextXAlignment.Left
Source.TextYAlignment = Enum.TextYAlignment.Top

Comments.Name = "Comments"
Comments.Parent = Source
Comments.BackgroundColor3 = Color3.new(1, 1, 1)
Comments.BackgroundTransparency = 1
Comments.Size = UDim2.new(1, 0, 1, 0)
Comments.ZIndex = 5
Comments.Font = Enum.Font.Code
Comments.Text = ""
Comments.TextColor3 = Color3.new(0.231373, 0.784314, 0.231373)
Comments.TextSize = 15
Comments.TextXAlignment = Enum.TextXAlignment.Left
Comments.TextYAlignment = Enum.TextYAlignment.Top

Globals.Name = "Globals"
Globals.Parent = Source
Globals.BackgroundColor3 = Color3.new(1, 1, 1)
Globals.BackgroundTransparency = 1
Globals.Size = UDim2.new(1, 0, 1, 0)
Globals.ZIndex = 5
Globals.Font = Enum.Font.Code
Globals.Text = ""
Globals.TextColor3 = Color3.new(0.517647, 0.839216, 0.968628)
Globals.TextSize = 15
Globals.TextXAlignment = Enum.TextXAlignment.Left
Globals.TextYAlignment = Enum.TextYAlignment.Top

Keywords.Name = "Keywords"
Keywords.Parent = Source
Keywords.BackgroundColor3 = Color3.new(1, 1, 1)
Keywords.BackgroundTransparency = 1
Keywords.Size = UDim2.new(1, 0, 1, 0)
Keywords.ZIndex = 5
Keywords.Font = Enum.Font.Code
Keywords.Text = ""
Keywords.TextColor3 = Color3.new(0.972549, 0.427451, 0.486275)
Keywords.TextSize = 15
Keywords.TextXAlignment = Enum.TextXAlignment.Left
Keywords.TextYAlignment = Enum.TextYAlignment.Top

RemoteHighlight.Name = "RemoteHighlight"
RemoteHighlight.Parent = Source
RemoteHighlight.BackgroundColor3 = Color3.new(1, 1, 1)
RemoteHighlight.BackgroundTransparency = 1
RemoteHighlight.Size = UDim2.new(1, 0, 1, 0)
RemoteHighlight.ZIndex = 5
RemoteHighlight.Font = Enum.Font.Code
RemoteHighlight.Text = ""
RemoteHighlight.TextColor3 = Color3.new(0, 0.568627, 1)
RemoteHighlight.TextSize = 15
RemoteHighlight.TextXAlignment = Enum.TextXAlignment.Left
RemoteHighlight.TextYAlignment = Enum.TextYAlignment.Top

Strings.Name = "Strings"
Strings.Parent = Source
Strings.BackgroundColor3 = Color3.new(1, 1, 1)
Strings.BackgroundTransparency = 1
Strings.Size = UDim2.new(1, 0, 1, 0)
Strings.ZIndex = 5
Strings.Font = Enum.Font.Code
Strings.Text = ""
Strings.TextColor3 = Color3.new(0.678431, 0.945098, 0.584314)
Strings.TextSize = 15
Strings.TextXAlignment = Enum.TextXAlignment.Left
Strings.TextYAlignment = Enum.TextYAlignment.Top

Tokens.Name = "Tokens"
Tokens.Parent = Source
Tokens.BackgroundColor3 = Color3.new(1, 1, 1)
Tokens.BackgroundTransparency = 1
Tokens.Size = UDim2.new(1, 0, 1, 0)
Tokens.ZIndex = 5
Tokens.Font = Enum.Font.Code
Tokens.Text = ""
Tokens.TextColor3 = Color3.new(1, 1, 1)
Tokens.TextSize = 15
Tokens.TextXAlignment = Enum.TextXAlignment.Left
Tokens.TextYAlignment = Enum.TextYAlignment.Top

Numbers.Name = "Numbers"
Numbers.Parent = Source
Numbers.BackgroundColor3 = Color3.new(1, 1, 1)
Numbers.BackgroundTransparency = 1
Numbers.Size = UDim2.new(1, 0, 1, 0)
Numbers.ZIndex = 4
Numbers.Font = Enum.Font.Code
Numbers.Text = ""
Numbers.TextColor3 = Color3.new(1, 0.776471, 0)
Numbers.TextSize = 15
Numbers.TextXAlignment = Enum.TextXAlignment.Left
Numbers.TextYAlignment = Enum.TextYAlignment.Top

Info.Name = "Info"
Info.Parent = Source
Info.BackgroundColor3 = Color3.new(1, 1, 1)
Info.BackgroundTransparency = 1
Info.Size = UDim2.new(1, 0, 1, 0)
Info.ZIndex = 5
Info.Font = Enum.Font.Code
Info.Text = ""
Info.TextColor3 = Color3.new(0, 0.635294, 1)
Info.TextSize = 15
Info.TextXAlignment = Enum.TextXAlignment.Left
Info.TextYAlignment = Enum.TextYAlignment.Top

Lines.Name = "Lines"
Lines.Parent = ScrollingFrame
Lines.BackgroundColor3 = Color3.new(1, 1, 1)
Lines.BackgroundTransparency = 1
Lines.BorderSizePixel = 0
Lines.Size = UDim2.new(0, 40, 0, 10000)
Lines.ZIndex = 4
Lines.Font = Enum.Font.Code
Lines.Text = "1\n"
Lines.TextColor3 = Color3.new(1, 1, 1)
Lines.TextSize = 15
Lines.TextWrapped = true
Lines.TextYAlignment = Enum.TextYAlignment.Top

ColorPicker.Name = "ColorPicker"
ColorPicker.Parent = Prefabs
ColorPicker.BackgroundColor3 = Color3.new(1, 1, 1)
ColorPicker.BackgroundTransparency = 1
ColorPicker.Size = UDim2.new(0, 180, 0, 110)
ColorPicker.Image = "rbxassetid://2851929490"
ColorPicker.ImageColor3 = Color3.new(0.203922, 0.207843, 0.219608)
ColorPicker.ScaleType = Enum.ScaleType.Slice
ColorPicker.SliceCenter = Rect.new(4, 4, 4, 4)

Palette.Name = "Palette"
Palette.Parent = ColorPicker
Palette.BackgroundColor3 = Color3.new(1, 1, 1)
Palette.BackgroundTransparency = 1
Palette.Position = UDim2.new(0.0500000007, 0, 0.0500000007, 0)
Palette.Size = UDim2.new(0, 100, 0, 100)
Palette.Image = "rbxassetid://698052001"
Palette.ScaleType = Enum.ScaleType.Slice
Palette.SliceCenter = Rect.new(4, 4, 4, 4)

Indicator_3.Name = "Indicator"
Indicator_3.Parent = Palette
Indicator_3.BackgroundColor3 = Color3.new(1, 1, 1)
Indicator_3.BackgroundTransparency = 1
Indicator_3.Size = UDim2.new(0, 5, 0, 5)
Indicator_3.ZIndex = 2
Indicator_3.Image = "rbxassetid://2851926732"
Indicator_3.ImageColor3 = Color3.new(0, 0, 0)
Indicator_3.ScaleType = Enum.ScaleType.Slice
Indicator_3.SliceCenter = Rect.new(12, 12, 12, 12)

Sample.Name = "Sample"
Sample.Parent = ColorPicker
Sample.BackgroundColor3 = Color3.new(1, 1, 1)
Sample.BackgroundTransparency = 1
Sample.Position = UDim2.new(0.800000012, 0, 0.0500000007, 0)
Sample.Size = UDim2.new(0, 25, 0, 25)
Sample.Image = "rbxassetid://2851929490"
Sample.ScaleType = Enum.ScaleType.Slice
Sample.SliceCenter = Rect.new(4, 4, 4, 4)

Saturation.Name = "Saturation"
Saturation.Parent = ColorPicker
Saturation.BackgroundColor3 = Color3.new(1, 1, 1)
Saturation.Position = UDim2.new(0.649999976, 0, 0.0500000007, 0)
Saturation.Size = UDim2.new(0, 15, 0, 100)
Saturation.Image = "rbxassetid://3641079629"

Indicator_4.Name = "Indicator"
Indicator_4.Parent = Saturation
Indicator_4.BackgroundColor3 = Color3.new(1, 1, 1)
Indicator_4.BorderSizePixel = 0
Indicator_4.Size = UDim2.new(0, 20, 0, 2)
Indicator_4.ZIndex = 2

Switch.Name = "Switch"
Switch.Parent = Prefabs
Switch.BackgroundColor3 = Color3.new(1, 1, 1)
Switch.BackgroundTransparency = 1
Switch.BorderSizePixel = 0
Switch.Position = UDim2.new(0.229411766, 0, 0.20714286, 0)
Switch.Size = UDim2.new(0, 20, 0, 20)
Switch.ZIndex = 2
Switch.Font = Enum.Font.SourceSans
Switch.Text = ""
Switch.TextColor3 = Color3.new(1, 1, 1)
Switch.TextSize = 18

TextButton_Roundify_4px_4.Name = "TextButton_Roundify_4px"
TextButton_Roundify_4px_4.Parent = Switch
TextButton_Roundify_4px_4.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton_Roundify_4px_4.BackgroundTransparency = 1
TextButton_Roundify_4px_4.Size = UDim2.new(1, 0, 1, 0)
TextButton_Roundify_4px_4.Image = "rbxassetid://2851929490"
TextButton_Roundify_4px_4.ImageColor3 = Color3.new(0.160784, 0.290196, 0.478431)
TextButton_Roundify_4px_4.ImageTransparency = 0.5
TextButton_Roundify_4px_4.ScaleType = Enum.ScaleType.Slice
TextButton_Roundify_4px_4.SliceCenter = Rect.new(4, 4, 4, 4)

Title_3.Name = "Title"
Title_3.Parent = Switch
Title_3.BackgroundColor3 = Color3.new(1, 1, 1)
Title_3.BackgroundTransparency = 1
Title_3.Position = UDim2.new(1.20000005, 0, 0, 0)
Title_3.Size = UDim2.new(0, 20, 0, 20)
Title_3.Font = Enum.Font.GothamSemibold
Title_3.Text = "Switch"
Title_3.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
Title_3.TextSize = 14
Title_3.TextXAlignment = Enum.TextXAlignment.Left

Button_2.Name = "Button"
Button_2.Parent = Prefabs
Button_2.BackgroundColor3 = Color3.new(0.160784, 0.290196, 0.478431)
Button_2.BackgroundTransparency = 1
Button_2.BorderSizePixel = 0
Button_2.Size = UDim2.new(0, 91, 0, 20)
Button_2.ZIndex = 2
Button_2.Font = Enum.Font.GothamSemibold
Button_2.TextColor3 = Color3.new(1, 1, 1)
Button_2.TextSize = 14

TextButton_Roundify_4px_5.Name = "TextButton_Roundify_4px"
TextButton_Roundify_4px_5.Parent = Button_2
TextButton_Roundify_4px_5.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton_Roundify_4px_5.BackgroundTransparency = 1
TextButton_Roundify_4px_5.Size = UDim2.new(1, 0, 1, 0)
TextButton_Roundify_4px_5.Image = "rbxassetid://2851929490"
TextButton_Roundify_4px_5.ImageColor3 = Color3.new(0.160784, 0.290196, 0.478431)
TextButton_Roundify_4px_5.ScaleType = Enum.ScaleType.Slice
TextButton_Roundify_4px_5.SliceCenter = Rect.new(4, 4, 4, 4)

DropdownButton.Name = "DropdownButton"
DropdownButton.Parent = Prefabs
DropdownButton.BackgroundColor3 = Color3.new(0.129412, 0.133333, 0.141176)
DropdownButton.BorderSizePixel = 0
DropdownButton.Size = UDim2.new(1, 0, 0, 20)
DropdownButton.ZIndex = 3
DropdownButton.Font = Enum.Font.GothamBold
DropdownButton.Text = "      Button"
DropdownButton.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
DropdownButton.TextSize = 14
DropdownButton.TextXAlignment = Enum.TextXAlignment.Left

Keybind.Name = "Keybind"
Keybind.Parent = Prefabs
Keybind.BackgroundColor3 = Color3.new(1, 1, 1)
Keybind.BackgroundTransparency = 1
Keybind.Size = UDim2.new(0, 200, 0, 20)
Keybind.Image = "rbxassetid://2851929490"
Keybind.ImageColor3 = Color3.new(0.203922, 0.207843, 0.219608)
Keybind.ScaleType = Enum.ScaleType.Slice
Keybind.SliceCenter = Rect.new(4, 4, 4, 4)

Title_4.Name = "Title"
Title_4.Parent = Keybind
Title_4.BackgroundColor3 = Color3.new(1, 1, 1)
Title_4.BackgroundTransparency = 1
Title_4.Size = UDim2.new(0, 0, 1, 0)
Title_4.Font = Enum.Font.GothamBold
Title_4.Text = "Keybind"
Title_4.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
Title_4.TextSize = 14
Title_4.TextXAlignment = Enum.TextXAlignment.Left

Input.Name = "Input"
Input.Parent = Keybind
Input.BackgroundColor3 = Color3.new(1, 1, 1)
Input.BackgroundTransparency = 1
Input.BorderSizePixel = 0
Input.Position = UDim2.new(1, -85, 0, 2)
Input.Size = UDim2.new(0, 80, 1, -4)
Input.ZIndex = 2
Input.Font = Enum.Font.GothamSemibold
Input.Text = "RShift"
Input.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
Input.TextSize = 12
Input.TextWrapped = true

Input_Roundify_4px.Name = "Input_Roundify_4px"
Input_Roundify_4px.Parent = Input
Input_Roundify_4px.BackgroundColor3 = Color3.new(1, 1, 1)
Input_Roundify_4px.BackgroundTransparency = 1
Input_Roundify_4px.Size = UDim2.new(1, 0, 1, 0)
Input_Roundify_4px.Image = "rbxassetid://2851929490"
Input_Roundify_4px.ImageColor3 = Color3.new(0.290196, 0.294118, 0.313726)
Input_Roundify_4px.ScaleType = Enum.ScaleType.Slice
Input_Roundify_4px.SliceCenter = Rect.new(4, 4, 4, 4)

Windows.Name = "Windows"
Windows.Parent = imgui
Windows.BackgroundColor3 = Color3.new(1, 1, 1)
Windows.BackgroundTransparency = 1
Windows.Position = UDim2.new(0, 20, 0, 20)
Windows.Size = UDim2.new(1, 20, 1, -20)

--[[ Script ]]--
script.Parent = imgui

local UIS = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RS = game:GetService("RunService")
local ps = game:GetService("Players")

local p = ps.LocalPlayer
local mouse = p:GetMouse()

local Prefabs = script.Parent:WaitForChild("Prefabs")
local Windows = script.Parent:FindFirstChild("Windows")

local checks = {
	["binding"] = false,
}

UIS.InputBegan:Connect(function(input, gameProcessed)
	if input.KeyCode == ((typeof(ui_options.toggle_key) == "EnumItem") and ui_options.toggle_key or Enum.KeyCode.RightShift) then
		if script.Parent then
			if not checks.binding then
				script.Parent.Enabled = not script.Parent.Enabled
			end
		end
	end
end)

local function Resize(part, new, _delay)
	_delay = _delay or 0.5
	local tweenInfo = TweenInfo.new(_delay, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local tween = TweenService:Create(part, tweenInfo, new)
	tween:Play()
end

local function rgbtohsv(r, g, b) -- idk who made this function, but thanks
	r, g, b = r / 255, g / 255, b / 255
	local max, min = math.max(r, g, b), math.min(r, g, b)
	local h, s, v
	v = max

	local d = max - min
	if max == 0 then
		s = 0
	else
		s = d / max
	end

	if max == min then
		h = 0
	else
		if max == r then
			h = (g - b) / d
			if g < b then
				h = h + 6
			end
		elseif max == g then
			h = (b - r) / d + 2
		elseif max == b then
			h = (r - g) / d + 4
		end
		h = h / 6
	end

	return h, s, v
end

local function hasprop(object, prop)
	local a, b = pcall(function()
		return object[tostring(prop)]
	end)
	if a then
		return b
	end
end

local function gNameLen(obj)
	return obj.TextBounds.X + 15
end

local function gMouse()
	return Vector2.new(UIS:GetMouseLocation().X + 1, UIS:GetMouseLocation().Y - 35)
end

local function ripple(button, x, y)
	spawn(function()
		button.ClipsDescendants = true

		local circle = Prefabs:FindFirstChild("Circle"):Clone()

		circle.Parent = button
		circle.ZIndex = 1000

		local new_x = x - circle.AbsolutePosition.X
		local new_y = y - circle.AbsolutePosition.Y
		circle.Position = UDim2.new(0, new_x, 0, new_y)

		local size = 0
		if button.AbsoluteSize.X > button.AbsoluteSize.Y then
			size = button.AbsoluteSize.X * 1.5
		elseif button.AbsoluteSize.X < button.AbsoluteSize.Y then
			size = button.AbsoluteSize.Y * 1.5
		elseif button.AbsoluteSize.X == button.AbsoluteSize.Y then
			size = button.AbsoluteSize.X * 1.5
		end

		circle:TweenSizeAndPosition(UDim2.new(0, size, 0, size), UDim2.new(0.5, -size / 2, 0.5, -size / 2), "Out", "Quad", 0.5, false, nil)
		Resize(circle, {ImageTransparency = 1}, 0.5)

		wait(0.5)
		circle:Destroy()
	end)
end

local windows = 0
local library = {}

local function format_windows()
	local ull = Prefabs:FindFirstChild("UIListLayout"):Clone()
	ull.Parent = Windows
	local data = {}

	for i,v in next, Windows:GetChildren() do
		if not (v:IsA("UIListLayout")) then
			data[v] = v.AbsolutePosition
		end
	end

	ull:Destroy()

	for i,v in next, data do
		i.Position = UDim2.new(0, v.X, 0, v.Y)
	end
end

function library:FormatWindows()
	format_windows()
end

function library:AddWindow(title, options)
	windows = windows + 1
	local dropdown_open = false
	title = tostring(title or "New Window")
	options = (typeof(options) == "table") and options or ui_options
	options.tween_time = 0.1

	local Window = Prefabs:FindFirstChild("Window"):Clone()
	Window.Parent = Windows
	Window:FindFirstChild("Title").Text = title
	Window.Size = UDim2.new(0, options.min_size.X, 0, options.min_size.Y)
	Window.ZIndex = Window.ZIndex + (windows * 10)

	do -- Altering Window Color
		local Title = Window:FindFirstChild("Title")
		local Bar = Window:FindFirstChild("Bar")
		local Base = Bar:FindFirstChild("Base")
		local Top = Bar:FindFirstChild("Top")
		local SplitFrame = Window:FindFirstChild("TabSelection"):FindFirstChild("Frame")
		local Toggle = Bar:FindFirstChild("Toggle")

		spawn(function()
			while true do
				Bar.BackgroundColor3 = options.main_color
				Base.BackgroundColor3 = options.main_color
				Base.ImageColor3 = options.main_color
				Top.ImageColor3 = options.main_color
				SplitFrame.BackgroundColor3 = options.main_color

				RS.Heartbeat:Wait()
			end
		end)

	end

	local Resizer = Window:WaitForChild("Resizer")

	local window_data = {}
	Window.Draggable = true

	do -- Resize Window
		local oldIcon = mouse.Icon
		local Entered = false
		Resizer.MouseEnter:Connect(function()
			Window.Draggable = false
			if options.can_resize then
				oldIcon = mouse.Icon
				-- mouse.Icon = "http://www.roblox.com/asset?id=4745131330"
			end
			Entered = true
		end)

		Resizer.MouseLeave:Connect(function()
			Entered = false
			if options.can_resize then
				mouse.Icon = oldIcon
			end
			Window.Draggable = true
		end)

		local Held = false
		UIS.InputBegan:Connect(function(inputObject)
			if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
				Held = true

				spawn(function() -- Loop check
					if Entered and Resizer.Active and options.can_resize then
						while Held and Resizer.Active do

							local mouse_location = gMouse()
							local x = mouse_location.X - Window.AbsolutePosition.X
							local y = mouse_location.Y - Window.AbsolutePosition.Y

							--
							if x >= options.min_size.X and y >= options.min_size.Y then
								Resize(Window, {Size = UDim2.new(0, x, 0, y)}, options.tween_time)
							elseif x >= options.min_size.X then
								Resize(Window, {Size = UDim2.new(0, x, 0, options.min_size.Y)}, options.tween_time)
							elseif y >= options.min_size.Y then
								Resize(Window, {Size = UDim2.new(0, options.min_size.X, 0, y)}, options.tween_time)
							else
								Resize(Window, {Size = UDim2.new(0, options.min_size.X, 0, options.min_size.Y)}, options.tween_time)
							end

							RS.Heartbeat:Wait()
						end
					end
				end)
			end
		end)
		UIS.InputEnded:Connect(function(inputObject)
			if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
				Held = false
			end
		end)
	end

	do -- [Open / Close] Window
		local open_close = Window:FindFirstChild("Bar"):FindFirstChild("Toggle")
		local open = true
		local canopen = true

		local oldwindowdata = {}
		local oldy = Window.AbsoluteSize.Y
		open_close.MouseButton1Click:Connect(function()
			if canopen then
				canopen = false

				if open then
					-- Close

					oldwindowdata = {}
					for i,v in next, Window:FindFirstChild("Tabs"):GetChildren() do
						oldwindowdata[v] = v.Visible
						v.Visible = false
					end

					Resizer.Active = false

					oldy = Window.AbsoluteSize.Y
					Resize(open_close, {Rotation = 0}, options.tween_time)
					Resize(Window, {Size = UDim2.new(0, Window.AbsoluteSize.X, 0, 26)}, options.tween_time)
					open_close.Parent:FindFirstChild("Base").Transparency = 1

				else
					-- Open

					for i,v in next, oldwindowdata do
						i.Visible = v
					end

					Resizer.Active = true

					Resize(open_close, {Rotation = 90}, options.tween_time)
					Resize(Window, {Size = UDim2.new(0, Window.AbsoluteSize.X, 0, oldy)}, options.tween_time)
					open_close.Parent:FindFirstChild("Base").Transparency = 0

				end

				open = not open
				wait(options.tween_time)
				canopen = true

			end
		end)
	end

	do -- UI Elements
		local tabs = Window:FindFirstChild("Tabs")
		local tab_selection = Window:FindFirstChild("TabSelection")
		local tab_buttons = tab_selection:FindFirstChild("TabButtons")

		do -- Add Tab
			function window_data:AddTab(tab_name)
				local tab_data = {}
				tab_name = tostring(tab_name or "New Tab")
				tab_selection.Visible = true

				local new_button = Prefabs:FindFirstChild("TabButton"):Clone()
				new_button.Parent = tab_buttons
				new_button.Text = tab_name
				new_button.Size = UDim2.new(0, gNameLen(new_button), 0, 20)
				new_button.ZIndex = new_button.ZIndex + (windows * 10)
				new_button:GetChildren()[1].ZIndex = new_button:GetChildren()[1].ZIndex + (windows * 10)

				local new_tab = Prefabs:FindFirstChild("Tab"):Clone()
				new_tab.Parent = tabs
				new_tab.ZIndex = new_tab.ZIndex + (windows * 10)

				local function show()
					if dropdown_open then return end
					for i, v in next, tab_buttons:GetChildren() do
						if not (v:IsA("UIListLayout")) then
							v:GetChildren()[1].ImageColor3 = Color3.fromRGB(52, 53, 56)
							Resize(v, {Size = UDim2.new(0, v.AbsoluteSize.X, 0, 20)}, options.tween_time)
						end
					end
					for i, v in next, tabs:GetChildren() do
						v.Visible = false
					end

					Resize(new_button, {Size = UDim2.new(0, new_button.AbsoluteSize.X, 0, 25)}, options.tween_time)
					new_button:GetChildren()[1].ImageColor3 = Color3.fromRGB(73, 75, 79)
					new_tab.Visible = true
				end

				new_button.MouseButton1Click:Connect(function()
					show()
				end)

				function tab_data:Show()
					show()
				end

				do -- Tab Elements

					function tab_data:AddLabel(label_text) -- [Label]
						label_text = tostring(label_text or "New Label")

						local label = Prefabs:FindFirstChild("Label"):Clone()

						label.Parent = new_tab
						label.Text = label_text
						label.Size = UDim2.new(0, gNameLen(label), 0, 20)
						label.ZIndex = label.ZIndex + (windows * 10)

						return label
					end

					function tab_data:AddButton(button_text, callback) -- [Button]
						button_text = tostring(button_text or "New Button")
						callback = typeof(callback) == "function" and callback or function()end

						local button = Prefabs:FindFirstChild("Button"):Clone()

						button.Parent = new_tab
						button.Text = button_text
						button.Size = UDim2.new(0, gNameLen(button), 0, 20)
						button.ZIndex = button.ZIndex + (windows * 10)
						button:GetChildren()[1].ZIndex = button:GetChildren()[1].ZIndex + (windows * 10)

						spawn(function()
							while true do
								if button and button:GetChildren()[1] then
									button:GetChildren()[1].ImageColor3 = options.main_color
								end
								RS.Heartbeat:Wait()
							end
						end)

						button.MouseButton1Click:Connect(function()
							ripple(button, mouse.X, mouse.Y)
							pcall(callback)
						end)

						return button
					end

					function tab_data:AddSwitch(switch_text, callback) -- [Switch]
						local switch_data = {}

						switch_text = tostring(switch_text or "New Switch")
						callback = typeof(callback) == "function" and callback or function()end

						local switch = Prefabs:FindFirstChild("Switch"):Clone()

						switch.Parent = new_tab
						switch:FindFirstChild("Title").Text = switch_text

						switch:FindFirstChild("Title").ZIndex = switch:FindFirstChild("Title").ZIndex + (windows * 10)
						switch.ZIndex = switch.ZIndex + (windows * 10)
						switch:GetChildren()[1].ZIndex = switch:GetChildren()[1].ZIndex + (windows * 10)

						spawn(function()
							while true do
								if switch and switch:GetChildren()[1] then
									switch:GetChildren()[1].ImageColor3 = options.main_color
								end
								RS.Heartbeat:Wait()
							end
						end)

						local toggled = false
						switch.MouseButton1Click:Connect(function()
							toggled = not toggled
							switch.Text = toggled and utf8.char(10003) or ""
							pcall(callback, toggled)
						end)

						function switch_data:Set(bool)
							toggled = (typeof(bool) == "boolean") and bool or false
							switch.Text = toggled and utf8.char(10003) or ""
							pcall(callback,toggled)
						end

						return switch_data, switch
					end

					function tab_data:AddTextBox(textbox_text, callback, textbox_options)
						textbox_text = tostring(textbox_text or "New TextBox")
						callback = typeof(callback) == "function" and callback or function()end
						textbox_options = typeof(textbox_options) == "table" and textbox_options or {["clear"] = true}
						textbox_options = {
							["clear"] = ((textbox_options.clear) == true)
						}

						local textbox = Prefabs:FindFirstChild("TextBox"):Clone()

						textbox.Parent = new_tab
						textbox.PlaceholderText = textbox_text
						textbox.ZIndex = textbox.ZIndex + (windows * 10)
						textbox:GetChildren()[1].ZIndex = textbox:GetChildren()[1].ZIndex + (windows * 10)

						textbox.FocusLost:Connect(function(ep)
							if ep then
								if #textbox.Text > 0 then
									pcall(callback, textbox.Text)
									if textbox_options.clear then
										textbox.Text = ""
									end
								end
							end
						end)

						return textbox
					end

					function tab_data:AddSlider(slider_text, callback, slider_options)
						local slider_data = {}

						slider_text = tostring(slider_text or "New Slider")
						callback = typeof(callback) == "function" and callback or function()end
						slider_options = typeof(slider_options) == "table" and slider_options or {}
						slider_options = {
							["min"] = slider_options.min or 0,
							["max"] = slider_options.max or 100,
							["readonly"] = slider_options.readonly or false,
						}

						local slider = Prefabs:FindFirstChild("Slider"):Clone()

						slider.Parent = new_tab
						slider.ZIndex = slider.ZIndex + (windows * 10)

						local title = slider:FindFirstChild("Title")
						local indicator = slider:FindFirstChild("Indicator")
						local value = slider:FindFirstChild("Value")
						title.ZIndex = title.ZIndex + (windows * 10)
						indicator.ZIndex = indicator.ZIndex + (windows * 10)
						value.ZIndex = value.ZIndex + (windows * 10)

						title.Text = slider_text

						do -- Slider Math
							local Entered = false
							slider.MouseEnter:Connect(function()
								Entered = true
								Window.Draggable = false
							end)
							slider.MouseLeave:Connect(function()
								Entered = false
								Window.Draggable = true
							end)

							local Held = false
							UIS.InputBegan:Connect(function(inputObject)
								if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
									Held = true

									spawn(function() -- Loop check
										if Entered and not slider_options.readonly then
											while Held and (not dropdown_open) do
												local mouse_location = gMouse()
												local x = (slider.AbsoluteSize.X - (slider.AbsoluteSize.X - ((mouse_location.X - slider.AbsolutePosition.X)) + 1)) / slider.AbsoluteSize.X

												local min = 0
												local max = 1

												local size = min
												if x >= min and x <= max then
													size = x
												elseif x < min then
													size = min
												elseif x > max then
													size = max
												end

												Resize(indicator, {Size = UDim2.new(size or min, 0, 0, 20)}, options.tween_time)
												local p = math.floor((size or min) * 100)

												local maxv = slider_options.max
												local minv = slider_options.min
												local diff = maxv - minv

												local sel_value = math.floor(((diff / 100) * p) + minv)

												value.Text = tostring(sel_value)
												pcall(callback, sel_value)

												RS.Heartbeat:Wait()
											end
										end
									end)
								end
							end)
							UIS.InputEnded:Connect(function(inputObject)
								if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
									Held = false
								end
							end)

							function slider_data:Set(new_value)
								new_value = tonumber(new_value) or 0
								new_value = (((new_value >= 0 and new_value <= 100) and new_value) / 100)

								Resize(indicator, {Size = UDim2.new(new_value or 0, 0, 0, 20)}, options.tween_time)
								local p = math.floor((new_value or 0) * 100)

								local maxv = slider_options.max
								local minv = slider_options.min
								local diff = maxv - minv

								local sel_value = math.floor(((diff / 100) * p) + minv)

								value.Text = tostring(sel_value)
								pcall(callback, sel_value)
							end

							slider_data:Set(slider_options["min"])
						end

						return slider_data, slider
					end

					function tab_data:AddKeybind(keybind_name, callback, keybind_options)
						local keybind_data = {}

						keybind_name = tostring(keybind_name or "New Keybind")
						callback = typeof(callback) == "function" and callback or function()end
						keybind_options = typeof(keybind_options) == "table" and keybind_options or {}
						keybind_options = {
							["standard"] = keybind_options.standard or Enum.KeyCode.RightShift,
						}

						local keybind = Prefabs:FindFirstChild("Keybind"):Clone()
						local input = keybind:FindFirstChild("Input")
						local title = keybind:FindFirstChild("Title")
						keybind.ZIndex = keybind.ZIndex + (windows * 10)
						input.ZIndex = input.ZIndex + (windows * 10)
						input:GetChildren()[1].ZIndex = input:GetChildren()[1].ZIndex + (windows * 10)
						title.ZIndex = title.ZIndex + (windows * 10)

						keybind.Parent = new_tab
						title.Text = "  " .. keybind_name
						keybind.Size = UDim2.new(0, gNameLen(title) + 80, 0, 20)

						local shortkeys = { -- thanks to stroketon for helping me out with this
							RightControl = 'RightCtrl',
							LeftControl = 'LeftCtrl',
							LeftShift = 'LShift',
							RightShift = 'RShift',
							MouseButton1 = "Mouse1",
							MouseButton2 = "Mouse2"
						}

						local keybind = keybind_options.standard

						function keybind_data:SetKeybind(Keybind)
							local key = shortkeys[Keybind.Name] or Keybind.Name
							input.Text = key
							keybind = Keybind
						end

						UIS.InputBegan:Connect(function(a, b)
							if checks.binding then
								spawn(function()
									wait()
									checks.binding = false
								end)
								return
							end
							if a.KeyCode == keybind and not b then
								pcall(callback, keybind)
							end
						end)

						keybind_data:SetKeybind(keybind_options.standard)

						input.MouseButton1Click:Connect(function()
							if checks.binding then return end
							input.Text = "..."
							checks.binding = true
							local a, b = UIS.InputBegan:Wait()
							keybind_data:SetKeybind(a.KeyCode)
						end)

						return keybind_data, keybind
					end

					function tab_data:AddDropdown(dropdown_name, callback)
						local dropdown_data = {}
						dropdown_name = tostring(dropdown_name or "New Dropdown")
						callback = typeof(callback) == "function" and callback or function()end

						local dropdown = Prefabs:FindFirstChild("Dropdown"):Clone()
						local box = dropdown:FindFirstChild("Box")
						local objects = box:FindFirstChild("Objects")
						local indicator = dropdown:FindFirstChild("Indicator")
						dropdown.ZIndex = dropdown.ZIndex + (windows * 10)
						box.ZIndex = box.ZIndex + (windows * 10)
						objects.ZIndex = objects.ZIndex + (windows * 10)
						indicator.ZIndex = indicator.ZIndex + (windows * 10)
						dropdown:GetChildren()[3].ZIndex = dropdown:GetChildren()[3].ZIndex + (windows * 10)

						dropdown.Parent = new_tab
						dropdown.Text = "      " .. dropdown_name
						box.Size = UDim2.new(1, 0, 0, 0)

						local open = false
						dropdown.MouseButton1Click:Connect(function()
							open = not open

							local len = (#objects:GetChildren() - 1) * 20
							if #objects:GetChildren() - 1 >= 10 then
								len = 10 * 20
								objects.CanvasSize = UDim2.new(0, 0, (#objects:GetChildren() - 1) * 0.1, 0)
							end

							if open then -- Open
								if dropdown_open then return end
								dropdown_open = true
								Resize(box, {Size = UDim2.new(1, 0, 0, len)}, options.tween_time)
								Resize(indicator, {Rotation = 90}, options.tween_time)
							else -- Close
								dropdown_open = false
								Resize(box, {Size = UDim2.new(1, 0, 0, 0)}, options.tween_time)
								Resize(indicator, {Rotation = -90}, options.tween_time)
							end

						end)

						function dropdown_data:Add(n)
							local object_data = {}
							n = tostring(n or "New Object")

							local object = Prefabs:FindFirstChild("DropdownButton"):Clone()

							object.Parent = objects
							object.Text = n
							object.ZIndex = object.ZIndex + (windows * 10)

							object.MouseEnter:Connect(function()
								object.BackgroundColor3 = options.main_color
							end)
							object.MouseLeave:Connect(function()
								object.BackgroundColor3 = Color3.fromRGB(33, 34, 36)
							end)

							if open then
								local len = (#objects:GetChildren() - 1) * 20
								if #objects:GetChildren() - 1 >= 10 then
									len = 10 * 20
									objects.CanvasSize = UDim2.new(0, 0, (#objects:GetChildren() - 1) * 0.1, 0)
								end
								Resize(box, {Size = UDim2.new(1, 0, 0, len)}, options.tween_time)
							end

							object.MouseButton1Click:Connect(function()
								if dropdown_open then
									dropdown.Text = "      [ " .. n .. " ]"
									dropdown_open = false
									open = false
									Resize(box, {Size = UDim2.new(1, 0, 0, 0)}, options.tween_time)
									Resize(indicator, {Rotation = -90}, options.tween_time)
									pcall(callback, n)
								end
							end)

							function object_data:Remove()
								object:Destroy()
							end

							return object, object_data
						end

						return dropdown_data, dropdown
					end

					function tab_data:AddColorPicker(callback)
						local color_picker_data = {}
						callback = typeof(callback) == "function" and callback or function()end

						local color_picker = Prefabs:FindFirstChild("ColorPicker"):Clone()

						color_picker.Parent = new_tab
						color_picker.ZIndex = color_picker.ZIndex + (windows * 10)

						local palette = color_picker:FindFirstChild("Palette")
						local sample = color_picker:FindFirstChild("Sample")
						local saturation = color_picker:FindFirstChild("Saturation")
						palette.ZIndex = palette.ZIndex + (windows * 10)
						sample.ZIndex = sample.ZIndex + (windows * 10)
						saturation.ZIndex = saturation.ZIndex + (windows * 10)

						do -- Color Picker Math
							local h = 0
							local s = 1
							local v = 1

							local function update()
								local color = Color3.fromHSV(h, s, v)
								sample.ImageColor3 = color
								saturation.ImageColor3 = Color3.fromHSV(h, 1, 1)
								pcall(callback, color)
							end

							do
								local color = Color3.fromHSV(h, s, v)
								sample.ImageColor3 = color
								saturation.ImageColor3 = Color3.fromHSV(h, 1, 1)
							end

							local Entered1, Entered2 = false, false
							palette.MouseEnter:Connect(function()
								Window.Draggable = false
								Entered1 = true
							end)
							palette.MouseLeave:Connect(function()
								Window.Draggable = true
								Entered1 = false
							end)
							saturation.MouseEnter:Connect(function()
								Window.Draggable = false
								Entered2 = true
							end)
							saturation.MouseLeave:Connect(function()
								Window.Draggable = true
								Entered2 = false
							end)

							local palette_indicator = palette:FindFirstChild("Indicator")
							local saturation_indicator = saturation:FindFirstChild("Indicator")
							palette_indicator.ZIndex = palette_indicator.ZIndex + (windows * 10)
							saturation_indicator.ZIndex = saturation_indicator.ZIndex + (windows * 10)

							local Held = false
							UIS.InputBegan:Connect(function(inputObject)
								if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
									Held = true

									spawn(function() -- Loop check
										while Held and Entered1 and (not dropdown_open) do -- Palette
											local mouse_location = gMouse()

											local x = ((palette.AbsoluteSize.X - (mouse_location.X - palette.AbsolutePosition.X)) + 1)
											local y = ((palette.AbsoluteSize.Y - (mouse_location.Y - palette.AbsolutePosition.Y)) + 1.5)

											local color = Color3.fromHSV(x / 100, y / 100, 0)
											h = x / 100
											s = y / 100

											Resize(palette_indicator, {Position = UDim2.new(0, math.abs(x - 100) - (palette_indicator.AbsoluteSize.X / 2), 0, math.abs(y - 100) - (palette_indicator.AbsoluteSize.Y / 2))}, options.tween_time)

											update()
											RS.Heartbeat:Wait()
										end

										while Held and Entered2 and (not dropdown_open) do -- Saturation
											local mouse_location = gMouse()
											local y = ((palette.AbsoluteSize.Y - (mouse_location.Y - palette.AbsolutePosition.Y)) + 1.5)
											v = y / 100

											Resize(saturation_indicator, {Position = UDim2.new(0, 0, 0, math.abs(y - 100))}, options.tween_time)

											update()
											RS.Heartbeat:Wait()
										end
									end)
								end
							end)
							UIS.InputEnded:Connect(function(inputObject)
								if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
									Held = false
								end
							end)

							function color_picker_data:Set(color)
								color = typeof(color) == "Color3" and color or Color3.new(1, 1, 1)
								local h2, s2, v2 = rgbtohsv(color.r * 255, color.g * 255, color.b * 255)
								sample.ImageColor3 = color
								saturation.ImageColor3 = Color3.fromHSV(h2, 1, 1)
								pcall(callback, color)
							end
						end

						return color_picker_data, color_picker
					end

					function tab_data:AddConsole(console_options)
						local console_data = {}

						console_options = typeof(console_options) == "table" and console_options or {["readonly"] = true,["full"] = false,}
						console_options = {
							["y"] = tonumber(console_options.y) or 200,
							["source"] = console_options.source or "Logs",
							["readonly"] = ((console_options.readonly) == true),
							["full"] = ((console_options.full) == true),
						}

						local console = Prefabs:FindFirstChild("Console"):Clone()

						console.Parent = new_tab
						console.ZIndex = console.ZIndex + (windows * 10)
						console.Size = UDim2.new(1, 0, console_options.full and 1 or 0, console_options.y)

						local sf = console:GetChildren()[1]
						local Source = sf:FindFirstChild("Source")
						local Lines = sf:FindFirstChild("Lines")
						Source.ZIndex = Source.ZIndex + (windows * 10)
						Lines.ZIndex = Lines.ZIndex + (windows * 10)

						Source.TextEditable = not console_options.readonly

						do -- Syntax Zindex
							for i,v in next, Source:GetChildren() do
								v.ZIndex = v.ZIndex + (windows * 10) + 1
							end
						end
						Source.Comments.ZIndex = Source.Comments.ZIndex + 1

						do -- Highlighting (thanks to whoever made this)
							local lua_keywords = {"and", "break", "do", "else", "elseif", "end", "false", "for", "function", "goto", "if", "in", "local", "nil", "not", "or", "repeat", "return", "then", "true", "until", "while"}
							local global_env = {"getrawmetatable", "newcclosure", "islclosure", "setclipboard", "game", "workspace", "script", "math", "string", "table", "print", "wait", "BrickColor", "Color3", "next", "pairs", "ipairs", "select", "unpack", "Instance", "Vector2", "Vector3", "CFrame", "Ray", "UDim2", "Enum", "assert", "error", "warn", "tick", "loadstring", "_G", "shared", "getfenv", "setfenv", "newproxy", "setmetatable", "getmetatable", "os", "debug", "pcall", "ypcall", "xpcall", "rawequal", "rawset", "rawget", "tonumber", "tostring", "type", "typeof", "_VERSION", "coroutine", "delay", "require", "spawn", "LoadLibrary", "settings", "stats", "time", "UserSettings", "version", "Axes", "ColorSequence", "Faces", "ColorSequenceKeypoint", "NumberRange", "NumberSequence", "NumberSequenceKeypoint", "gcinfo", "elapsedTime", "collectgarbage", "PhysicalProperties", "Rect", "Region3", "Region3int16", "UDim", "Vector2int16", "Vector3int16", "load", "fire", "Fire"}

							local Highlight = function(string, keywords)
								local K = {}
								local S = string
								local Token =
									{
									["="] = true,
									["."] = true,
									[","] = true,
									["("] = true,
									[")"] = true,
									["["] = true,
									["]"] = true,
									["{"] = true,
									["}"] = true,
									[":"] = true,
									["*"] = true,
									["/"] = true,
									["+"] = true,
									["-"] = true,
									["%"] = true,
									[";"] = true,
									["~"] = true
								}
								for i, v in pairs(keywords) do
									K[v] = true
								end
								S = S:gsub(".", function(c)
									if Token[c] ~= nil then
										return "\32"
									else
										return c
									end
								end)
								S = S:gsub("%S+", function(c)
									if K[c] ~= nil then
										return c
									else
										return (" "):rep(#c)
									end
								end)

								return S
							end

							local hTokens = function(string)
								local Token =
									{
									["="] = true,
									["."] = true,
									[","] = true,
									["("] = true,
									[")"] = true,
									["["] = true,
									["]"] = true,
									["{"] = true,
									["}"] = true,
									[":"] = true,
									["*"] = true,
									["/"] = true,
									["+"] = true,
									["-"] = true,
									["%"] = true,
									[";"] = true,
									["~"] = true
								}
								local A = ""
								string:gsub(".", function(c)
									if Token[c] ~= nil then
										A = A .. c
									elseif c == "\n" then
										A = A .. "\n"
									elseif c == "\t" then
										A = A .. "\t"
									else
										A = A .. "\32"
									end
								end)

								return A
							end

							local strings = function(string)
								local highlight = ""
								local quote = false
								string:gsub(".", function(c)
									if quote == false and c == "\34" then
										quote = true
									elseif quote == true and c == "\34" then
										quote = false
									end
									if quote == false and c == "\34" then
										highlight = highlight .. "\34"
									elseif c == "\n" then
										highlight = highlight .. "\n"
									elseif c == "\t" then
										highlight = highlight .. "\t"
									elseif quote == true then
										highlight = highlight .. c
									elseif quote == false then
										highlight = highlight .. "\32"
									end
								end)

								return highlight
							end

							local info = function(string)
								local highlight = ""
								local quote = false
								string:gsub(".", function(c)
									if quote == false and c == "[" then
										quote = true
									elseif quote == true and c == "]" then
										quote = false
									end
									if quote == false and c == "\]" then
										highlight = highlight .. "\]"
									elseif c == "\n" then
										highlight = highlight .. "\n"
									elseif c == "\t" then
										highlight = highlight .. "\t"
									elseif quote == true then
										highlight = highlight .. c
									elseif quote == false then
										highlight = highlight .. "\32"
									end
								end)

								return highlight
							end

							local comments = function(string)
								local ret = ""
								string:gsub("[^\r\n]+", function(c)
									local comm = false
									local i = 0
									c:gsub(".", function(n)
										i = i + 1
										if c:sub(i, i + 1) == "--" then
											comm = true
										end
										if comm == true then
											ret = ret .. n
										else
											ret = ret .. "\32"
										end
									end)
									ret = ret
								end)

								return ret
							end

							local numbers = function(string)
								local A = ""
								string:gsub(".", function(c)
									if tonumber(c) ~= nil then
										A = A .. c
									elseif c == "\n" then
										A = A .. "\n"
									elseif c == "\t" then
										A = A .. "\t"
									else
										A = A .. "\32"
									end
								end)

								return A
							end

							local highlight_lua = function(type)
								if type == "Text" then
									Source.Text = Source.Text:gsub("\13", "")
									Source.Text = Source.Text:gsub("\t", "      ")
									local s = Source.Text

									Source.Keywords.Text = Highlight(s, lua_keywords)
									Source.Globals.Text = Highlight(s, global_env)
									Source.RemoteHighlight.Text = Highlight(s, {"FireServer", "fireServer", "InvokeServer", "invokeServer"})
									Source.Tokens.Text = hTokens(s)
									Source.Numbers.Text = numbers(s)
									Source.Strings.Text = strings(s)
									Source.Comments.Text = comments(s)

									local lin = 1
									s:gsub("\n", function()
										lin = lin + 1
									end)

									Lines.Text = ""
									for i = 1, lin do
										Lines.Text = Lines.Text .. i .. "\n"
									end

									sf.CanvasSize = UDim2.new(0, 0, lin * 0.153846154, 0)
								end

								local highlight_logs = function(type)
								end
								if type == "Text" then
									Source.Text = Source.Text:gsub("\13", "")
									Source.Text = Source.Text:gsub("\t", "      ")
									local s = Source.Text

									Source.Info.Text = info(s)

									local lin = 1
									s:gsub("\n", function()
										lin = lin + 1
									end)

									sf.CanvasSize = UDim2.new(0, 0, lin * 0.153846154, 0)
								end
							end

							if console_options.source == "Lua" then
								highlight_lua("Text")
								Source.Changed:Connect(highlight_lua)
							elseif console_options.source == "Logs" then
								Lines.Visible = false

								highlight_logs("Text")
								Source.Changed:Connect(highlight_logs)
							end

							function console_data:Set(code)
								Source.Text = tostring(code)
							end

							function console_data:Get()
								return Source.Text
							end

							function console_data:Log(msg)
								Source.Text = Source.Text .. "[*] " .. tostring(msg) .. "\n"
							end

						end

						return console_data, console
					end

					function tab_data:AddHorizontalAlignment()
						local ha_data = {}

						local ha = Prefabs:FindFirstChild("HorizontalAlignment"):Clone()
						ha.Parent = new_tab

						function ha_data:AddButton(...)
							local data, object
							local ret = {tab_data:AddButton(...)}
							if typeof(ret[1]) == "table" then
								data = ret[1]
								object = ret[2]
								object.Parent = ha
								return data, object
							else
								object = ret[1]
								object.Parent = ha
								return object
							end
						end

						return ha_data, ha
					end

					function tab_data:AddFolder(folder_name) -- [Folder]
						local folder_data = {}

						folder_name = tostring(folder_name or "New Folder")

						local folder = Prefabs:FindFirstChild("Folder"):Clone()
						local button = folder:FindFirstChild("Button")
						local objects = folder:FindFirstChild("Objects")
						local toggle = button:FindFirstChild("Toggle")
						folder.ZIndex = folder.ZIndex + (windows * 10)
						button.ZIndex = button.ZIndex + (windows * 10)
						objects.ZIndex = objects.ZIndex + (windows * 10)
						toggle.ZIndex = toggle.ZIndex + (windows * 10)
						button:GetChildren()[1].ZIndex = button:GetChildren()[1].ZIndex + (windows * 10)

						folder.Parent = new_tab
						button.Text = "      " .. folder_name

						spawn(function()
							while true do
								if button and button:GetChildren()[1] then
									button:GetChildren()[1].ImageColor3 = options.main_color
								end
								RS.Heartbeat:Wait()
							end
						end)

						local function gFolderLen()
							local n = 25
							for i,v in next, objects:GetChildren() do
								if not (v:IsA("UIListLayout")) then
									n = n + v.AbsoluteSize.Y + 5
								end
							end
							return n
						end

						local open = false
						button.MouseButton1Click:Connect(function()
							if open then -- Close
								Resize(toggle, {Rotation = 0}, options.tween_time)
								objects.Visible = false
							else -- Open
								Resize(toggle, {Rotation = 90}, options.tween_time)
								objects.Visible = true
							end

							open = not open
						end)

						spawn(function()
							while true do
								Resize(folder, {Size = UDim2.new(1, 0, 0, (open and gFolderLen() or 20))}, options.tween_time)
								wait()
							end
						end)

						for i,v in next, tab_data do
							folder_data[i] = function(...)
								local data, object
								local ret = {v(...)}
								if typeof(ret[1]) == "table" then
									data = ret[1]
									object = ret[2]
									object.Parent = objects
									return data, object
								else
									object = ret[1]
									object.Parent = objects
									return object
								end
							end
						end

						return folder_data, folder
					end

				end

				return tab_data, new_tab
			end
		end
	end

	do
		for i, v in next, Window:GetDescendants() do
			if hasprop(v, "ZIndex") then
				v.ZIndex = v.ZIndex + (windows * 10)
			end
		end
	end

	return window_data, Window
end

local configs = {
    main = {
        enabled = true,
        aimlockkey = "q",
        prediction = 0.15634,
        aimpart = 'HumanoidRootPart',
        notifications = true
    }
}

local boxsettings = {
    box = {
        Showbox = true,
        boxsize = Vector3.new(3.3, 3, 2.8), -- Box Size
        markercolor = Color3.fromRGB(255, 255, 255),
        markersize = UDim2.new(1, 0, 1, 0)
    }
}

local box = Instance.new("Part", game.Workspace)
box.Material = Enum.Material.ForceField
box.Color = Color3.fromRGB(199, 110, 255)
 
local Mouse = game.Players.LocalPlayer:GetMouse()
 
function makemarker(Parent, Adornee, Color, Size, Size2)
    local box = Instance.new("BillboardGui", Parent)
    box.Name = "Skidded"
    box.Adornee = Adornee
    box.Size = UDim2.new(Size, Size2, Size, Size2)
    box.AlwaysOnTop = true
    local a = Instance.new("Frame", box)
    a.Size = boxsettings.box.markersize
    a.BackgroundColor3 = Color
 
    local g = Instance.new("UICorner", a)
    g.CornerRadius = UDim.new(50, 50)
    return (box)
end
 
local Plr
 
local highlight = Instance.new("Highlight")
highlight.FillColor = Color3.fromRGB(199, 110, 255)
highlight.Parent = game.CoreGui
highlight.OutlineTransparency = 0
highlight.OutlineColor = Color3.new(1, 1, 1)
highlight.FillTransparency = 0.5
 
local line = Drawing.new("Line")
line.Visible = true
line.Color = Color3.fromRGB(199, 110, 255)
line.Thickness = 2
line.Transparency = 1

 
getgenv().crosshair = {
    enabled = true,
    refreshrate = 0,
    mode = 'aim',
    position = Vector2.new(0,0),
 
    width = 1.5,
    length = 10,
    radius = 11,
    color = Color3.fromRGB(199, 110, 255),
 
    spin = true,
    spin_speed = 150,
    spin_max = 340,
    spin_style = Enum.EasingStyle.Sine,
 
    resize = true,
    resize_speed = 150,
    resize_min = 5,
    resize_max = 22,
}
 
local old; old = hookfunction(Drawing.new, function(class, properties)
    local drawing = old(class)
    for i,v in next, properties or {} do
        drawing[i] = v
    end
    return drawing
end)
 
local runservice = game:GetService('RunService')
local inputservice = game:GetService('UserInputService')
local tweenservice = game:GetService('TweenService')
local camera = workspace.CurrentCamera
 
local last_render = 0
 
local drawings = {
    crosshair = {},
    text = {Drawing.new('Text', {Size = 13, Font = 2, Outline = true, Text = 'tapbot', Color = Color3.new(1,1,1)}),
            Drawing.new('Text', {Size = 13, Font = 2, Outline = true, Text = ".cc"}),},
}
 
for idx = 1, 8 do
    drawings.crosshair[idx] = Drawing.new('Line')
end
 
function solve(angle, radius)
    return Vector2.new(
        math.sin(math.rad(angle)) * radius,
        math.cos(math.rad(angle)) * radius
    )
end
 
runservice.PostSimulation:Connect(function()
 
 local aimPosition = game.Players.LocalPlayer:FindFirstChild("PlayerGui")
    and game.Players.LocalPlayer.PlayerGui:FindFirstChild("MainScreenGui")
    and game.Players.LocalPlayer.PlayerGui.MainScreenGui:FindFirstChild("Aim")
    and game.Players.LocalPlayer.PlayerGui.MainScreenGui.Aim.AbsolutePosition
 local cursorOffset = Vector2.new(0, 40)
 
    
    
    local _tick = tick()
 
    if _tick - last_render > crosshair.refreshrate then
        last_render = _tick
 
        local position = (
            crosshair.mode == 'center' and camera.ViewportSize / 2 or
            crosshair.mode == 'aim' and aimPosition + cursorOffset or
            crosshair.mode == 'mouse' and inputservice:GetMouseLocation() or
            crosshair.position
        )
 
        local text_x = drawings.text[1].TextBounds.X + drawings.text[2].TextBounds.X
 
        drawings.text[1].Visible = crosshair.enabled
        drawings.text[2].Visible = crosshair.enabled
 
        if crosshair.enabled then
            drawings.text[1].Position = position + Vector2.new(-text_x / 2, crosshair.radius + (crosshair.resize and crosshair.resize_max or crosshair.length) + 15)
            drawings.text[2].Position = drawings.text[1].Position + Vector2.new(drawings.text[1].TextBounds.X)
            drawings.text[2].Color = crosshair.color
            
            for idx = 1, 4 do
                local outline = drawings.crosshair[idx]
                local inline = drawings.crosshair[idx + 4]
    
                local angle = (idx - 1) * 90
                local length = crosshair.length
    
                if crosshair.spin then
                    local spin_angle = -_tick * crosshair.spin_speed % crosshair.spin_max
                    angle = angle + tweenservice:GetValue(spin_angle / 360, crosshair.spin_style, Enum.EasingDirection.InOut) * 360
                end
    
                if crosshair.resize then
                    local resize_length = tick() * crosshair.resize_speed % 180
                    length = crosshair.resize_min + math.sin(math.rad(resize_length)) * crosshair.resize_max
                end
    
                inline.Visible = true
                inline.Color = crosshair.color
                inline.From = position + solve(angle, crosshair.radius)
                inline.To = position + solve(angle, crosshair.radius + length)
                inline.Thickness = crosshair.width
    
                outline.Visible = true
                outline.From = position + solve(angle, crosshair.radius - 1)
                outline.To = position + solve(angle, crosshair.radius + length + 1)
                outline.Thickness = crosshair.width + 1.5    
            end
        else
            for idx = 1, 8 do
                drawings.crosshair[idx].Visible = false
            end
        end
 
    end
end)
 
Mouse.KeyDown:Connect(function(KeyPressed)
    if KeyPressed == (configs.main.aimlockkey) then
        if configs.main.enabled == true then
            configs.main.enabled = false
            if configs.main.notifications == true then
                Plr = FindClosestUser()
                Notify("tapbot.cc", "Unlocked", 1.5)
            end
            highlight.Adornee = game.CoreGui
        else
            Plr = FindClosestUser()
            configs.main.enabled = true
            if configs.main.notifications == true then
                Notify("tapbot.cc", "Locking on target: ".. Plr.Character.Humanoid.DisplayName, 1.5)
            end
            highlight.Adornee = Plr.Character
        end
    end
end)
 
local data = game.Players:GetPlayers()
function noob(player)
    local character
    repeat
        wait()
    until player.Character
    local handler = makemarker(guimain, player.Character:WaitForChild(configs.main.aimpart),
        Color3.fromRGB(107, 184, 255), 0.10, 8)
    handler.Name = player.Name
    player.CharacterAdded:connect(function(Char)
        handler.Adornee = Char:WaitForChild("HumanoidRootPart")
    end)
end
 
for i = 1, #data do
    if data[i] ~= game.Players.LocalPlayer then
        noob(data[i])
    end
end
 
game.Players.PlayerAdded:connect(function(Player)
    noob(Player)
end)
 
spawn(function()
    box.Anchored = true
    box.CanCollide = false
    box.Size = boxsettings.box.boxsize
    if boxsettings.box.Showbox == true then
        box.Transparency = 0.80
    else
        box.Transparency = 1
    end
    makemarker(box, box, boxsettings.box.markercolor, 0.40, 1)
end)
 
function FindClosestUser()
    local closestPlayer
    local ShortestDistance = 300
 
    for i, v in pairs(game.Players:GetPlayers()) do
        if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and
            v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("HumanoidRootPart") then
            local pos = game:GetService "Workspace".CurrentCamera:WorldToViewportPoint(v.Character.PrimaryPart.Position)
            local magnitude = (Vector2.new(pos.X, pos.Y) -
                                  Vector2.new(game.Players.LocalPlayer:GetMouse().X,
                    game.Players.LocalPlayer:GetMouse().Y)).magnitude
            if magnitude < ShortestDistance then
                closestPlayer = v
                ShortestDistance = magnitude
            end
        end
    end
    return closestPlayer
end
 
game:GetService "RunService".Stepped:connect(function()
    if configs.main.enabled and Plr.Character and Plr.Character:FindFirstChild("HumanoidRootPart") then
        local aimPosition = game.Players.LocalPlayer:FindFirstChild("PlayerGui")
    and game.Players.LocalPlayer.PlayerGui:FindFirstChild("MainScreenGui")
    and game.Players.LocalPlayer.PlayerGui.MainScreenGui:FindFirstChild("Aim")
    and game.Players.LocalPlayer.PlayerGui.MainScreenGui.Aim.AbsolutePosition
        local cursorOffset = Vector2.new(0, 40)
        box.CFrame = CFrame.new(Plr.Character[configs.main.aimpart].Position +
                                    (Plr.Character.UpperTorso.Velocity * configs.main.prediction))
        local Vector1 = camera:WorldToViewportPoint(Plr.Character.HumanoidRootPart.Position)
        line.Visible = true
        line.From = Vector2.new(Vector1.X, Vector1.Y)
        line.To = aimPosition + cursorOffset
    else
        local aimPosition = game.Players.LocalPlayer:FindFirstChild("PlayerGui")
    and game.Players.LocalPlayer.PlayerGui:FindFirstChild("MainScreenGui")
    and game.Players.LocalPlayer.PlayerGui.MainScreenGui:FindFirstChild("Aim")
    and game.Players.LocalPlayer.PlayerGui.MainScreenGui.Aim.AbsolutePosition
        local cursorOffset = Vector2.new(0, 40)
        box.CFrame = CFrame.new(0, 9999, 0)
        line.Visible = false
        line.From = Vector2.new(0,0)
        line.To = Vector2.new(0,0)
        crosshair.resize = false
    end
end)
 
repeat
    wait()
until game:IsLoaded()
local mt = getrawmetatable(game)
local old = mt.__namecall
setreadonly(mt, false)
mt.__namecall = newcclosure(function(...)
    local args = {...}
    if configs.main.enabled and getnamecallmethod() == "FireServer" and args[2] == "UpdateMousePos" then
        args[3] = Plr.Character[configs.main.aimpart].Position +
                  (Plr.Character[configs.main.aimpart].Velocity * configs.main.prediction)
        return old(unpack(args))
    end
    return old(...)
end)

local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()

function playSound(soundId, parent)
    local sound = Instance.new("Sound")
    sound.SoundId = soundId
    sound.Parent = parent
    sound:Play()
end
function Notify(text, desc, time)
playSound("rbxassetid://4835664238", game.Workspace)
Notification:Notify(
    {Title = text, Description = desc},
    {OutlineColor = Color3.fromRGB(199, 110, 255),Time = time, Type = "default"}
)
end

local window = library:AddWindow("tapbot.cc", {
	main_color = Color3.fromRGB(199, 110, 255), -- Color
	min_size = Vector2.new(250, 346), -- Size of the gui
	can_resize = true, -- true or false
})

local features = window:AddTab("Aiming")

local misc = window:AddTab("Misc") -- Name of tab
features:Show() -- shows the tab

features:AddLabel("Main aiming")

local oldAimpart

local dropdown = features:AddDropdown("Select your aimpart", function(text)
oldAimpart = text
Notify("tapbot.cc", "Current aim-part: ".. text, 1.5)
configs.main.aimpart = text
end)

local bodyParts = {
    "Head", "UpperTorso", "HumanoidRootPart", "LowerTorso", "LeftHand", "RightHand", 
    "LeftLowerArm", "RightLowerArm", "LeftUpperArm", "RightUpperArm", "LeftFoot", 
    "LeftLowerLeg", "LeftUpperLeg", "RightLowerLeg", "RightFoot", "RightUpperLeg"
}

for _, part in ipairs(bodyParts) do
    dropdown:Add(part)
end

features:AddTextBox("Prediction", function(pred)
Notify("tapbot.cc", "Current prediction: ".. pred, 1.5)
configs.main.prediction = pred
end)

features:AddTextBox("Lock Keybind", function(key)
Notify("tapbot.cc", "Current keybind: ".. key:upper(), 1.5)
configs.main.aimlockkey = tostring(key):lower()
end)

local switch = features:AddSwitch("Target Notifications", function(bool)
	configs.main.notifications = bool
	if bool == false then
	Notify("tapbot.cc", "Target notifications have been disabled.", 1.5)
	else
	Notify("tapbot.cc", "Target notifications have been enabled.", 1.5)
	end
end)
switch:Set(bool)

features:AddLabel("Focused aiming")

local randomSwitchFlag = false

local randomSwitch = features:AddSwitch("Randomized aimparts", function(bool)
    if bool == true then
        Notify("tapbot.cc", "Randomized aimparts has been enabled.", 1.5)
        randomSwitchFlag = true
        while randomSwitchFlag do
            randomIndex = math.random(1, #bodyParts)
            configs.main.aimpart = bodyParts[randomIndex]
            wait(0.1)
            if bool == false then
                randomSwitchFlag = false
            end
        end
    else
        randomSwitchFlag = false
        configs.main.aimpart = oldAimpart
        Notify("tapbot.cc", "Randomized aimparts has been disabled", 1.5)
    end
end)

randomSwitch:Set(false)

local cursor = misc:AddDropdown("Select your cursor position", function(offsetpos)
Notify("tapbot.cc", "Current cursorPos: ".. text, 1.5)
configs.main.aimpart = text
end)
            end)
 
